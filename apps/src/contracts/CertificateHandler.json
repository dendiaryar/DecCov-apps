{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrySC",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "Registry_sc",
          "type": "address"
        }
      ],
      "name": "DebugRegistryAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "result",
          "type": "string"
        }
      ],
      "name": "IsSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "is_exist",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "cov_certificate_identifier",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "certificate_data",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct Data.COV_CERTIFICATE",
          "name": "certificate_data",
          "type": "tuple"
        }
      ],
      "name": "certificateExist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "is_exist",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "cov_certificate_identifier",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "certificate_data",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct Data.COV_CERTIFICATE[]",
          "name": "certificate_data",
          "type": "tuple[]"
        }
      ],
      "name": "getCertificate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "isFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "timestampEvent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holder_id",
          "type": "bytes32"
        }
      ],
      "name": "getCertificatesByUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "cov_certificate_identifier",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "certificate_data",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Data.COV_CERTIFICATE[]",
          "name": "certificate_data",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "certificate_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "holder_id",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "payload",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "data_address",
          "type": "bytes32"
        }
      ],
      "name": "registerCertificate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "certificate_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "holder_id",
          "type": "bytes32"
        }
      ],
      "name": "verifyCertificate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "cov_certificate_identifier",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "certificate_data",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Data.COV_CERTIFICATE",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/Certificate/CertificateAuthorization.sol",
    "2": "contracts/Certificate/Data.sol",
    "3": "contracts/Certificate/Handler.sol",
    "4": "contracts/Certificate/Helper.sol"
  },
  "ast": {
    "absolutePath": "contracts/Certificate/Handler.sol",
    "exportedSymbols": {
      "CertificateAuthorization": [
        379
      ],
      "CertificateHandler": [
        200
      ],
      "Data": [
        30
      ],
      "Helper": [
        300
      ],
      "IssuerData": [
        310
      ]
    },
    "id": 201,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 32,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:3"
      },
      {
        "absolutePath": "contracts/Certificate/CertificateAuthorization.sol",
        "file": "./CertificateAuthorization.sol",
        "id": 33,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 380,
        "src": "65:40:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Certificate/Helper.sol",
        "file": "./Helper.sol",
        "id": 34,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 201,
        "sourceUnit": 301,
        "src": "106:22:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 35,
              "name": "CertificateAuthorization",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 379,
              "src": "161:24:3"
            },
            "id": 36,
            "nodeType": "InheritanceSpecifier",
            "src": "161:24:3"
          },
          {
            "baseName": {
              "id": 37,
              "name": "Helper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 300,
              "src": "187:6:3"
            },
            "id": 38,
            "nodeType": "InheritanceSpecifier",
            "src": "187:6:3"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 200,
        "linearizedBaseContracts": [
          200,
          300,
          30,
          379
        ],
        "name": "CertificateHandler",
        "nameLocation": "139:18:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "269:2:3",
              "statements": []
            },
            "id": 47,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 43,
                    "name": "registrySC",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40,
                    "src": "258:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 44,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 42,
                  "name": "CertificateAuthorization",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 379,
                  "src": "233:24:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "233:36:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "registrySC",
                  "nameLocation": "221:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "213:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "213:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "212:20:3"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "269:0:3"
            },
            "scope": 200,
            "src": "201:70:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "509:805:3",
              "statements": [
                {
                  "assignments": [
                    63
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "527:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 137,
                      "src": "519:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 62,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "519:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 65,
                        "name": "certificate_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "554:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 66,
                          "name": "holder_to_certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "572:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$23_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct Data.COV_CERTIFICATE storage ref[] storage ref)"
                          }
                        },
                        "id": 68,
                        "indexExpression": {
                          "id": 67,
                          "name": "holder_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "595:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "572:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$23_storage_$dyn_storage",
                          "typeString": "struct Data.COV_CERTIFICATE storage ref[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$23_storage_$dyn_storage",
                          "typeString": "struct Data.COV_CERTIFICATE storage ref[] storage ref"
                        }
                      ],
                      "id": 64,
                      "name": "isCertificateExist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "535:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$23_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes32,struct Data.COV_CERTIFICATE memory[] memory) pure returns (uint256)"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "535:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "519:87:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 71,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "620:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "628:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "620:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 135,
                    "nodeType": "Block",
                    "src": "850:458:3",
                    "statements": [
                      {
                        "condition": {
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "868:50:3",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 94,
                                "name": "certificate_hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49,
                                "src": "881:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 95,
                                "name": "payload",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53,
                                "src": "899:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 96,
                                "name": "holder_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51,
                                "src": "908:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 93,
                              "name": "compareHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "869:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_string_memory_ptr_$_t_bytes32_$returns$_t_bool_$",
                                "typeString": "function (bytes32,string memory,bytes32) pure returns (bool)"
                              }
                            },
                            "id": 97,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "869:49:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 107,
                        "nodeType": "IfStatement",
                        "src": "864:150:3",
                        "trueBody": {
                          "id": 106,
                          "nodeType": "Block",
                          "src": "919:95:3",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 100,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "952:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "6661696c68617368",
                                    "id": 101,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "958:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_f069b51feb95e2a0acd2ad26d6b925a56a997a6b26413c7d69baa31099775232",
                                      "typeString": "literal_string \"failhash\""
                                    },
                                    "value": "failhash"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_f069b51feb95e2a0acd2ad26d6b925a56a997a6b26413c7d69baa31099775232",
                                      "typeString": "literal_string \"failhash\""
                                    }
                                  ],
                                  "id": 99,
                                  "name": "IsSuccess",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 211,
                                  "src": "942:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory)"
                                  }
                                },
                                "id": 102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "942:27:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 103,
                              "nodeType": "EmitStatement",
                              "src": "937:32:3"
                            },
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "994:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 61,
                              "id": 105,
                              "nodeType": "Return",
                              "src": "987:12:3"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          109
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 109,
                            "mutability": "mutable",
                            "name": "timestamp",
                            "nameLocation": "1035:9:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 135,
                            "src": "1027:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 108,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1027:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 112,
                        "initialValue": {
                          "expression": {
                            "id": 110,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1047:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1047:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1027:35:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 118,
                                  "name": "certificate_hash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49,
                                  "src": "1144:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 119,
                                  "name": "data_address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 55,
                                  "src": "1161:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 120,
                                  "name": "timestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "1174:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 117,
                                "name": "COV_CERTIFICATE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "1128:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_COV_CERTIFICATE_$23_storage_ptr_$",
                                  "typeString": "type(struct Data.COV_CERTIFICATE storage pointer)"
                                }
                              },
                              "id": 121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1128:56:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_COV_CERTIFICATE_$23_memory_ptr",
                                "typeString": "struct Data.COV_CERTIFICATE memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_COV_CERTIFICATE_$23_memory_ptr",
                                "typeString": "struct Data.COV_CERTIFICATE memory"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 113,
                                "name": "holder_to_certificates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "1076:22:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$23_storage_$dyn_storage_$",
                                  "typeString": "mapping(bytes32 => struct Data.COV_CERTIFICATE storage ref[] storage ref)"
                                }
                              },
                              "id": 115,
                              "indexExpression": {
                                "id": 114,
                                "name": "holder_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51,
                                "src": "1099:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1076:33:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$23_storage_$dyn_storage",
                                "typeString": "struct Data.COV_CERTIFICATE storage ref[] storage ref"
                              }
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1076:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_COV_CERTIFICATE_$23_storage_$dyn_storage_ptr_$_t_struct$_COV_CERTIFICATE_$23_storage_$returns$__$bound_to$_t_array$_t_struct$_COV_CERTIFICATE_$23_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Data.COV_CERTIFICATE storage ref[] storage pointer,struct Data.COV_CERTIFICATE storage ref)"
                            }
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1076:109:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 123,
                        "nodeType": "ExpressionStatement",
                        "src": "1076:109:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1214:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "73746f726564",
                              "id": 126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1219:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_62abd276aae8e6f841196366f5e78aedbdb6cc3fbe30da0c9ca4cb4382c135cd",
                                "typeString": "literal_string \"stored\""
                              },
                              "value": "stored"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_62abd276aae8e6f841196366f5e78aedbdb6cc3fbe30da0c9ca4cb4382c135cd",
                                "typeString": "literal_string \"stored\""
                              }
                            ],
                            "id": 124,
                            "name": "IsSuccess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "1204:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1204:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 128,
                        "nodeType": "EmitStatement",
                        "src": "1199:29:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 130,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "1262:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 129,
                            "name": "timestampEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 234,
                            "src": "1247:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1247:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 132,
                        "nodeType": "EmitStatement",
                        "src": "1242:30:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1293:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 61,
                        "id": 134,
                        "nodeType": "Return",
                        "src": "1286:11:3"
                      }
                    ]
                  },
                  "id": 136,
                  "nodeType": "IfStatement",
                  "src": "616:692:3",
                  "trueBody": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "631:213:3",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "66616c7365",
                              "id": 75,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "660:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "616c7265616479",
                              "id": 76,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "666:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4d68d74f0eb71ad33b0461f9e93dd42c23615ec558b78fd521e288d1779313d9",
                                "typeString": "literal_string \"already\""
                              },
                              "value": "already"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4d68d74f0eb71ad33b0461f9e93dd42c23615ec558b78fd521e288d1779313d9",
                                "typeString": "literal_string \"already\""
                              }
                            ],
                            "id": 74,
                            "name": "IsSuccess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "650:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "650:26:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78,
                        "nodeType": "EmitStatement",
                        "src": "645:31:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 80,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "729:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 81,
                                  "name": "holder_to_certificates",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29,
                                  "src": "751:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$23_storage_$dyn_storage_$",
                                    "typeString": "mapping(bytes32 => struct Data.COV_CERTIFICATE storage ref[] storage ref)"
                                  }
                                },
                                "id": 83,
                                "indexExpression": {
                                  "id": 82,
                                  "name": "holder_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51,
                                  "src": "774:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "751:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$23_storage_$dyn_storage",
                                  "typeString": "struct Data.COV_CERTIFICATE storage ref[] storage ref"
                                }
                              },
                              "id": 87,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 86,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 84,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63,
                                  "src": "785:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 85,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "791:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "785:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "751:42:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_COV_CERTIFICATE_$23_storage",
                                "typeString": "struct Data.COV_CERTIFICATE storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_struct$_COV_CERTIFICATE_$23_storage",
                                "typeString": "struct Data.COV_CERTIFICATE storage ref"
                              }
                            ],
                            "id": 79,
                            "name": "certificateExist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "695:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_struct$_COV_CERTIFICATE_$23_memory_ptr_$returns$__$",
                              "typeString": "function (bool,struct Data.COV_CERTIFICATE memory)"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "695:112:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 89,
                        "nodeType": "EmitStatement",
                        "src": "690:117:3"
                      },
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "828:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 61,
                        "id": 91,
                        "nodeType": "Return",
                        "src": "821:12:3"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "11f3524c",
            "id": 138,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 58,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 57,
                  "name": "grantAccess",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 378,
                  "src": "462:11:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "462:11:3"
              }
            ],
            "name": "registerCertificate",
            "nameLocation": "290:19:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "certificate_hash",
                  "nameLocation": "327:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "319:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "319:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "holder_id",
                  "nameLocation": "362:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "354:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "354:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "395:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "381:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "data_address",
                  "nameLocation": "420:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "412:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "309:129:3"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "496:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "491:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "490:14:3"
            },
            "scope": 200,
            "src": "281:1033:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "1439:272:3",
              "statements": [
                {
                  "assignments": [
                    151
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "1457:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 184,
                      "src": "1449:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 150,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1449:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 158,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 153,
                        "name": "certificate_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "1484:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 154,
                          "name": "holder_to_certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "1502:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$23_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct Data.COV_CERTIFICATE storage ref[] storage ref)"
                          }
                        },
                        "id": 156,
                        "indexExpression": {
                          "id": 155,
                          "name": "holder_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "1525:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1502:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$23_storage_$dyn_storage",
                          "typeString": "struct Data.COV_CERTIFICATE storage ref[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$23_storage_$dyn_storage",
                          "typeString": "struct Data.COV_CERTIFICATE storage ref[] storage ref"
                        }
                      ],
                      "id": 152,
                      "name": "isCertificateExist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "1465:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$23_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes32,struct Data.COV_CERTIFICATE memory[] memory) pure returns (uint256)"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1465:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1449:87:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 159,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "1549:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1555:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1549:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 173,
                  "nodeType": "IfStatement",
                  "src": "1546:92:3",
                  "trueBody": {
                    "id": 172,
                    "nodeType": "Block",
                    "src": "1557:81:3",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1579:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 163,
                                  "name": "holder_to_certificates",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29,
                                  "src": "1584:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$23_storage_$dyn_storage_$",
                                    "typeString": "mapping(bytes32 => struct Data.COV_CERTIFICATE storage ref[] storage ref)"
                                  }
                                },
                                "id": 165,
                                "indexExpression": {
                                  "id": 164,
                                  "name": "holder_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 142,
                                  "src": "1607:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1584:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$23_storage_$dyn_storage",
                                  "typeString": "struct Data.COV_CERTIFICATE storage ref[] storage ref"
                                }
                              },
                              "id": 169,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 168,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 166,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 151,
                                  "src": "1618:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 167,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1624:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "1618:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1584:42:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_COV_CERTIFICATE_$23_storage",
                                "typeString": "struct Data.COV_CERTIFICATE storage ref"
                              }
                            }
                          ],
                          "id": 170,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1578:49:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_COV_CERTIFICATE_$23_storage_$",
                            "typeString": "tuple(bool,struct Data.COV_CERTIFICATE storage ref)"
                          }
                        },
                        "functionReturnParameters": 149,
                        "id": 171,
                        "nodeType": "Return",
                        "src": "1571:56:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "66616c7365",
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1655:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 175,
                            "name": "holder_to_certificates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "1661:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$23_storage_$dyn_storage_$",
                              "typeString": "mapping(bytes32 => struct Data.COV_CERTIFICATE storage ref[] storage ref)"
                            }
                          },
                          "id": 177,
                          "indexExpression": {
                            "id": 176,
                            "name": "holder_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 142,
                            "src": "1684:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1661:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$23_storage_$dyn_storage",
                            "typeString": "struct Data.COV_CERTIFICATE storage ref[] storage ref"
                          }
                        },
                        "id": 181,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 178,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151,
                            "src": "1695:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1701:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1695:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1661:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_COV_CERTIFICATE_$23_storage",
                          "typeString": "struct Data.COV_CERTIFICATE storage ref"
                        }
                      }
                    ],
                    "id": 182,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1654:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_COV_CERTIFICATE_$23_storage_$",
                      "typeString": "tuple(bool,struct Data.COV_CERTIFICATE storage ref)"
                    }
                  },
                  "functionReturnParameters": 149,
                  "id": 183,
                  "nodeType": "Return",
                  "src": "1647:57:3"
                }
              ]
            },
            "functionSelector": "1f75435d",
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyCertificate",
            "nameLocation": "1329:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "certificate_hash",
                  "nameLocation": "1355:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1347:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1347:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "holder_id",
                  "nameLocation": "1380:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1372:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1346:44:3"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1411:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1411:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 148,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1416:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_COV_CERTIFICATE_$23_memory_ptr",
                    "typeString": "struct Data.COV_CERTIFICATE"
                  },
                  "typeName": {
                    "id": 147,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 146,
                      "name": "COV_CERTIFICATE",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23,
                      "src": "1416:15:3"
                    },
                    "referencedDeclaration": 23,
                    "src": "1416:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_COV_CERTIFICATE_$23_storage_ptr",
                      "typeString": "struct Data.COV_CERTIFICATE"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1410:29:3"
            },
            "scope": 200,
            "src": "1320:391:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 198,
              "nodeType": "Block",
              "src": "1859:57:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 194,
                      "name": "holder_to_certificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1876:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$23_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct Data.COV_CERTIFICATE storage ref[] storage ref)"
                      }
                    },
                    "id": 196,
                    "indexExpression": {
                      "id": 195,
                      "name": "holder_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "1899:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1876:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$23_storage_$dyn_storage",
                      "typeString": "struct Data.COV_CERTIFICATE storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 193,
                  "id": 197,
                  "nodeType": "Return",
                  "src": "1869:40:3"
                }
              ]
            },
            "functionSelector": "54ca51db",
            "id": 199,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCertificatesByUser",
            "nameLocation": "1726:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "holder_id",
                  "nameLocation": "1756:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "1748:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1748:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1747:19:3"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "certificate_data",
                  "nameLocation": "1837:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "1812:41:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$23_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Data.COV_CERTIFICATE[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 190,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 189,
                        "name": "COV_CERTIFICATE",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 23,
                        "src": "1812:15:3"
                      },
                      "referencedDeclaration": 23,
                      "src": "1812:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_COV_CERTIFICATE_$23_storage_ptr",
                        "typeString": "struct Data.COV_CERTIFICATE"
                      }
                    },
                    "id": 191,
                    "nodeType": "ArrayTypeName",
                    "src": "1812:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$23_storage_$dyn_storage_ptr",
                      "typeString": "struct Data.COV_CERTIFICATE[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1811:43:3"
            },
            "scope": 200,
            "src": "1717:199:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 201,
        "src": "130:1790:3",
        "usedErrors": []
      }
    ],
    "src": "32:1888:3"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610a50380380610a5083398101604081905261002f91610062565b600280546001600160a01b03199081163317909155600080546001600160a01b0390931692909116919091179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b6109af806100a16000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806311f3524c146100515780631f75435d1461007957806354ca51db1461009a578063f21de1e8146100ba575b600080fd5b61006461005f36600461074e565b6100d5565b60405190151581526020015b60405180910390f35b61008c61008736600461072c565b6103bf565b6040516100709291906108c3565b6100ad6100a8366004610713565b61053f565b6040516100709190610861565b6000546040516001600160a01b039091168152602001610070565b60006100e0336105cf565b15156001146100ee57600080fd5b60008481526003602090815260408083208054825181850281018501909352808352610177938a93929190869084015b8282101561016e578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250508152602001906001019061011e565b50505050610655565b90508015610275577fb7cdced8c7c4e48fcb5e29e76371e78f62509ff97a6175d44f84ad36252008e460006040516101d2911515815260406020820181905260079082015266616c726561647960c81b606082015260800190565b60405180910390a160008581526003602052604090207fccc0c5d3c89cfcf7d56826ec7ef2aebe60e5dfe931762fef6892936d105549b7906001906102178285610905565b815481106102275761022761094d565b90600052602060002090600302016040516102639291909115158252805460208301526001810154604083015260020154606082015260800190565b60405180910390a160009150506103b7565b6102808685876106b6565b6102d8577fb7cdced8c7c4e48fcb5e29e76371e78f62509ff97a6175d44f84ad36252008e460006040516102639115158152604060208201819052600890820152670ccc2d2d8d0c2e6d60c31b606082015260800190565b60008581526003602081815260408084208151606080820184528c82528185018a815242838601818152855460018082018855968b5299889020945199909802909301978855518784015594516002909601959095558151908152918201819052600690820152651cdd1bdc995960d21b918101919091527fb7cdced8c7c4e48fcb5e29e76371e78f62509ff97a6175d44f84ad36252008e49060800160405180910390a16040518181527fb776f27e2626443cee65f6c6f97999f4a5c737555723bdd3513a565406a61fed9060200160405180910390a16001925050505b949350505050565b604080516060810182526000808252602082018190529181018290526000838152600360209081526040808320805482518185028101850190935280835261045893899392919086908401821561016e578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250508152602001906001019061011e565b905080156104cf57600084815260036020526040902060019061047b8284610905565b8154811061048b5761048b61094d565b906000526020600020906003020180604051806060016040529081600082015481526020016001820154815260200160028201548152505090509250925050610538565b60008481526003602052604081206104e8600184610905565b815481106104f8576104f861094d565b9060005260206000209060030201806040518060600160405290816000820154815260200160018201548152602001600282015481525050905092509250505b9250929050565b606060036000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156105c45783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020019060010190610574565b505050509050919050565b60008054604051631830003560e21b81526001600160a01b038481166004830152909116906360c000d490602401602060405180830381600087803b15801561061757600080fd5b505af115801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f91906106f1565b92915050565b6000805b82518110156106ac57838382815181106106755761067561094d565b602002602001015160000151141561069a576106928160016108ed565b91505061064f565b806106a48161091c565b915050610659565b5060009392505050565b60008082846040516020016106cc92919061081a565b60408051601f19818403018152919052805160209091012085149150505b9392505050565b60006020828403121561070357600080fd5b815180151581146106ea57600080fd5b60006020828403121561072557600080fd5b5035919050565b6000806040838503121561073f57600080fd5b50508035926020909101359150565b6000806000806080858703121561076457600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561078a57600080fd5b818701915087601f83011261079e57600080fd5b8135818111156107b0576107b0610963565b604051601f8201601f19908116603f011681019083821181831017156107d8576107d8610963565b816040528281528a60208487010111156107f157600080fd5b826020860160208301376000928101602001929092525095989497509495606001359450505050565b8281526000825160005b8181101561084057602081860181015185830182015201610824565b81811115610852576000602083860101525b50919091016020019392505050565b6020808252825182820181905260009190848201906040850190845b818110156108b7576108a48385518051825260208082015190830152604090810151910152565b928401926060929092019160010161087d565b50909695505050505050565b8215158152608081016106ea60208301848051825260208082015190830152604090810151910152565b6000821982111561090057610900610937565b500190565b60008282101561091757610917610937565b500390565b600060001982141561093057610930610937565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212200391c16afd68c643409529b092166f0e55d36c0eb1995e45c93add54bcaaf4b364736f6c63430008070033",
  "bytecodeSha1": "f0e43fa4064e207db892e4909d2783bec3d2b54d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "CertificateHandler",
  "coverageMap": {
    "branches": {
      "1": {},
      "2": {},
      "3": {
        "CertificateHandler.registerCertificate": {
          "17": [
            620,
            629,
            false
          ],
          "18": [
            869,
            918,
            false
          ]
        },
        "CertificateHandler.verifyCertificate": {
          "19": [
            1549,
            1556,
            false
          ]
        }
      },
      "4": {
        "Helper.isCertificateExist": {
          "20": [
            749,
            810,
            false
          ]
        }
      }
    },
    "statements": {
      "1": {
        "CertificateAuthorization.getRegistryAddress": {
          "0": [
            831,
            847
          ]
        },
        "CertificateAuthorization.verifyIssuer": {
          "12": [
            934,
            983
          ]
        }
      },
      "2": {},
      "3": {
        "CertificateHandler.getCertificatesByUser": {
          "11": [
            1869,
            1909
          ]
        },
        "CertificateHandler.registerCertificate": {
          "1": [
            645,
            676
          ],
          "2": [
            690,
            807
          ],
          "3": [
            821,
            833
          ],
          "4": [
            937,
            969
          ],
          "5": [
            1076,
            1185
          ],
          "6": [
            1199,
            1228
          ],
          "7": [
            1242,
            1272
          ],
          "8": [
            1286,
            1297
          ]
        },
        "CertificateHandler.verifyCertificate": {
          "9": [
            1571,
            1627
          ],
          "10": [
            1647,
            1704
          ]
        }
      },
      "4": {
        "Helper.compareHash": {
          "16": [
            1139,
            1179
          ]
        },
        "Helper.isCertificateExist": {
          "13": [
            830,
            840
          ],
          "14": [
            726,
            729
          ],
          "15": [
            913,
            921
          ]
        }
      }
    }
  },
  "dependencies": [
    "CertificateAuthorization",
    "Data",
    "Helper"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806311f3524c146100515780631f75435d1461007957806354ca51db1461009a578063f21de1e8146100ba575b600080fd5b61006461005f36600461074e565b6100d5565b60405190151581526020015b60405180910390f35b61008c61008736600461072c565b6103bf565b6040516100709291906108c3565b6100ad6100a8366004610713565b61053f565b6040516100709190610861565b6000546040516001600160a01b039091168152602001610070565b60006100e0336105cf565b15156001146100ee57600080fd5b60008481526003602090815260408083208054825181850281018501909352808352610177938a93929190869084015b8282101561016e578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250508152602001906001019061011e565b50505050610655565b90508015610275577fb7cdced8c7c4e48fcb5e29e76371e78f62509ff97a6175d44f84ad36252008e460006040516101d2911515815260406020820181905260079082015266616c726561647960c81b606082015260800190565b60405180910390a160008581526003602052604090207fccc0c5d3c89cfcf7d56826ec7ef2aebe60e5dfe931762fef6892936d105549b7906001906102178285610905565b815481106102275761022761094d565b90600052602060002090600302016040516102639291909115158252805460208301526001810154604083015260020154606082015260800190565b60405180910390a160009150506103b7565b6102808685876106b6565b6102d8577fb7cdced8c7c4e48fcb5e29e76371e78f62509ff97a6175d44f84ad36252008e460006040516102639115158152604060208201819052600890820152670ccc2d2d8d0c2e6d60c31b606082015260800190565b60008581526003602081815260408084208151606080820184528c82528185018a815242838601818152855460018082018855968b5299889020945199909802909301978855518784015594516002909601959095558151908152918201819052600690820152651cdd1bdc995960d21b918101919091527fb7cdced8c7c4e48fcb5e29e76371e78f62509ff97a6175d44f84ad36252008e49060800160405180910390a16040518181527fb776f27e2626443cee65f6c6f97999f4a5c737555723bdd3513a565406a61fed9060200160405180910390a16001925050505b949350505050565b604080516060810182526000808252602082018190529181018290526000838152600360209081526040808320805482518185028101850190935280835261045893899392919086908401821561016e578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250508152602001906001019061011e565b905080156104cf57600084815260036020526040902060019061047b8284610905565b8154811061048b5761048b61094d565b906000526020600020906003020180604051806060016040529081600082015481526020016001820154815260200160028201548152505090509250925050610538565b60008481526003602052604081206104e8600184610905565b815481106104f8576104f861094d565b9060005260206000209060030201806040518060600160405290816000820154815260200160018201548152602001600282015481525050905092509250505b9250929050565b606060036000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156105c45783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020019060010190610574565b505050509050919050565b60008054604051631830003560e21b81526001600160a01b038481166004830152909116906360c000d490602401602060405180830381600087803b15801561061757600080fd5b505af115801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f91906106f1565b92915050565b6000805b82518110156106ac57838382815181106106755761067561094d565b602002602001015160000151141561069a576106928160016108ed565b91505061064f565b806106a48161091c565b915050610659565b5060009392505050565b60008082846040516020016106cc92919061081a565b60408051601f19818403018152919052805160209091012085149150505b9392505050565b60006020828403121561070357600080fd5b815180151581146106ea57600080fd5b60006020828403121561072557600080fd5b5035919050565b6000806040838503121561073f57600080fd5b50508035926020909101359150565b6000806000806080858703121561076457600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561078a57600080fd5b818701915087601f83011261079e57600080fd5b8135818111156107b0576107b0610963565b604051601f8201601f19908116603f011681019083821181831017156107d8576107d8610963565b816040528281528a60208487010111156107f157600080fd5b826020860160208301376000928101602001929092525095989497509495606001359450505050565b8281526000825160005b8181101561084057602081860181015185830182015201610824565b81811115610852576000602083860101525b50919091016020019392505050565b6020808252825182820181905260009190848201906040850190845b818110156108b7576108a48385518051825260208082015190830152604090810151910152565b928401926060929092019160010161087d565b50909695505050505050565b8215158152608081016106ea60208301848051825260208082015190830152604090810151910152565b6000821982111561090057610900610937565b500190565b60008282101561091757610917610937565b500390565b600060001982141561093057610930610937565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212200391c16afd68c643409529b092166f0e55d36c0eb1995e45c93add54bcaaf4b364736f6c63430008070033",
  "deployedSourceMap": "130:1790:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;281:1033;;;;;;:::i;:::-;;:::i;:::-;;;3749:14:5;;3742:22;3724:41;;3712:2;3697:18;281:1033:3;;;;;;;;1320:391;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1717:199::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;763:92:1:-;812:7;838:9;763:92;;-1:-1:-1;;;;;838:9:1;;;2794:51:5;;2782:2;2767:18;763:92:1;2648:203:5;281:1033:3;491:12;1040:24:1;1053:10;1040:12;:24::i;:::-;:32;;1068:4;1040:32;1032:41;;;;;;519:13:3::1;572:33:::0;;;:22:::1;:33;::::0;;;;;;;535:71;;;;;;::::1;::::0;;;;;;;;;;::::1;::::0;554:16;;535:71;572:33;535:71;519:13;;535:71;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;:18;:71::i;:::-;519:87:::0;-1:-1:-1;620:9:3;;616:692:::1;;650:26;660:5;650:26;;;;4007:14:5::0;4000:22;3982:41;;4059:2;4054;4039:18;;4032:30;;;4098:1;4078:18;;;4071:29;-1:-1:-1;;;4131:2:5;4116:18;;4109:37;4178:3;4163:19;;3776:412;650:26:3::1;;;;;;;;751:33;::::0;;;:22:::1;:33;::::0;;;;695:112:::1;::::0;729:4:::1;::::0;785:7:::1;729:4:::0;785:5;:7:::1;:::i;:::-;751:42;;;;;;;;:::i;:::-;;;;;;;;;;;695:112;;;;;;5633:14:5::0;;5626:22;5608:41;;5685:13;;5680:2;5665:18;;5658:41;5753:4;5741:17;;5735:24;5730:2;5715:18;;5708:52;5814:4;5802:17;5796:24;5791:2;5776:18;;5769:52;5595:3;5580:19;;5380:447;695:112:3::1;;;;;;;;828:5;821:12;;;;;616:692;869:49;881:16;899:7;908:9;869:11;:49::i;:::-;864:150;;942:27;952:5;942:27;;;;4840:14:5::0;4833:22;4815:41;;4892:2;4887;4872:18;;4865:30;;;4931:1;4911:18;;;4904:29;-1:-1:-1;;;4964:2:5;4949:18;;4942:38;5012:3;4997:19;;4609:413;864:150:3::1;1027:17;1076:33:::0;;;:22:::1;:33;::::0;;;;;;;1128:56;;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;;;1047:15:::1;1128:56:::0;;;;;;1076:109;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;1204:24;;4399:41:5;;;4456:18;;;4449:30;;;4515:1;4495:18;;;4488:29;-1:-1:-1;;;4533:18:5;;;4526:36;;;;1204:24:3::1;::::0;4594:3:5;4579:19;1204:24:3::1;;;;;;;1247:25;::::0;5978::5;;;1247::3::1;::::0;5966:2:5;5951:18;1247:25:3::1;;;;;;;1293:4;1286:11;;;;1084:1:1;281:1033:3::0;;;;;;:::o;1320:391::-;-1:-1:-1;;;;;;;;1411:4:3;-1:-1:-1;;;;;;;;;;;;;;;1449:13:3;1502:33;;;:22;:33;;;;;;;;1465:71;;;;;;;;;;;;;;;;;;;1484:16;;1465:71;1502:33;1465:71;1449:13;;1465:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1449:87;-1:-1:-1;1549:7:3;;1546:92;;1584:33;;;;:22;:33;;;;;1579:4;;1618:7;1579:4;1618:5;:7;:::i;:::-;1584:42;;;;;;;;:::i;:::-;;;;;;;;;;;1571:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1546:92;1655:5;1661:33;;;:22;:33;;;;;1695:7;1701:1;1695:5;:7;:::i;:::-;1661:42;;;;;;;;:::i;:::-;;;;;;;;;;;1647:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1320:391;;;;;;:::o;1717:199::-;1812:41;1876:22;:33;1899:9;1876:33;;;;;;;;;;;1869:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1717:199;;;:::o;863:128:1:-;917:4;952:9;;941:42;;-1:-1:-1;;;941:42:1;;-1:-1:-1;;;;;2812:32:5;;;941:42:1;;;2794:51:5;952:9:1;;;;941:34;;2767:18:5;;941:42:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;934:49;863:128;-1:-1:-1;;863:128:1:o;521:407:4:-;657:7;;675:190;699:18;:25;695:1;:29;675:190;;;801:9;749:18;768:1;749:21;;;;;;;;:::i;:::-;;;;;;;:48;;;:61;745:110;;;837:3;:1;839;837:3;:::i;:::-;830:10;;;;;745:110;726:3;;;;:::i;:::-;;;;675:190;;;-1:-1:-1;920:1:4;;521:407;-1:-1:-1;;;521:407:4:o;934:252::-;1043:4;1058:22;1110:8;1120:7;1093:35;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1093:35:4;;;;;;;;;1083:46;;1093:35;1083:46;;;;1146:33;;;-1:-1:-1;;934:252:4;;;;;;:::o;14:277:5:-;81:6;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;182:9;176:16;235:5;228:13;221:21;214:5;211:32;201:60;;257:1;254;247:12;296:180;355:6;408:2;396:9;387:7;383:23;379:32;376:52;;;424:1;421;414:12;376:52;-1:-1:-1;447:23:5;;296:180;-1:-1:-1;296:180:5:o;481:248::-;549:6;557;610:2;598:9;589:7;585:23;581:32;578:52;;;626:1;623;616:12;578:52;-1:-1:-1;;649:23:5;;;719:2;704:18;;;691:32;;-1:-1:-1;481:248:5:o;734:1127::-;830:6;838;846;854;907:3;895:9;886:7;882:23;878:33;875:53;;;924:1;921;914:12;875:53;960:9;947:23;937:33;;1017:2;1006:9;1002:18;989:32;979:42;;1072:2;1061:9;1057:18;1044:32;1095:18;1136:2;1128:6;1125:14;1122:34;;;1152:1;1149;1142:12;1122:34;1190:6;1179:9;1175:22;1165:32;;1235:7;1228:4;1224:2;1220:13;1216:27;1206:55;;1257:1;1254;1247:12;1206:55;1293:2;1280:16;1315:2;1311;1308:10;1305:36;;;1321:18;;:::i;:::-;1396:2;1390:9;1364:2;1450:13;;-1:-1:-1;;1446:22:5;;;1470:2;1442:31;1438:40;1426:53;;;1494:18;;;1514:22;;;1491:46;1488:72;;;1540:18;;:::i;:::-;1580:10;1576:2;1569:22;1615:2;1607:6;1600:18;1655:7;1650:2;1645;1641;1637:11;1633:20;1630:33;1627:53;;;1676:1;1673;1666:12;1627:53;1732:2;1727;1723;1719:11;1714:2;1706:6;1702:15;1689:46;1777:1;1755:15;;;1772:2;1751:24;1744:35;;;;-1:-1:-1;734:1127:5;;;;-1:-1:-1;1759:6:5;;1851:2;1836:18;1823:32;;-1:-1:-1;;;;734:1127:5:o;2083:560::-;2272:6;2267:3;2260:19;2242:3;2308:6;2302:13;2333:1;2343:159;2357:6;2354:1;2351:13;2343:159;;;2417:2;2471:14;;;2467:23;;2461:30;2443:11;;;2439:20;;2432:60;2372:10;2343:159;;;2520:6;2517:1;2514:13;2511:85;;;2584:1;2579:2;2570:6;2565:3;2561:16;2557:25;2550:36;2511:85;-1:-1:-1;2616:16:5;;;;2634:2;2612:25;;2083:560;-1:-1:-1;;;2083:560:5:o;2856:723::-;3089:2;3141:21;;;3211:13;;3114:18;;;3233:22;;;3060:4;;3089:2;3312:15;;;;3286:2;3271:18;;;3060:4;3355:198;3369:6;3366:1;3363:13;3355:198;;;3418:53;3467:3;3458:6;3452:13;1947:12;;1935:25;;2009:4;1998:16;;;1992:23;1976:14;;;1969:47;2065:4;2054:16;;;2048:23;2032:14;;2025:47;1866:212;3418:53;3528:15;;;;3500:4;3491:14;;;;;3391:1;3384:9;3355:198;;;-1:-1:-1;3570:3:5;;2856:723;-1:-1:-1;;;;;;2856:723:5:o;5027:348::-;5283:14;;5276:22;5258:41;;5245:3;5230:19;;5308:61;5365:2;5350:18;;5342:6;1947:12;;1935:25;;2009:4;1998:16;;;1992:23;1976:14;;;1969:47;2065:4;2054:16;;;2048:23;2032:14;;2025:47;1866:212;6014:128;6054:3;6085:1;6081:6;6078:1;6075:13;6072:39;;;6091:18;;:::i;:::-;-1:-1:-1;6127:9:5;;6014:128::o;6147:125::-;6187:4;6215:1;6212;6209:8;6206:34;;;6220:18;;:::i;:::-;-1:-1:-1;6257:9:5;;6147:125::o;6277:135::-;6316:3;-1:-1:-1;;6337:17:5;;6334:43;;;6357:18;;:::i;:::-;-1:-1:-1;6404:1:5;6393:13;;6277:135::o;6417:127::-;6478:10;6473:3;6469:20;6466:1;6459:31;6509:4;6506:1;6499:15;6533:4;6530:1;6523:15;6549:127;6610:10;6605:3;6601:20;6598:1;6591:31;6641:4;6638:1;6631:15;6665:4;6662:1;6655:15;6681:127;6742:10;6737:3;6733:20;6730:1;6723:31;6773:4;6770:1;6763:15;6797:4;6794:1;6787:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    130,
    1920
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x11F3524C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x1F75435D EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0x54CA51DB EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xF21DE1E8 EQ PUSH2 0xBA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x74E JUMP JUMPDEST PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C PUSH2 0x87 CALLDATASIZE PUSH1 0x4 PUSH2 0x72C JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP3 SWAP2 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST PUSH2 0xAD PUSH2 0xA8 CALLDATASIZE PUSH1 0x4 PUSH2 0x713 JUMP JUMPDEST PUSH2 0x53F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x861 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x70 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE0 CALLER PUSH2 0x5CF JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH2 0x177 SWAP4 DUP11 SWAP4 SWAP3 SWAP2 SWAP1 DUP7 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x16E JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x11E JUMP JUMPDEST POP POP POP POP PUSH2 0x655 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x275 JUMPI PUSH32 0xB7CDCED8C7C4E48FCB5E29E76371E78F62509FF97A6175D44F84AD36252008E4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x616C7265616479 PUSH1 0xC8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0xCCC0C5D3C89CFCF7D56826EC7EF2AEBE60E5DFE931762FEF6892936D105549B7 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x217 DUP3 DUP6 PUSH2 0x905 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x227 JUMPI PUSH2 0x227 PUSH2 0x94D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD PUSH2 0x263 SWAP3 SWAP2 SWAP1 SWAP2 ISZERO ISZERO DUP3 MSTORE DUP1 SLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SWAP2 POP POP PUSH2 0x3B7 JUMP JUMPDEST PUSH2 0x280 DUP7 DUP6 DUP8 PUSH2 0x6B6 JUMP JUMPDEST PUSH2 0x2D8 JUMPI PUSH32 0xB7CDCED8C7C4E48FCB5E29E76371E78F62509FF97A6175D44F84AD36252008E4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0xCCC2D2D8D0C2E6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP5 MSTORE DUP13 DUP3 MSTORE DUP2 DUP6 ADD DUP11 DUP2 MSTORE TIMESTAMP DUP4 DUP7 ADD DUP2 DUP2 MSTORE DUP6 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP9 SSTORE SWAP7 DUP12 MSTORE SWAP10 DUP9 SWAP1 KECCAK256 SWAP5 MLOAD SWAP10 SWAP1 SWAP9 MUL SWAP1 SWAP4 ADD SWAP8 DUP9 SSTORE MLOAD DUP8 DUP5 ADD SSTORE SWAP5 MLOAD PUSH1 0x2 SWAP1 SWAP7 ADD SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD SWAP1 DUP2 MSTORE SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x6 SWAP1 DUP3 ADD MSTORE PUSH6 0x1CDD1BDC9959 PUSH1 0xD2 SHL SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB7CDCED8C7C4E48FCB5E29E76371E78F62509FF97A6175D44F84AD36252008E4 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xB776F27E2626443CEE65F6C6F97999F4A5C737555723BDD3513A565406A61FED SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP3 POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH2 0x458 SWAP4 DUP10 SWAP4 SWAP3 SWAP2 SWAP1 DUP7 SWAP1 DUP5 ADD DUP3 ISZERO PUSH2 0x16E JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x11E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 PUSH2 0x47B DUP3 DUP5 PUSH2 0x905 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x48B JUMPI PUSH2 0x48B PUSH2 0x94D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP3 POP SWAP3 POP POP PUSH2 0x538 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x4E8 PUSH1 0x1 DUP5 PUSH2 0x905 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x4F8 JUMPI PUSH2 0x4F8 PUSH2 0x94D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x5C4 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x574 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x18300035 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x60C000D4 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x62B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x6F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x6AC JUMPI DUP4 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x675 JUMPI PUSH2 0x675 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x69A JUMPI PUSH2 0x692 DUP2 PUSH1 0x1 PUSH2 0x8ED JUMP JUMPDEST SWAP2 POP POP PUSH2 0x64F JUMP JUMPDEST DUP1 PUSH2 0x6A4 DUP2 PUSH2 0x91C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x659 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6CC SWAP3 SWAP2 SWAP1 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 DUP6 EQ SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x73F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x79E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x7B0 JUMPI PUSH2 0x7B0 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x7D8 JUMPI PUSH2 0x7D8 PUSH2 0x963 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP5 SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x840 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x824 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x852 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP7 ADD ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8B7 JUMPI PUSH2 0x8A4 DUP4 DUP6 MLOAD DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 PUSH1 0x60 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x87D JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x6EA PUSH1 0x20 DUP4 ADD DUP5 DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x900 JUMPI PUSH2 0x900 PUSH2 0x937 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x917 JUMPI PUSH2 0x917 PUSH2 0x937 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x930 JUMPI PUSH2 0x930 PUSH2 0x937 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB SWAP2 0xC1 PUSH11 0xFD68C643409529B092166F 0xE SSTORE 0xD3 PUSH13 0xEB1995E45C93ADD54BCAAF4B3 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        130,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x11F3524C"
    },
    "38": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "EQ",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1F75435D"
    },
    "49": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "EQ",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x79"
    },
    "53": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x54CA51DB"
    },
    "60": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9A"
    },
    "64": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF21DE1E8"
    },
    "71": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA"
    },
    "75": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "DUP1",
      "path": "3"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        130,
        1920
      ],
      "op": "REVERT",
      "path": "3"
    },
    "81": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "82": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x64"
    },
    "85": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5F"
    },
    "88": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "89": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "91": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x74E"
    },
    "94": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        281,
        1314
      ],
      "op": "JUMP",
      "path": "3"
    },
    "95": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "96": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD5"
    },
    "99": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        281,
        1314
      ],
      "op": "JUMP",
      "path": "3"
    },
    "100": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "101": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "103": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "104": {
      "op": "SWAP1"
    },
    "105": {
      "op": "ISZERO"
    },
    "106": {
      "op": "ISZERO"
    },
    "107": {
      "op": "DUP2"
    },
    "108": {
      "op": "MSTORE"
    },
    "109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "111": {
      "op": "ADD"
    },
    "112": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "113": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "115": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "116": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "DUP1",
      "path": "3"
    },
    "117": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "118": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "SUB",
      "path": "3"
    },
    "119": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "120": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "RETURN",
      "path": "3"
    },
    "121": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "122": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8C"
    },
    "125": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x87"
    },
    "128": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "129": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "131": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x72C"
    },
    "134": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1320,
        1711
      ],
      "op": "JUMP",
      "path": "3"
    },
    "135": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "136": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BF"
    },
    "139": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1320,
        1711
      ],
      "op": "JUMP",
      "path": "3"
    },
    "140": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "141": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "143": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "144": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x70"
    },
    "147": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "148": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "149": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "150": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8C3"
    },
    "153": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1320,
        1711
      ],
      "op": "JUMP",
      "path": "3"
    },
    "154": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1717,
        1916
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "155": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1717,
        1916
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAD"
    },
    "158": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1717,
        1916
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA8"
    },
    "161": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1717,
        1916
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "162": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1717,
        1916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "164": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1717,
        1916
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x713"
    },
    "167": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "jump": "i",
      "offset": [
        1717,
        1916
      ],
      "op": "JUMP",
      "path": "3"
    },
    "168": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1717,
        1916
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "169": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1717,
        1916
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x53F"
    },
    "172": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "jump": "i",
      "offset": [
        1717,
        1916
      ],
      "op": "JUMP",
      "path": "3"
    },
    "173": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1717,
        1916
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "174": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1717,
        1916
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "176": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1717,
        1916
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "177": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1717,
        1916
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x70"
    },
    "180": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1717,
        1916
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "181": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1717,
        1916
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "182": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1717,
        1916
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x861"
    },
    "185": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "jump": "i",
      "offset": [
        1717,
        1916
      ],
      "op": "JUMP",
      "path": "3"
    },
    "186": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        763,
        855
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "187": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        812,
        819
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "189": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        838,
        847
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 0
    },
    "190": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        763,
        855
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "192": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        763,
        855
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "199": {
      "op": "SHL"
    },
    "200": {
      "op": "SUB"
    },
    "201": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        838,
        847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "202": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        838,
        847
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "203": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        838,
        847
      ],
      "op": "AND",
      "path": "1"
    },
    "204": {
      "op": "DUP2"
    },
    "205": {
      "op": "MSTORE"
    },
    "206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "208": {
      "op": "ADD"
    },
    "209": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        763,
        855
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x70"
    },
    "212": {
      "op": "JUMP"
    },
    "213": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "214": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        491,
        503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "216": {
      "offset": [
        1040,
        1064
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE0"
    },
    "219": {
      "offset": [
        1053,
        1063
      ],
      "op": "CALLER",
      "path": "1"
    },
    "220": {
      "offset": [
        1040,
        1052
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5CF"
    },
    "223": {
      "jump": "i",
      "offset": [
        1040,
        1064
      ],
      "op": "JUMP",
      "path": "1"
    },
    "224": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1040,
        1064
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "225": {
      "offset": [
        1040,
        1072
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "226": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1040,
        1072
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "227": {
      "offset": [
        1068,
        1072
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "229": {
      "offset": [
        1040,
        1072
      ],
      "op": "EQ",
      "path": "1"
    },
    "230": {
      "offset": [
        1032,
        1073
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEE"
    },
    "233": {
      "offset": [
        1032,
        1073
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "234": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1032,
        1073
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "236": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1032,
        1073
      ],
      "op": "DUP1",
      "path": "1"
    },
    "237": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1032,
        1073
      ],
      "op": "REVERT",
      "path": "1"
    },
    "238": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1032,
        1073
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "239": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        519,
        532
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "241": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        572,
        605
      ],
      "op": "DUP5",
      "path": "3"
    },
    "242": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        572,
        605
      ],
      "op": "DUP2",
      "path": "3"
    },
    "243": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        572,
        605
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "244": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        572,
        594
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "246": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        572,
        605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "248": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        572,
        605
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "249": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        572,
        605
      ],
      "op": "DUP2",
      "path": "3"
    },
    "250": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        572,
        605
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "251": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        572,
        605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "253": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        572,
        605
      ],
      "op": "DUP1",
      "path": "3"
    },
    "254": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        572,
        605
      ],
      "op": "DUP4",
      "path": "3"
    },
    "255": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        572,
        605
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "256": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP1",
      "path": "3"
    },
    "257": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "258": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP3",
      "path": "3"
    },
    "259": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "260": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP2",
      "path": "3"
    },
    "261": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP6",
      "path": "3"
    },
    "262": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "MUL",
      "path": "3"
    },
    "263": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP2",
      "path": "3"
    },
    "264": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "ADD",
      "path": "3"
    },
    "265": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP6",
      "path": "3"
    },
    "266": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "ADD",
      "path": "3"
    },
    "267": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "268": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "269": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "270": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP1",
      "path": "3"
    },
    "271": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP4",
      "path": "3"
    },
    "272": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "273": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x177"
    },
    "276": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "277": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        554,
        570
      ],
      "op": "DUP11",
      "path": "3"
    },
    "278": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        554,
        570
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "279": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "280": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        572,
        605
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "281": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "282": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        519,
        532
      ],
      "op": "DUP7",
      "path": "3"
    },
    "283": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        519,
        532
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "284": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP5",
      "path": "3"
    },
    "285": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "ADD",
      "path": "3"
    },
    "286": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "287": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP3",
      "path": "3"
    },
    "288": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP3",
      "path": "3"
    },
    "289": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "LT",
      "path": "3"
    },
    "290": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "291": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16E"
    },
    "294": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "295": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP4",
      "path": "3"
    },
    "296": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP3",
      "path": "3"
    },
    "297": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "298": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "300": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "301": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "303": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "305": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "306": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "307": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "309": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "MUL",
      "path": "3"
    },
    "310": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "ADD",
      "path": "3"
    },
    "311": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "313": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "314": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP1",
      "path": "3"
    },
    "315": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "317": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "ADD",
      "path": "3"
    },
    "318": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "320": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "321": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "322": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP2",
      "path": "3"
    },
    "323": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "325": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP3",
      "path": "3"
    },
    "326": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "ADD",
      "path": "3"
    },
    "327": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "328": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP2",
      "path": "3"
    },
    "329": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "330": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "332": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "ADD",
      "path": "3"
    },
    "333": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "335": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP3",
      "path": "3"
    },
    "336": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "ADD",
      "path": "3"
    },
    "337": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "338": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP2",
      "path": "3"
    },
    "339": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "340": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "342": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "ADD",
      "path": "3"
    },
    "343": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "345": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP3",
      "path": "3"
    },
    "346": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "ADD",
      "path": "3"
    },
    "347": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "348": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP2",
      "path": "3"
    },
    "349": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "350": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "POP",
      "path": "3"
    },
    "351": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "POP",
      "path": "3"
    },
    "352": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "DUP2",
      "path": "3"
    },
    "353": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "354": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "356": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "ADD",
      "path": "3"
    },
    "357": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "358": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "360": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "ADD",
      "path": "3"
    },
    "361": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "362": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11E"
    },
    "365": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "JUMP",
      "path": "3"
    },
    "366": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "367": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "POP",
      "path": "3"
    },
    "368": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "POP",
      "path": "3"
    },
    "369": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "POP",
      "path": "3"
    },
    "370": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "POP",
      "path": "3"
    },
    "371": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        553
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x655"
    },
    "374": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        535,
        606
      ],
      "op": "JUMP",
      "path": "3"
    },
    "375": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        535,
        606
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "376": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        519,
        606
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "377": {
      "op": "POP"
    },
    "378": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        620,
        629
      ],
      "op": "DUP1",
      "path": "3"
    },
    "379": {
      "branch": 17,
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        620,
        629
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "380": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        616,
        1308
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x275"
    },
    "383": {
      "branch": 17,
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        616,
        1308
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "384": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        650,
        676
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 1,
      "value": "0xB7CDCED8C7C4E48FCB5E29E76371E78F62509FF97A6175D44F84AD36252008E4"
    },
    "417": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        660,
        665
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "419": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        650,
        676
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "421": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        650,
        676
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "422": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        650,
        676
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D2"
    },
    "425": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        650,
        676
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "426": {
      "op": "ISZERO"
    },
    "427": {
      "op": "ISZERO"
    },
    "428": {
      "op": "DUP2"
    },
    "429": {
      "op": "MSTORE"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "434": {
      "op": "DUP3"
    },
    "435": {
      "op": "ADD"
    },
    "436": {
      "op": "DUP2"
    },
    "437": {
      "op": "SWAP1"
    },
    "438": {
      "op": "MSTORE"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "441": {
      "op": "SWAP1"
    },
    "442": {
      "op": "DUP3"
    },
    "443": {
      "op": "ADD"
    },
    "444": {
      "op": "MSTORE"
    },
    "445": {
      "op": "PUSH7",
      "value": "0x616C7265616479"
    },
    "453": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "455": {
      "op": "SHL"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "458": {
      "op": "DUP3"
    },
    "459": {
      "op": "ADD"
    },
    "460": {
      "op": "MSTORE"
    },
    "461": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "463": {
      "op": "ADD"
    },
    "464": {
      "op": "SWAP1"
    },
    "465": {
      "op": "JUMP"
    },
    "466": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        650,
        676
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "467": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        650,
        676
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "469": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        650,
        676
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "470": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        650,
        676
      ],
      "op": "DUP1",
      "path": "3"
    },
    "471": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        650,
        676
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "472": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        650,
        676
      ],
      "op": "SUB",
      "path": "3"
    },
    "473": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        650,
        676
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "474": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        650,
        676
      ],
      "op": "LOG1",
      "path": "3"
    },
    "475": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        784
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x0"
    },
    "477": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        784
      ],
      "op": "DUP6",
      "path": "3"
    },
    "478": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        784
      ],
      "op": "DUP2",
      "path": "3"
    },
    "479": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        784
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "480": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        773
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "482": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        784
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "484": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        784
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "485": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        784
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "487": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        784
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "488": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        784
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "489": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        807
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xCCC0C5D3C89CFCF7D56826EC7EF2AEBE60E5DFE931762FEF6892936D105549B7"
    },
    "522": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "523": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        729,
        733
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "525": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        729,
        733
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "526": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        785,
        792
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x217"
    },
    "529": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        729,
        733
      ],
      "op": "DUP3",
      "path": "3"
    },
    "530": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        785,
        790
      ],
      "op": "DUP6",
      "path": "3"
    },
    "531": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        785,
        792
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x905"
    },
    "534": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        785,
        792
      ],
      "op": "JUMP",
      "path": "3"
    },
    "535": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        785,
        792
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "536": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        793
      ],
      "op": "DUP2",
      "path": "3"
    },
    "537": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        793
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "538": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        793
      ],
      "op": "DUP2",
      "path": "3"
    },
    "539": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        793
      ],
      "op": "LT",
      "path": "3"
    },
    "540": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        793
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x227"
    },
    "543": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        793
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "544": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        793
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x227"
    },
    "547": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        793
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x94D"
    },
    "550": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        751,
        793
      ],
      "op": "JUMP",
      "path": "3"
    },
    "551": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        793
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "552": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        793
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "553": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        793
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "555": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        793
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "556": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        793
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "558": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        793
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "560": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        793
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "561": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        793
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "562": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        793
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "564": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        793
      ],
      "op": "MUL",
      "path": "3"
    },
    "565": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        751,
        793
      ],
      "op": "ADD",
      "path": "3"
    },
    "566": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        807
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "568": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        807
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "569": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        807
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x263"
    },
    "572": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        807
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "573": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        807
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "574": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "575": {
      "op": "SWAP2"
    },
    "576": {
      "op": "ISZERO"
    },
    "577": {
      "op": "ISZERO"
    },
    "578": {
      "op": "DUP3"
    },
    "579": {
      "op": "MSTORE"
    },
    "580": {
      "op": "DUP1"
    },
    "581": {
      "op": "SLOAD"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "584": {
      "op": "DUP4"
    },
    "585": {
      "op": "ADD"
    },
    "586": {
      "op": "MSTORE"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "589": {
      "op": "DUP2"
    },
    "590": {
      "op": "ADD"
    },
    "591": {
      "op": "SLOAD"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "594": {
      "op": "DUP4"
    },
    "595": {
      "op": "ADD"
    },
    "596": {
      "op": "MSTORE"
    },
    "597": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "599": {
      "op": "ADD"
    },
    "600": {
      "op": "SLOAD"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "603": {
      "op": "DUP3"
    },
    "604": {
      "op": "ADD"
    },
    "605": {
      "op": "MSTORE"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "608": {
      "op": "ADD"
    },
    "609": {
      "op": "SWAP1"
    },
    "610": {
      "op": "JUMP"
    },
    "611": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        807
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "612": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        807
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "614": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        807
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "615": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        807
      ],
      "op": "DUP1",
      "path": "3"
    },
    "616": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        807
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "617": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        807
      ],
      "op": "SUB",
      "path": "3"
    },
    "618": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "619": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        807
      ],
      "op": "LOG1",
      "path": "3"
    },
    "620": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        828,
        833
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 3,
      "value": "0x0"
    },
    "622": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        821,
        833
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "623": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        821,
        833
      ],
      "op": "POP",
      "path": "3"
    },
    "624": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        821,
        833
      ],
      "op": "POP",
      "path": "3"
    },
    "625": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        821,
        833
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B7"
    },
    "628": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        821,
        833
      ],
      "op": "JUMP",
      "path": "3"
    },
    "629": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        616,
        1308
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "630": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        869,
        918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x280"
    },
    "633": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        881,
        897
      ],
      "op": "DUP7",
      "path": "3"
    },
    "634": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        899,
        906
      ],
      "op": "DUP6",
      "path": "3"
    },
    "635": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        908,
        917
      ],
      "op": "DUP8",
      "path": "3"
    },
    "636": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        869,
        880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6B6"
    },
    "639": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        869,
        918
      ],
      "op": "JUMP",
      "path": "3"
    },
    "640": {
      "branch": 18,
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        869,
        918
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "641": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        864,
        1014
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D8"
    },
    "644": {
      "branch": 18,
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        864,
        1014
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "645": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        942,
        969
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 4,
      "value": "0xB7CDCED8C7C4E48FCB5E29E76371E78F62509FF97A6175D44F84AD36252008E4"
    },
    "678": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        952,
        957
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "680": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        942,
        969
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "682": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        942,
        969
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "683": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        942,
        969
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x263"
    },
    "686": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        942,
        969
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "687": {
      "op": "ISZERO"
    },
    "688": {
      "op": "ISZERO"
    },
    "689": {
      "op": "DUP2"
    },
    "690": {
      "op": "MSTORE"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "695": {
      "op": "DUP3"
    },
    "696": {
      "op": "ADD"
    },
    "697": {
      "op": "DUP2"
    },
    "698": {
      "op": "SWAP1"
    },
    "699": {
      "op": "MSTORE"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "702": {
      "op": "SWAP1"
    },
    "703": {
      "op": "DUP3"
    },
    "704": {
      "op": "ADD"
    },
    "705": {
      "op": "MSTORE"
    },
    "706": {
      "op": "PUSH8",
      "value": "0xCCC2D2D8D0C2E6D"
    },
    "715": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "717": {
      "op": "SHL"
    },
    "718": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "720": {
      "op": "DUP3"
    },
    "721": {
      "op": "ADD"
    },
    "722": {
      "op": "MSTORE"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "725": {
      "op": "ADD"
    },
    "726": {
      "op": "SWAP1"
    },
    "727": {
      "op": "JUMP"
    },
    "728": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        864,
        1014
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "729": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1027,
        1044
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "731": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1109
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 5
    },
    "732": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1109
      ],
      "op": "DUP2",
      "path": "3"
    },
    "733": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1109
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "734": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1098
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "736": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1109
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "738": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1109
      ],
      "op": "DUP2",
      "path": "3"
    },
    "739": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1109
      ],
      "op": "DUP2",
      "path": "3"
    },
    "740": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1109
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "741": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1109
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "743": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1109
      ],
      "op": "DUP1",
      "path": "3"
    },
    "744": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1109
      ],
      "op": "DUP5",
      "path": "3"
    },
    "745": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1109
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "746": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "DUP2",
      "path": "3"
    },
    "747": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "748": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "750": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "DUP1",
      "path": "3"
    },
    "751": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "DUP3",
      "path": "3"
    },
    "752": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "ADD",
      "path": "3"
    },
    "753": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "DUP5",
      "path": "3"
    },
    "754": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "755": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "DUP13",
      "path": "3"
    },
    "756": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "DUP3",
      "path": "3"
    },
    "757": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "758": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "DUP2",
      "path": "3"
    },
    "759": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "DUP6",
      "path": "3"
    },
    "760": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "ADD",
      "path": "3"
    },
    "761": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "DUP11",
      "path": "3"
    },
    "762": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "DUP2",
      "path": "3"
    },
    "763": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "764": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1047,
        1062
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "765": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "DUP4",
      "path": "3"
    },
    "766": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "DUP7",
      "path": "3"
    },
    "767": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "ADD",
      "path": "3"
    },
    "768": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "DUP2",
      "path": "3"
    },
    "769": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "DUP2",
      "path": "3"
    },
    "770": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1128,
        1184
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "771": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "DUP6",
      "path": "3"
    },
    "772": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "773": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "775": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "DUP1",
      "path": "3"
    },
    "776": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "DUP3",
      "path": "3"
    },
    "777": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "ADD",
      "path": "3"
    },
    "778": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "DUP9",
      "path": "3"
    },
    "779": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "780": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "781": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "DUP12",
      "path": "3"
    },
    "782": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "783": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SWAP10",
      "path": "3"
    },
    "784": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "DUP9",
      "path": "3"
    },
    "785": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "786": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "787": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "788": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "789": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SWAP10",
      "path": "3"
    },
    "790": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "791": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SWAP9",
      "path": "3"
    },
    "792": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "MUL",
      "path": "3"
    },
    "793": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "794": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "795": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "ADD",
      "path": "3"
    },
    "796": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "797": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "DUP9",
      "path": "3"
    },
    "798": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "799": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "800": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "DUP8",
      "path": "3"
    },
    "801": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "DUP5",
      "path": "3"
    },
    "802": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "ADD",
      "path": "3"
    },
    "803": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "804": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "805": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "806": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "808": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "809": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "810": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "ADD",
      "path": "3"
    },
    "811": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "812": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "813": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "814": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1076,
        1185
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "815": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1204,
        1228
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 6
    },
    "816": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1204,
        1228
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "817": {
      "op": "SWAP1"
    },
    "818": {
      "op": "DUP2"
    },
    "819": {
      "op": "MSTORE"
    },
    "820": {
      "op": "SWAP2"
    },
    "821": {
      "op": "DUP3"
    },
    "822": {
      "op": "ADD"
    },
    "823": {
      "op": "DUP2"
    },
    "824": {
      "op": "SWAP1"
    },
    "825": {
      "op": "MSTORE"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "828": {
      "op": "SWAP1"
    },
    "829": {
      "op": "DUP3"
    },
    "830": {
      "op": "ADD"
    },
    "831": {
      "op": "MSTORE"
    },
    "832": {
      "op": "PUSH6",
      "value": "0x1CDD1BDC9959"
    },
    "839": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "841": {
      "op": "SHL"
    },
    "842": {
      "op": "SWAP2"
    },
    "843": {
      "op": "DUP2"
    },
    "844": {
      "op": "ADD"
    },
    "845": {
      "op": "SWAP2"
    },
    "846": {
      "op": "SWAP1"
    },
    "847": {
      "op": "SWAP2"
    },
    "848": {
      "op": "MSTORE"
    },
    "849": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1204,
        1228
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xB7CDCED8C7C4E48FCB5E29E76371E78F62509FF97A6175D44F84AD36252008E4"
    },
    "882": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1204,
        1228
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "885": {
      "op": "ADD"
    },
    "886": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1204,
        1228
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "888": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1204,
        1228
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "889": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1204,
        1228
      ],
      "op": "DUP1",
      "path": "3"
    },
    "890": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1204,
        1228
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "891": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1204,
        1228
      ],
      "op": "SUB",
      "path": "3"
    },
    "892": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1204,
        1228
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "893": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1204,
        1228
      ],
      "op": "LOG1",
      "path": "3"
    },
    "894": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1247,
        1272
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 7,
      "value": "0x40"
    },
    "896": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1247,
        1272
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "897": {
      "op": "DUP2"
    },
    "898": {
      "op": "DUP2"
    },
    "899": {
      "op": "MSTORE"
    },
    "900": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1247,
        1272
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xB776F27E2626443CEE65F6C6F97999F4A5C737555723BDD3513A565406A61FED"
    },
    "933": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1247,
        1272
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "936": {
      "op": "ADD"
    },
    "937": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1247,
        1272
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "939": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1247,
        1272
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "940": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1247,
        1272
      ],
      "op": "DUP1",
      "path": "3"
    },
    "941": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1247,
        1272
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "942": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1247,
        1272
      ],
      "op": "SUB",
      "path": "3"
    },
    "943": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1247,
        1272
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "944": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1247,
        1272
      ],
      "op": "LOG1",
      "path": "3"
    },
    "945": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1293,
        1297
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x1"
    },
    "947": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1286,
        1297
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "948": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1286,
        1297
      ],
      "op": "POP",
      "path": "3"
    },
    "949": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1286,
        1297
      ],
      "op": "POP",
      "path": "3"
    },
    "950": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1286,
        1297
      ],
      "op": "POP",
      "path": "3"
    },
    "951": {
      "offset": [
        1084,
        1085
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "952": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "953": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "954": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "POP",
      "path": "3"
    },
    "955": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "POP",
      "path": "3"
    },
    "956": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "POP",
      "path": "3"
    },
    "957": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1314
      ],
      "op": "POP",
      "path": "3"
    },
    "958": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "o",
      "offset": [
        281,
        1314
      ],
      "op": "JUMP",
      "path": "3"
    },
    "959": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "960": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "962": {
      "op": "DUP1"
    },
    "963": {
      "op": "MLOAD"
    },
    "964": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "966": {
      "op": "DUP2"
    },
    "967": {
      "op": "ADD"
    },
    "968": {
      "op": "DUP3"
    },
    "969": {
      "op": "MSTORE"
    },
    "970": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1411,
        1415
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "972": {
      "op": "DUP1"
    },
    "973": {
      "op": "DUP3"
    },
    "974": {
      "op": "MSTORE"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "977": {
      "op": "DUP3"
    },
    "978": {
      "op": "ADD"
    },
    "979": {
      "op": "DUP2"
    },
    "980": {
      "op": "SWAP1"
    },
    "981": {
      "op": "MSTORE"
    },
    "982": {
      "op": "SWAP2"
    },
    "983": {
      "op": "DUP2"
    },
    "984": {
      "op": "ADD"
    },
    "985": {
      "op": "DUP3"
    },
    "986": {
      "op": "SWAP1"
    },
    "987": {
      "op": "MSTORE"
    },
    "988": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1449,
        1462
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "990": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1502,
        1535
      ],
      "op": "DUP4",
      "path": "3"
    },
    "991": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1502,
        1535
      ],
      "op": "DUP2",
      "path": "3"
    },
    "992": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1502,
        1535
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "993": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1502,
        1524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "995": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1502,
        1535
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "997": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1502,
        1535
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "998": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1502,
        1535
      ],
      "op": "DUP2",
      "path": "3"
    },
    "999": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1502,
        1535
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1000": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1502,
        1535
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1002": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1502,
        1535
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1003": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1502,
        1535
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1004": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1502,
        1535
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1005": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1006": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1007": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1008": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1009": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1010": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1011": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "MUL",
      "path": "3"
    },
    "1012": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1013": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "ADD",
      "path": "3"
    },
    "1014": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1015": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "ADD",
      "path": "3"
    },
    "1016": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1017": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1018": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1019": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1020": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1021": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1022": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x458"
    },
    "1025": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1026": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1484,
        1500
      ],
      "op": "DUP10",
      "path": "3"
    },
    "1027": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1484,
        1500
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1028": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1029": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1502,
        1535
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1030": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1031": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1449,
        1462
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1032": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1449,
        1462
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1033": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1034": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "ADD",
      "path": "3"
    },
    "1035": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1036": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1037": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16E"
    },
    "1040": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1041": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1042": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1043": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1044": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1046": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1047": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1049": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1051": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1052": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1053": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1055": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "MUL",
      "path": "3"
    },
    "1056": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "ADD",
      "path": "3"
    },
    "1057": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1059": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1060": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1061": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1063": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "ADD",
      "path": "3"
    },
    "1064": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1066": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1067": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1068": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1069": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1071": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1072": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "ADD",
      "path": "3"
    },
    "1073": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1074": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1075": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1076": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1078": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "ADD",
      "path": "3"
    },
    "1079": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1081": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1082": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "ADD",
      "path": "3"
    },
    "1083": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1084": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1085": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1086": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1088": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "ADD",
      "path": "3"
    },
    "1089": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1091": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1092": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "ADD",
      "path": "3"
    },
    "1093": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1094": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1095": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1096": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "POP",
      "path": "3"
    },
    "1097": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "POP",
      "path": "3"
    },
    "1098": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1099": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1100": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1102": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "ADD",
      "path": "3"
    },
    "1103": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1104": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1106": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "ADD",
      "path": "3"
    },
    "1107": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1108": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11E"
    },
    "1111": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1112": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1465,
        1536
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1113": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1449,
        1536
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1114": {
      "op": "POP"
    },
    "1115": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1549,
        1556
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1116": {
      "branch": 19,
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1549,
        1556
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1117": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1546,
        1638
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4CF"
    },
    "1120": {
      "branch": 19,
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1546,
        1638
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1121": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1617
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x0"
    },
    "1123": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1617
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1124": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1617
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1125": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1617
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1126": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1128": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1617
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1130": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1617
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1131": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1617
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1133": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1617
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1134": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1617
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1135": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1579,
        1583
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1137": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1579,
        1583
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1138": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1618,
        1625
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47B"
    },
    "1141": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1579,
        1583
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1142": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1618,
        1623
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1143": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1618,
        1625
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x905"
    },
    "1146": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1618,
        1625
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1147": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1618,
        1625
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1148": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1626
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1149": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1626
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1150": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1626
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1151": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1626
      ],
      "op": "LT",
      "path": "3"
    },
    "1152": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1626
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x48B"
    },
    "1155": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1626
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1156": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1626
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x48B"
    },
    "1159": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1626
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x94D"
    },
    "1162": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1584,
        1626
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1163": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1626
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1164": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1626
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1165": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1626
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1167": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1626
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1168": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1626
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1170": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1626
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1172": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1626
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1173": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1626
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1174": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1626
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1176": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1626
      ],
      "op": "MUL",
      "path": "3"
    },
    "1177": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1584,
        1626
      ],
      "op": "ADD",
      "path": "3"
    },
    "1178": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1179": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1181": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1182": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1183": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1185": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "ADD",
      "path": "3"
    },
    "1186": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1188": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1189": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1190": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1191": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1193": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1194": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "ADD",
      "path": "3"
    },
    "1195": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1196": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1197": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1198": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1200": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "ADD",
      "path": "3"
    },
    "1201": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1203": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1204": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "ADD",
      "path": "3"
    },
    "1205": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1206": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1207": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1208": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1210": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "ADD",
      "path": "3"
    },
    "1211": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1213": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1214": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "ADD",
      "path": "3"
    },
    "1215": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1216": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1217": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1218": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "POP",
      "path": "3"
    },
    "1219": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "POP",
      "path": "3"
    },
    "1220": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1221": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "POP",
      "path": "3"
    },
    "1222": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1223": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "POP",
      "path": "3"
    },
    "1224": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1225": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "POP",
      "path": "3"
    },
    "1226": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "POP",
      "path": "3"
    },
    "1227": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x538"
    },
    "1230": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1571,
        1627
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1231": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1546,
        1638
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1232": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1655,
        1660
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 10,
      "value": "0x0"
    },
    "1234": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1694
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1235": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1694
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1236": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1694
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1237": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1683
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1239": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1694
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1241": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1694
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1242": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1694
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1244": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1694
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1245": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1694
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1246": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1695,
        1702
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E8"
    },
    "1249": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1251": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1695,
        1700
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1252": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1695,
        1702
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x905"
    },
    "1255": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1695,
        1702
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1256": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1695,
        1702
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1257": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1703
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1258": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1703
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1259": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1703
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1260": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1703
      ],
      "op": "LT",
      "path": "3"
    },
    "1261": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1703
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F8"
    },
    "1264": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1703
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1265": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1703
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F8"
    },
    "1268": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1703
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x94D"
    },
    "1271": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1661,
        1703
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1272": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1703
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1273": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1703
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1274": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1703
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1276": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1703
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1277": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1703
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1279": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1703
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1281": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1703
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1282": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1703
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1283": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1703
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1285": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1703
      ],
      "op": "MUL",
      "path": "3"
    },
    "1286": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1661,
        1703
      ],
      "op": "ADD",
      "path": "3"
    },
    "1287": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1288": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1290": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1291": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1292": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1294": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "ADD",
      "path": "3"
    },
    "1295": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1297": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1298": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1299": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1300": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1302": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1303": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "ADD",
      "path": "3"
    },
    "1304": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1305": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1306": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1307": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1309": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "ADD",
      "path": "3"
    },
    "1310": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1312": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1313": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "ADD",
      "path": "3"
    },
    "1314": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1315": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1316": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1317": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1319": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "ADD",
      "path": "3"
    },
    "1320": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1322": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1323": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "ADD",
      "path": "3"
    },
    "1324": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1325": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1326": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1327": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "POP",
      "path": "3"
    },
    "1328": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "POP",
      "path": "3"
    },
    "1329": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1330": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "POP",
      "path": "3"
    },
    "1331": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1332": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "POP",
      "path": "3"
    },
    "1333": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1334": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "POP",
      "path": "3"
    },
    "1335": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1647,
        1704
      ],
      "op": "POP",
      "path": "3"
    },
    "1336": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1337": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1338": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "POP",
      "path": "3"
    },
    "1339": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1340": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1341": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1320,
        1711
      ],
      "op": "POP",
      "path": "3"
    },
    "1342": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "o",
      "offset": [
        1320,
        1711
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1343": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1717,
        1916
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1344": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1812,
        1853
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1346": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1876,
        1898
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 11,
      "value": "0x3"
    },
    "1348": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1876,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1350": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1899,
        1908
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1351": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1876,
        1909
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1352": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1876,
        1909
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1353": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1876,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1355": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1876,
        1909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1356": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1876,
        1909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1357": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1876,
        1909
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1358": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1876,
        1909
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1359": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1876,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1361": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1876,
        1909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1362": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1876,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1364": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1876,
        1909
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1365": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1366": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1367": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1368": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1370": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "MUL",
      "path": "3"
    },
    "1371": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1373": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1374": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1376": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1377": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1378": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1379": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1380": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1382": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1383": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1384": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1385": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1386": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1387": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1388": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1389": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1390": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1392": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1393": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1395": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1396": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1397": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1398": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1399": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "LT",
      "path": "3"
    },
    "1400": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1401": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5C4"
    },
    "1404": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1405": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1406": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1407": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1408": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1410": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1411": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1413": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1415": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1416": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1417": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1419": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "MUL",
      "path": "3"
    },
    "1420": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1421": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1423": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1424": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1425": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1427": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1428": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1430": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1431": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1432": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1433": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1435": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1436": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1437": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1438": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1439": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1440": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1442": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1443": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1445": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1446": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1447": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1448": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1449": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1450": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1452": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1453": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1455": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1456": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1457": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1458": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1459": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1460": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "POP",
      "path": "3"
    },
    "1461": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "POP",
      "path": "3"
    },
    "1462": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1463": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1464": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1466": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1467": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1468": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1470": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "ADD",
      "path": "3"
    },
    "1471": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1472": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x574"
    },
    "1475": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1476": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1477": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "POP",
      "path": "3"
    },
    "1478": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "POP",
      "path": "3"
    },
    "1479": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "POP",
      "path": "3"
    },
    "1480": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "POP",
      "path": "3"
    },
    "1481": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1482": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1909
      ],
      "op": "POP",
      "path": "3"
    },
    "1483": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1717,
        1916
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1484": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1717,
        1916
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1485": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1717,
        1916
      ],
      "op": "POP",
      "path": "3"
    },
    "1486": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "jump": "o",
      "offset": [
        1717,
        1916
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1487": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        863,
        991
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1488": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        917,
        921
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1490": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        952,
        961
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 12
    },
    "1491": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        952,
        961
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1492": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1494": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1495": {
      "op": "PUSH4",
      "value": "0x18300035"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1502": {
      "op": "SHL"
    },
    "1503": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1504": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1511": {
      "op": "SHL"
    },
    "1512": {
      "op": "SUB"
    },
    "1513": {
      "op": "DUP5"
    },
    "1514": {
      "op": "DUP2"
    },
    "1515": {
      "op": "AND"
    },
    "1516": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1518": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1519": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "ADD",
      "path": "1"
    },
    "1520": {
      "op": "MSTORE"
    },
    "1521": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        952,
        961
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1522": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        952,
        961
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1523": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        952,
        961
      ],
      "op": "AND",
      "path": "1"
    },
    "1524": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        952,
        961
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1525": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        975
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x60C000D4"
    },
    "1530": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        975
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1533": {
      "op": "ADD"
    },
    "1534": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1536": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1538": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1539": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1540": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1541": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "SUB",
      "path": "1"
    },
    "1542": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1543": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1545": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1546": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1547": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "1548": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1549": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1550": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1551": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x617"
    },
    "1554": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1555": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1557": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1558": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1559": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1560": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "POP",
      "path": "1"
    },
    "1561": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "GAS",
      "path": "1"
    },
    "1562": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "CALL",
      "path": "1"
    },
    "1563": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1564": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1565": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1566": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x62B"
    },
    "1569": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1570": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1571": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1573": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1574": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1575": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1576": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1578": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1579": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1580": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "POP",
      "path": "1"
    },
    "1581": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "POP",
      "path": "1"
    },
    "1582": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "POP",
      "path": "1"
    },
    "1583": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "POP",
      "path": "1"
    },
    "1584": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1586": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1587": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1588": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1590": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "NOT",
      "path": "1"
    },
    "1591": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1593": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1594": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "ADD",
      "path": "1"
    },
    "1595": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "AND",
      "path": "1"
    },
    "1596": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1597": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "ADD",
      "path": "1"
    },
    "1598": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1599": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1601": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1602": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "POP",
      "path": "1"
    },
    "1603": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1604": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "ADD",
      "path": "1"
    },
    "1605": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1606": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64F"
    },
    "1609": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1610": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1611": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F1"
    },
    "1614": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "jump": "i",
      "offset": [
        941,
        983
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1615": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        941,
        983
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1616": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        934,
        983
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1617": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        863,
        991
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1618": {
      "op": "POP"
    },
    "1619": {
      "op": "POP"
    },
    "1620": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "jump": "o",
      "offset": [
        863,
        991
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1621": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        521,
        928
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1622": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        657,
        664
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1624": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        657,
        664
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1625": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        675,
        865
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1626": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        699,
        717
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1627": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        699,
        724
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1628": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        695,
        696
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1629": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        695,
        724
      ],
      "op": "LT",
      "path": "4"
    },
    "1630": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        675,
        865
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1631": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        675,
        865
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6AC"
    },
    "1634": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        675,
        865
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1635": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        801,
        810
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1636": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        767
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1637": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        768,
        769
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1638": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        770
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1639": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        770
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1640": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        770
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1641": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        770
      ],
      "op": "LT",
      "path": "4"
    },
    "1642": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        770
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x675"
    },
    "1645": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        770
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1646": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        770
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x675"
    },
    "1649": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        770
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x94D"
    },
    "1652": {
      "fn": "Helper.isCertificateExist",
      "jump": "i",
      "offset": [
        749,
        770
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1653": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        770
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1654": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        770
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1656": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        770
      ],
      "op": "MUL",
      "path": "4"
    },
    "1657": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        770
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1659": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        770
      ],
      "op": "ADD",
      "path": "4"
    },
    "1660": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        770
      ],
      "op": "ADD",
      "path": "4"
    },
    "1661": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        770
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1662": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        797
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1664": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        797
      ],
      "op": "ADD",
      "path": "4"
    },
    "1665": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        797
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1666": {
      "branch": 20,
      "fn": "Helper.isCertificateExist",
      "offset": [
        749,
        810
      ],
      "op": "EQ",
      "path": "4"
    },
    "1667": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        745,
        855
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1668": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        745,
        855
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x69A"
    },
    "1671": {
      "branch": 20,
      "fn": "Helper.isCertificateExist",
      "offset": [
        745,
        855
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1672": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        837,
        840
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 13,
      "value": "0x692"
    },
    "1675": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        837,
        838
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1676": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        839,
        840
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1678": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        837,
        840
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8ED"
    },
    "1681": {
      "fn": "Helper.isCertificateExist",
      "jump": "i",
      "offset": [
        837,
        840
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1682": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        837,
        840
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1683": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        830,
        840
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1684": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        830,
        840
      ],
      "op": "POP",
      "path": "4"
    },
    "1685": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        830,
        840
      ],
      "op": "POP",
      "path": "4"
    },
    "1686": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        830,
        840
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x64F"
    },
    "1689": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        830,
        840
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1690": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        745,
        855
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1691": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        726,
        729
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 14
    },
    "1692": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        726,
        729
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6A4"
    },
    "1695": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        726,
        729
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1696": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        726,
        729
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x91C"
    },
    "1699": {
      "fn": "Helper.isCertificateExist",
      "jump": "i",
      "offset": [
        726,
        729
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1700": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        726,
        729
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1701": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        726,
        729
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1702": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        726,
        729
      ],
      "op": "POP",
      "path": "4"
    },
    "1703": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        726,
        729
      ],
      "op": "POP",
      "path": "4"
    },
    "1704": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        675,
        865
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x659"
    },
    "1707": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        675,
        865
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1708": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        675,
        865
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1709": {
      "op": "POP"
    },
    "1710": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        920,
        921
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 15,
      "value": "0x0"
    },
    "1712": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        920,
        921
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1713": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        521,
        928
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1714": {
      "op": "POP"
    },
    "1715": {
      "op": "POP"
    },
    "1716": {
      "op": "POP"
    },
    "1717": {
      "fn": "Helper.isCertificateExist",
      "jump": "o",
      "offset": [
        521,
        928
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1718": {
      "fn": "Helper.compareHash",
      "offset": [
        934,
        1186
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1719": {
      "fn": "Helper.compareHash",
      "offset": [
        1043,
        1047
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1721": {
      "fn": "Helper.compareHash",
      "offset": [
        1058,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1722": {
      "fn": "Helper.compareHash",
      "offset": [
        1110,
        1118
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1723": {
      "fn": "Helper.compareHash",
      "offset": [
        1120,
        1127
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1724": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1726": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1727": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1729": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "ADD",
      "path": "4"
    },
    "1730": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6CC"
    },
    "1733": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1734": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1735": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1736": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x81A"
    },
    "1739": {
      "fn": "Helper.compareHash",
      "jump": "i",
      "offset": [
        1093,
        1128
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1740": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1741": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1743": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1744": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1747": {
      "op": "NOT"
    },
    "1748": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1749": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1750": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "SUB",
      "path": "4"
    },
    "1751": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "ADD",
      "path": "4"
    },
    "1752": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1753": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1754": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1755": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1756": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1757": {
      "fn": "Helper.compareHash",
      "offset": [
        1083,
        1129
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1758": {
      "fn": "Helper.compareHash",
      "offset": [
        1083,
        1129
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1759": {
      "fn": "Helper.compareHash",
      "offset": [
        1093,
        1128
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1761": {
      "fn": "Helper.compareHash",
      "offset": [
        1083,
        1129
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1762": {
      "fn": "Helper.compareHash",
      "offset": [
        1083,
        1129
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1763": {
      "fn": "Helper.compareHash",
      "offset": [
        1083,
        1129
      ],
      "op": "ADD",
      "path": "4"
    },
    "1764": {
      "fn": "Helper.compareHash",
      "offset": [
        1083,
        1129
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1765": {
      "fn": "Helper.compareHash",
      "offset": [
        1146,
        1179
      ],
      "op": "DUP6",
      "path": "4",
      "statement": 16
    },
    "1766": {
      "fn": "Helper.compareHash",
      "offset": [
        1146,
        1179
      ],
      "op": "EQ",
      "path": "4"
    },
    "1767": {
      "fn": "Helper.compareHash",
      "offset": [
        1146,
        1179
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1768": {
      "op": "POP"
    },
    "1769": {
      "op": "POP"
    },
    "1770": {
      "fn": "Helper.compareHash",
      "offset": [
        934,
        1186
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1771": {
      "fn": "Helper.compareHash",
      "offset": [
        934,
        1186
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1772": {
      "fn": "Helper.compareHash",
      "offset": [
        934,
        1186
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1773": {
      "fn": "Helper.compareHash",
      "offset": [
        934,
        1186
      ],
      "op": "POP",
      "path": "4"
    },
    "1774": {
      "fn": "Helper.compareHash",
      "offset": [
        934,
        1186
      ],
      "op": "POP",
      "path": "4"
    },
    "1775": {
      "fn": "Helper.compareHash",
      "offset": [
        934,
        1186
      ],
      "op": "POP",
      "path": "4"
    },
    "1776": {
      "fn": "Helper.compareHash",
      "jump": "o",
      "offset": [
        934,
        1186
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1777": {
      "op": "JUMPDEST"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1782": {
      "op": "DUP3"
    },
    "1783": {
      "op": "DUP5"
    },
    "1784": {
      "op": "SUB"
    },
    "1785": {
      "op": "SLT"
    },
    "1786": {
      "op": "ISZERO"
    },
    "1787": {
      "op": "PUSH2",
      "value": "0x703"
    },
    "1790": {
      "op": "JUMPI"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1793": {
      "op": "DUP1"
    },
    "1794": {
      "op": "REVERT"
    },
    "1795": {
      "op": "JUMPDEST"
    },
    "1796": {
      "op": "DUP2"
    },
    "1797": {
      "op": "MLOAD"
    },
    "1798": {
      "op": "DUP1"
    },
    "1799": {
      "op": "ISZERO"
    },
    "1800": {
      "op": "ISZERO"
    },
    "1801": {
      "op": "DUP2"
    },
    "1802": {
      "op": "EQ"
    },
    "1803": {
      "op": "PUSH2",
      "value": "0x6EA"
    },
    "1806": {
      "op": "JUMPI"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1809": {
      "op": "DUP1"
    },
    "1810": {
      "op": "REVERT"
    },
    "1811": {
      "op": "JUMPDEST"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1816": {
      "op": "DUP3"
    },
    "1817": {
      "op": "DUP5"
    },
    "1818": {
      "op": "SUB"
    },
    "1819": {
      "op": "SLT"
    },
    "1820": {
      "op": "ISZERO"
    },
    "1821": {
      "op": "PUSH2",
      "value": "0x725"
    },
    "1824": {
      "op": "JUMPI"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1827": {
      "op": "DUP1"
    },
    "1828": {
      "op": "REVERT"
    },
    "1829": {
      "op": "JUMPDEST"
    },
    "1830": {
      "op": "POP"
    },
    "1831": {
      "op": "CALLDATALOAD"
    },
    "1832": {
      "op": "SWAP2"
    },
    "1833": {
      "op": "SWAP1"
    },
    "1834": {
      "op": "POP"
    },
    "1835": {
      "jump": "o",
      "op": "JUMP"
    },
    "1836": {
      "op": "JUMPDEST"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1839": {
      "op": "DUP1"
    },
    "1840": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1842": {
      "op": "DUP4"
    },
    "1843": {
      "op": "DUP6"
    },
    "1844": {
      "op": "SUB"
    },
    "1845": {
      "op": "SLT"
    },
    "1846": {
      "op": "ISZERO"
    },
    "1847": {
      "op": "PUSH2",
      "value": "0x73F"
    },
    "1850": {
      "op": "JUMPI"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1853": {
      "op": "DUP1"
    },
    "1854": {
      "op": "REVERT"
    },
    "1855": {
      "op": "JUMPDEST"
    },
    "1856": {
      "op": "POP"
    },
    "1857": {
      "op": "POP"
    },
    "1858": {
      "op": "DUP1"
    },
    "1859": {
      "op": "CALLDATALOAD"
    },
    "1860": {
      "op": "SWAP3"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1863": {
      "op": "SWAP1"
    },
    "1864": {
      "op": "SWAP2"
    },
    "1865": {
      "op": "ADD"
    },
    "1866": {
      "op": "CALLDATALOAD"
    },
    "1867": {
      "op": "SWAP2"
    },
    "1868": {
      "op": "POP"
    },
    "1869": {
      "jump": "o",
      "op": "JUMP"
    },
    "1870": {
      "op": "JUMPDEST"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1873": {
      "op": "DUP1"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1876": {
      "op": "DUP1"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1879": {
      "op": "DUP6"
    },
    "1880": {
      "op": "DUP8"
    },
    "1881": {
      "op": "SUB"
    },
    "1882": {
      "op": "SLT"
    },
    "1883": {
      "op": "ISZERO"
    },
    "1884": {
      "op": "PUSH2",
      "value": "0x764"
    },
    "1887": {
      "op": "JUMPI"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1890": {
      "op": "DUP1"
    },
    "1891": {
      "op": "REVERT"
    },
    "1892": {
      "op": "JUMPDEST"
    },
    "1893": {
      "op": "DUP5"
    },
    "1894": {
      "op": "CALLDATALOAD"
    },
    "1895": {
      "op": "SWAP4"
    },
    "1896": {
      "op": "POP"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1899": {
      "op": "DUP6"
    },
    "1900": {
      "op": "ADD"
    },
    "1901": {
      "op": "CALLDATALOAD"
    },
    "1902": {
      "op": "SWAP3"
    },
    "1903": {
      "op": "POP"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1906": {
      "op": "DUP6"
    },
    "1907": {
      "op": "ADD"
    },
    "1908": {
      "op": "CALLDATALOAD"
    },
    "1909": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1918": {
      "op": "DUP1"
    },
    "1919": {
      "op": "DUP3"
    },
    "1920": {
      "op": "GT"
    },
    "1921": {
      "op": "ISZERO"
    },
    "1922": {
      "op": "PUSH2",
      "value": "0x78A"
    },
    "1925": {
      "op": "JUMPI"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1928": {
      "op": "DUP1"
    },
    "1929": {
      "op": "REVERT"
    },
    "1930": {
      "op": "JUMPDEST"
    },
    "1931": {
      "op": "DUP2"
    },
    "1932": {
      "op": "DUP8"
    },
    "1933": {
      "op": "ADD"
    },
    "1934": {
      "op": "SWAP2"
    },
    "1935": {
      "op": "POP"
    },
    "1936": {
      "op": "DUP8"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1939": {
      "op": "DUP4"
    },
    "1940": {
      "op": "ADD"
    },
    "1941": {
      "op": "SLT"
    },
    "1942": {
      "op": "PUSH2",
      "value": "0x79E"
    },
    "1945": {
      "op": "JUMPI"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1948": {
      "op": "DUP1"
    },
    "1949": {
      "op": "REVERT"
    },
    "1950": {
      "op": "JUMPDEST"
    },
    "1951": {
      "op": "DUP2"
    },
    "1952": {
      "op": "CALLDATALOAD"
    },
    "1953": {
      "op": "DUP2"
    },
    "1954": {
      "op": "DUP2"
    },
    "1955": {
      "op": "GT"
    },
    "1956": {
      "op": "ISZERO"
    },
    "1957": {
      "op": "PUSH2",
      "value": "0x7B0"
    },
    "1960": {
      "op": "JUMPI"
    },
    "1961": {
      "op": "PUSH2",
      "value": "0x7B0"
    },
    "1964": {
      "op": "PUSH2",
      "value": "0x963"
    },
    "1967": {
      "jump": "i",
      "op": "JUMP"
    },
    "1968": {
      "op": "JUMPDEST"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1971": {
      "op": "MLOAD"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1974": {
      "op": "DUP3"
    },
    "1975": {
      "op": "ADD"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1978": {
      "op": "NOT"
    },
    "1979": {
      "op": "SWAP1"
    },
    "1980": {
      "op": "DUP2"
    },
    "1981": {
      "op": "AND"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1984": {
      "op": "ADD"
    },
    "1985": {
      "op": "AND"
    },
    "1986": {
      "op": "DUP2"
    },
    "1987": {
      "op": "ADD"
    },
    "1988": {
      "op": "SWAP1"
    },
    "1989": {
      "op": "DUP4"
    },
    "1990": {
      "op": "DUP3"
    },
    "1991": {
      "op": "GT"
    },
    "1992": {
      "op": "DUP2"
    },
    "1993": {
      "op": "DUP4"
    },
    "1994": {
      "op": "LT"
    },
    "1995": {
      "op": "OR"
    },
    "1996": {
      "op": "ISZERO"
    },
    "1997": {
      "op": "PUSH2",
      "value": "0x7D8"
    },
    "2000": {
      "op": "JUMPI"
    },
    "2001": {
      "op": "PUSH2",
      "value": "0x7D8"
    },
    "2004": {
      "op": "PUSH2",
      "value": "0x963"
    },
    "2007": {
      "jump": "i",
      "op": "JUMP"
    },
    "2008": {
      "op": "JUMPDEST"
    },
    "2009": {
      "op": "DUP2"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2012": {
      "op": "MSTORE"
    },
    "2013": {
      "op": "DUP3"
    },
    "2014": {
      "op": "DUP2"
    },
    "2015": {
      "op": "MSTORE"
    },
    "2016": {
      "op": "DUP11"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2019": {
      "op": "DUP5"
    },
    "2020": {
      "op": "DUP8"
    },
    "2021": {
      "op": "ADD"
    },
    "2022": {
      "op": "ADD"
    },
    "2023": {
      "op": "GT"
    },
    "2024": {
      "op": "ISZERO"
    },
    "2025": {
      "op": "PUSH2",
      "value": "0x7F1"
    },
    "2028": {
      "op": "JUMPI"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2031": {
      "op": "DUP1"
    },
    "2032": {
      "op": "REVERT"
    },
    "2033": {
      "op": "JUMPDEST"
    },
    "2034": {
      "op": "DUP3"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2037": {
      "op": "DUP7"
    },
    "2038": {
      "op": "ADD"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2041": {
      "op": "DUP4"
    },
    "2042": {
      "op": "ADD"
    },
    "2043": {
      "op": "CALLDATACOPY"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2046": {
      "op": "SWAP3"
    },
    "2047": {
      "op": "DUP2"
    },
    "2048": {
      "op": "ADD"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2051": {
      "op": "ADD"
    },
    "2052": {
      "op": "SWAP3"
    },
    "2053": {
      "op": "SWAP1"
    },
    "2054": {
      "op": "SWAP3"
    },
    "2055": {
      "op": "MSTORE"
    },
    "2056": {
      "op": "POP"
    },
    "2057": {
      "op": "SWAP6"
    },
    "2058": {
      "op": "SWAP9"
    },
    "2059": {
      "op": "SWAP5"
    },
    "2060": {
      "op": "SWAP8"
    },
    "2061": {
      "op": "POP"
    },
    "2062": {
      "op": "SWAP5"
    },
    "2063": {
      "op": "SWAP6"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2066": {
      "op": "ADD"
    },
    "2067": {
      "op": "CALLDATALOAD"
    },
    "2068": {
      "op": "SWAP5"
    },
    "2069": {
      "op": "POP"
    },
    "2070": {
      "op": "POP"
    },
    "2071": {
      "op": "POP"
    },
    "2072": {
      "op": "POP"
    },
    "2073": {
      "jump": "o",
      "op": "JUMP"
    },
    "2074": {
      "op": "JUMPDEST"
    },
    "2075": {
      "op": "DUP3"
    },
    "2076": {
      "op": "DUP2"
    },
    "2077": {
      "op": "MSTORE"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2080": {
      "op": "DUP3"
    },
    "2081": {
      "op": "MLOAD"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2084": {
      "op": "JUMPDEST"
    },
    "2085": {
      "op": "DUP2"
    },
    "2086": {
      "op": "DUP2"
    },
    "2087": {
      "op": "LT"
    },
    "2088": {
      "op": "ISZERO"
    },
    "2089": {
      "op": "PUSH2",
      "value": "0x840"
    },
    "2092": {
      "op": "JUMPI"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2095": {
      "op": "DUP2"
    },
    "2096": {
      "op": "DUP7"
    },
    "2097": {
      "op": "ADD"
    },
    "2098": {
      "op": "DUP2"
    },
    "2099": {
      "op": "ADD"
    },
    "2100": {
      "op": "MLOAD"
    },
    "2101": {
      "op": "DUP6"
    },
    "2102": {
      "op": "DUP4"
    },
    "2103": {
      "op": "ADD"
    },
    "2104": {
      "op": "DUP3"
    },
    "2105": {
      "op": "ADD"
    },
    "2106": {
      "op": "MSTORE"
    },
    "2107": {
      "op": "ADD"
    },
    "2108": {
      "op": "PUSH2",
      "value": "0x824"
    },
    "2111": {
      "op": "JUMP"
    },
    "2112": {
      "op": "JUMPDEST"
    },
    "2113": {
      "op": "DUP2"
    },
    "2114": {
      "op": "DUP2"
    },
    "2115": {
      "op": "GT"
    },
    "2116": {
      "op": "ISZERO"
    },
    "2117": {
      "op": "PUSH2",
      "value": "0x852"
    },
    "2120": {
      "op": "JUMPI"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2125": {
      "op": "DUP4"
    },
    "2126": {
      "op": "DUP7"
    },
    "2127": {
      "op": "ADD"
    },
    "2128": {
      "op": "ADD"
    },
    "2129": {
      "op": "MSTORE"
    },
    "2130": {
      "op": "JUMPDEST"
    },
    "2131": {
      "op": "POP"
    },
    "2132": {
      "op": "SWAP2"
    },
    "2133": {
      "op": "SWAP1"
    },
    "2134": {
      "op": "SWAP2"
    },
    "2135": {
      "op": "ADD"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2138": {
      "op": "ADD"
    },
    "2139": {
      "op": "SWAP4"
    },
    "2140": {
      "op": "SWAP3"
    },
    "2141": {
      "op": "POP"
    },
    "2142": {
      "op": "POP"
    },
    "2143": {
      "op": "POP"
    },
    "2144": {
      "jump": "o",
      "op": "JUMP"
    },
    "2145": {
      "op": "JUMPDEST"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2148": {
      "op": "DUP1"
    },
    "2149": {
      "op": "DUP3"
    },
    "2150": {
      "op": "MSTORE"
    },
    "2151": {
      "op": "DUP3"
    },
    "2152": {
      "op": "MLOAD"
    },
    "2153": {
      "op": "DUP3"
    },
    "2154": {
      "op": "DUP3"
    },
    "2155": {
      "op": "ADD"
    },
    "2156": {
      "op": "DUP2"
    },
    "2157": {
      "op": "SWAP1"
    },
    "2158": {
      "op": "MSTORE"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2161": {
      "op": "SWAP2"
    },
    "2162": {
      "op": "SWAP1"
    },
    "2163": {
      "op": "DUP5"
    },
    "2164": {
      "op": "DUP3"
    },
    "2165": {
      "op": "ADD"
    },
    "2166": {
      "op": "SWAP1"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2169": {
      "op": "DUP6"
    },
    "2170": {
      "op": "ADD"
    },
    "2171": {
      "op": "SWAP1"
    },
    "2172": {
      "op": "DUP5"
    },
    "2173": {
      "op": "JUMPDEST"
    },
    "2174": {
      "op": "DUP2"
    },
    "2175": {
      "op": "DUP2"
    },
    "2176": {
      "op": "LT"
    },
    "2177": {
      "op": "ISZERO"
    },
    "2178": {
      "op": "PUSH2",
      "value": "0x8B7"
    },
    "2181": {
      "op": "JUMPI"
    },
    "2182": {
      "op": "PUSH2",
      "value": "0x8A4"
    },
    "2185": {
      "op": "DUP4"
    },
    "2186": {
      "op": "DUP6"
    },
    "2187": {
      "op": "MLOAD"
    },
    "2188": {
      "op": "DUP1"
    },
    "2189": {
      "op": "MLOAD"
    },
    "2190": {
      "op": "DUP3"
    },
    "2191": {
      "op": "MSTORE"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2194": {
      "op": "DUP1"
    },
    "2195": {
      "op": "DUP3"
    },
    "2196": {
      "op": "ADD"
    },
    "2197": {
      "op": "MLOAD"
    },
    "2198": {
      "op": "SWAP1"
    },
    "2199": {
      "op": "DUP4"
    },
    "2200": {
      "op": "ADD"
    },
    "2201": {
      "op": "MSTORE"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2204": {
      "op": "SWAP1"
    },
    "2205": {
      "op": "DUP2"
    },
    "2206": {
      "op": "ADD"
    },
    "2207": {
      "op": "MLOAD"
    },
    "2208": {
      "op": "SWAP2"
    },
    "2209": {
      "op": "ADD"
    },
    "2210": {
      "op": "MSTORE"
    },
    "2211": {
      "op": "JUMP"
    },
    "2212": {
      "op": "JUMPDEST"
    },
    "2213": {
      "op": "SWAP3"
    },
    "2214": {
      "op": "DUP5"
    },
    "2215": {
      "op": "ADD"
    },
    "2216": {
      "op": "SWAP3"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2219": {
      "op": "SWAP3"
    },
    "2220": {
      "op": "SWAP1"
    },
    "2221": {
      "op": "SWAP3"
    },
    "2222": {
      "op": "ADD"
    },
    "2223": {
      "op": "SWAP2"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2226": {
      "op": "ADD"
    },
    "2227": {
      "op": "PUSH2",
      "value": "0x87D"
    },
    "2230": {
      "op": "JUMP"
    },
    "2231": {
      "op": "JUMPDEST"
    },
    "2232": {
      "op": "POP"
    },
    "2233": {
      "op": "SWAP1"
    },
    "2234": {
      "op": "SWAP7"
    },
    "2235": {
      "op": "SWAP6"
    },
    "2236": {
      "op": "POP"
    },
    "2237": {
      "op": "POP"
    },
    "2238": {
      "op": "POP"
    },
    "2239": {
      "op": "POP"
    },
    "2240": {
      "op": "POP"
    },
    "2241": {
      "op": "POP"
    },
    "2242": {
      "jump": "o",
      "op": "JUMP"
    },
    "2243": {
      "op": "JUMPDEST"
    },
    "2244": {
      "op": "DUP3"
    },
    "2245": {
      "op": "ISZERO"
    },
    "2246": {
      "op": "ISZERO"
    },
    "2247": {
      "op": "DUP2"
    },
    "2248": {
      "op": "MSTORE"
    },
    "2249": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2251": {
      "op": "DUP2"
    },
    "2252": {
      "op": "ADD"
    },
    "2253": {
      "op": "PUSH2",
      "value": "0x6EA"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2258": {
      "op": "DUP4"
    },
    "2259": {
      "op": "ADD"
    },
    "2260": {
      "op": "DUP5"
    },
    "2261": {
      "op": "DUP1"
    },
    "2262": {
      "op": "MLOAD"
    },
    "2263": {
      "op": "DUP3"
    },
    "2264": {
      "op": "MSTORE"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2267": {
      "op": "DUP1"
    },
    "2268": {
      "op": "DUP3"
    },
    "2269": {
      "op": "ADD"
    },
    "2270": {
      "op": "MLOAD"
    },
    "2271": {
      "op": "SWAP1"
    },
    "2272": {
      "op": "DUP4"
    },
    "2273": {
      "op": "ADD"
    },
    "2274": {
      "op": "MSTORE"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2277": {
      "op": "SWAP1"
    },
    "2278": {
      "op": "DUP2"
    },
    "2279": {
      "op": "ADD"
    },
    "2280": {
      "op": "MLOAD"
    },
    "2281": {
      "op": "SWAP2"
    },
    "2282": {
      "op": "ADD"
    },
    "2283": {
      "op": "MSTORE"
    },
    "2284": {
      "op": "JUMP"
    },
    "2285": {
      "op": "JUMPDEST"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2288": {
      "op": "DUP3"
    },
    "2289": {
      "op": "NOT"
    },
    "2290": {
      "op": "DUP3"
    },
    "2291": {
      "op": "GT"
    },
    "2292": {
      "op": "ISZERO"
    },
    "2293": {
      "op": "PUSH2",
      "value": "0x900"
    },
    "2296": {
      "op": "JUMPI"
    },
    "2297": {
      "op": "PUSH2",
      "value": "0x900"
    },
    "2300": {
      "op": "PUSH2",
      "value": "0x937"
    },
    "2303": {
      "jump": "i",
      "op": "JUMP"
    },
    "2304": {
      "op": "JUMPDEST"
    },
    "2305": {
      "op": "POP"
    },
    "2306": {
      "op": "ADD"
    },
    "2307": {
      "op": "SWAP1"
    },
    "2308": {
      "jump": "o",
      "op": "JUMP"
    },
    "2309": {
      "op": "JUMPDEST"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2312": {
      "op": "DUP3"
    },
    "2313": {
      "op": "DUP3"
    },
    "2314": {
      "op": "LT"
    },
    "2315": {
      "op": "ISZERO"
    },
    "2316": {
      "op": "PUSH2",
      "value": "0x917"
    },
    "2319": {
      "op": "JUMPI"
    },
    "2320": {
      "op": "PUSH2",
      "value": "0x917"
    },
    "2323": {
      "op": "PUSH2",
      "value": "0x937"
    },
    "2326": {
      "jump": "i",
      "op": "JUMP"
    },
    "2327": {
      "op": "JUMPDEST"
    },
    "2328": {
      "op": "POP"
    },
    "2329": {
      "op": "SUB"
    },
    "2330": {
      "op": "SWAP1"
    },
    "2331": {
      "jump": "o",
      "op": "JUMP"
    },
    "2332": {
      "op": "JUMPDEST"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2337": {
      "op": "NOT"
    },
    "2338": {
      "op": "DUP3"
    },
    "2339": {
      "op": "EQ"
    },
    "2340": {
      "op": "ISZERO"
    },
    "2341": {
      "op": "PUSH2",
      "value": "0x930"
    },
    "2344": {
      "op": "JUMPI"
    },
    "2345": {
      "op": "PUSH2",
      "value": "0x930"
    },
    "2348": {
      "op": "PUSH2",
      "value": "0x937"
    },
    "2351": {
      "jump": "i",
      "op": "JUMP"
    },
    "2352": {
      "op": "JUMPDEST"
    },
    "2353": {
      "op": "POP"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2356": {
      "op": "ADD"
    },
    "2357": {
      "op": "SWAP1"
    },
    "2358": {
      "jump": "o",
      "op": "JUMP"
    },
    "2359": {
      "op": "JUMPDEST"
    },
    "2360": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2367": {
      "op": "SHL"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2370": {
      "op": "MSTORE"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2375": {
      "op": "MSTORE"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2380": {
      "op": "REVERT"
    },
    "2381": {
      "op": "JUMPDEST"
    },
    "2382": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2389": {
      "op": "SHL"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2392": {
      "op": "MSTORE"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2397": {
      "op": "MSTORE"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2402": {
      "op": "REVERT"
    },
    "2403": {
      "op": "JUMPDEST"
    },
    "2404": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2411": {
      "op": "SHL"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2414": {
      "op": "MSTORE"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2419": {
      "op": "MSTORE"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2424": {
      "op": "REVERT"
    }
  },
  "sha1": "1f8b0664109c20c2a553493701ada005ac072a35",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"./CertificateAuthorization.sol\";\nimport \"./Helper.sol\";\n\ncontract CertificateHandler is CertificateAuthorization, Helper {\n\n    constructor(address registrySC) CertificateAuthorization(registrySC){}\n    \n    function registerCertificate(\n        bytes32 certificate_hash, \n        bytes32 holder_id,\n        string memory payload,\n        bytes32 data_address\n    )\n        public\n        grantAccess\n        returns (bool success)\n    {\n        uint256 index = isCertificateExist(certificate_hash, holder_to_certificates[holder_id]);\n        if (index > 0) {\n            emit IsSuccess(false,\"already\");\n            emit certificateExist(\n                true,\n                holder_to_certificates[holder_id][index-1]\n            );\n            return false;\n        } else {\n            if (!compareHash(certificate_hash, payload, holder_id)){\n                emit IsSuccess(false,\"failhash\");\n                return false;\n            }\n            uint256 timestamp = block.timestamp;\n            holder_to_certificates[holder_id].push(\n            COV_CERTIFICATE(certificate_hash,data_address,timestamp));\n            emit IsSuccess(true,\"stored\");\n            emit timestampEvent(timestamp);\n            return true;\n        }\n    }\n\n    function verifyCertificate(bytes32 certificate_hash,bytes32 holder_id) public view returns(bool,COV_CERTIFICATE memory){\n        uint256 index = isCertificateExist(certificate_hash, holder_to_certificates[holder_id]);\n        if(index>0){\n            return (true,holder_to_certificates[holder_id][index-1]);\n        }\n        return (false,holder_to_certificates[holder_id][index-1]);\n    }\n\n    function getCertificatesByUser(bytes32 holder_id) \n        public\n        view\n        returns(COV_CERTIFICATE[] memory certificate_data)\n    {\n        return holder_to_certificates[holder_id];\n    }\n\n\n}",
  "sourceMap": "130:1790:3:-:0;;;201:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;570:5:1;:27;;-1:-1:-1;;;;;;570:27:1;;;586:10;570:27;;;;:5;608:23;;-1:-1:-1;;;;;608:23:1;;;;;;;;;;;;;130:1790:3;;14:290:5;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;:::-;130:1790:3;;;;;;",
  "sourcePath": "contracts/Certificate/Handler.sol",
  "type": "contract"
}