{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrySC",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "Registry_sc",
          "type": "address"
        }
      ],
      "name": "DebugRegistryAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "IsSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "is_exist",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "cov_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "data_address",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct Data.COV_CERTIFICATE",
          "name": "certificate_data",
          "type": "tuple"
        }
      ],
      "name": "certificateExist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "isFailed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "certificate_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "holder_id",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "payload",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "data_address",
          "type": "bytes32"
        }
      ],
      "name": "registerCertificate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "certificate_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "holder_id",
          "type": "bytes32"
        }
      ],
      "name": "verifyCertificate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/Certificate/CertificateAuthorization.sol",
    "2": "contracts/Certificate/Data.sol",
    "4": "contracts/Certificate/Handler.sol",
    "5": "contracts/Certificate/Helper.sol"
  },
  "ast": {
    "absolutePath": "contracts/Certificate/Handler.sol",
    "exportedSymbols": {
      "CertificateAuthorization": [
        93
      ],
      "CertificateHandler": [
        324
      ],
      "Data": [
        111
      ],
      "Helper": [
        412
      ],
      "IssuerData": [
        24
      ]
    },
    "id": 325,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 198,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:4"
      },
      {
        "absolutePath": "contracts/Certificate/CertificateAuthorization.sol",
        "file": "./CertificateAuthorization.sol",
        "id": 199,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 325,
        "sourceUnit": 94,
        "src": "65:40:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Certificate/Helper.sol",
        "file": "./Helper.sol",
        "id": 200,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 325,
        "sourceUnit": 413,
        "src": "106:22:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 201,
              "name": "CertificateAuthorization",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 93,
              "src": "161:24:4"
            },
            "id": 202,
            "nodeType": "InheritanceSpecifier",
            "src": "161:24:4"
          },
          {
            "baseName": {
              "id": 203,
              "name": "Helper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 412,
              "src": "187:6:4"
            },
            "id": 204,
            "nodeType": "InheritanceSpecifier",
            "src": "187:6:4"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 324,
        "linearizedBaseContracts": [
          324,
          412,
          111,
          93
        ],
        "name": "CertificateHandler",
        "nameLocation": "139:18:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 212,
              "nodeType": "Block",
              "src": "269:2:4",
              "statements": []
            },
            "id": 213,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 209,
                    "name": "registrySC",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 206,
                    "src": "258:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 210,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 208,
                  "name": "CertificateAuthorization",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 93,
                  "src": "233:24:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "233:36:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "registrySC",
                  "nameLocation": "221:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "213:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "213:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "212:20:4"
            },
            "returnParameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "269:0:4"
            },
            "scope": 324,
            "src": "201:70:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 279,
              "nodeType": "Block",
              "src": "509:559:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 229,
                          "name": "certificate_hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 215,
                          "src": "555:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "baseExpression": {
                            "id": 230,
                            "name": "holder_to_certificates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110,
                            "src": "573:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$104_storage_$dyn_storage_$",
                              "typeString": "mapping(bytes32 => struct Data.COV_CERTIFICATE storage ref[] storage ref)"
                            }
                          },
                          "id": 232,
                          "indexExpression": {
                            "id": 231,
                            "name": "holder_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 217,
                            "src": "596:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "573:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$104_storage_$dyn_storage",
                            "typeString": "struct Data.COV_CERTIFICATE storage ref[] storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$104_storage_$dyn_storage",
                            "typeString": "struct Data.COV_CERTIFICATE storage ref[] storage ref"
                          }
                        ],
                        "id": 228,
                        "name": "isCertificateExist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 383,
                        "src": "536:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$104_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (bytes32,struct Data.COV_CERTIFICATE memory[] memory) pure returns (uint256)"
                        }
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "536:71:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "610:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "536:75:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 277,
                    "nodeType": "Block",
                    "src": "700:362:4",
                    "statements": [
                      {
                        "condition": {
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "718:50:4",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 244,
                                "name": "certificate_hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 215,
                                "src": "731:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 245,
                                "name": "payload",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 219,
                                "src": "749:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 246,
                                "name": "holder_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 217,
                                "src": "758:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 243,
                              "name": "compareHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 411,
                              "src": "719:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_string_memory_ptr_$_t_bytes32_$returns$_t_bool_$",
                                "typeString": "function (bytes32,string memory,bytes32) view returns (bool)"
                              }
                            },
                            "id": 247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "719:49:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 256,
                        "nodeType": "IfStatement",
                        "src": "714:139:4",
                        "trueBody": {
                          "id": 255,
                          "nodeType": "Block",
                          "src": "769:84:4",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 250,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "802:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 249,
                                  "name": "IsSuccess",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 333,
                                  "src": "792:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
                                    "typeString": "function (bool)"
                                  }
                                },
                                "id": 251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "792:16:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 252,
                              "nodeType": "EmitStatement",
                              "src": "787:21:4"
                            },
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "833:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 227,
                              "id": 254,
                              "nodeType": "Return",
                              "src": "826:12:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 262,
                                  "name": "certificate_hash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 215,
                                  "src": "934:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 263,
                                  "name": "data_address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 221,
                                  "src": "951:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 264,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "964:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 265,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "964:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 266,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "980:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 267,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "980:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 261,
                                "name": "COV_CERTIFICATE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 104,
                                "src": "918:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_COV_CERTIFICATE_$104_storage_ptr_$",
                                  "typeString": "type(struct Data.COV_CERTIFICATE storage pointer)"
                                }
                              },
                              "id": 268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "918:73:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_COV_CERTIFICATE_$104_memory_ptr",
                                "typeString": "struct Data.COV_CERTIFICATE memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_COV_CERTIFICATE_$104_memory_ptr",
                                "typeString": "struct Data.COV_CERTIFICATE memory"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 257,
                                "name": "holder_to_certificates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 110,
                                "src": "866:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$104_storage_$dyn_storage_$",
                                  "typeString": "mapping(bytes32 => struct Data.COV_CERTIFICATE storage ref[] storage ref)"
                                }
                              },
                              "id": 259,
                              "indexExpression": {
                                "id": 258,
                                "name": "holder_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 217,
                                "src": "889:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "866:33:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$104_storage_$dyn_storage",
                                "typeString": "struct Data.COV_CERTIFICATE storage ref[] storage ref"
                              }
                            },
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "866:38:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_COV_CERTIFICATE_$104_storage_$dyn_storage_ptr_$_t_struct$_COV_CERTIFICATE_$104_storage_$returns$__$bound_to$_t_array$_t_struct$_COV_CERTIFICATE_$104_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Data.COV_CERTIFICATE storage ref[] storage pointer,struct Data.COV_CERTIFICATE storage ref)"
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "866:126:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 270,
                        "nodeType": "ExpressionStatement",
                        "src": "866:126:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1021:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 271,
                            "name": "IsSuccess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 333,
                            "src": "1011:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1011:15:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 274,
                        "nodeType": "EmitStatement",
                        "src": "1006:20:4"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1047:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 227,
                        "id": 276,
                        "nodeType": "Return",
                        "src": "1040:11:4"
                      }
                    ]
                  },
                  "id": 278,
                  "nodeType": "IfStatement",
                  "src": "519:543:4",
                  "trueBody": {
                    "id": 242,
                    "nodeType": "Block",
                    "src": "622:72:4",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "66616c7365",
                              "id": 237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "651:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 236,
                            "name": "IsSuccess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 333,
                            "src": "641:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "641:16:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 239,
                        "nodeType": "EmitStatement",
                        "src": "636:21:4"
                      },
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "678:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 227,
                        "id": 241,
                        "nodeType": "Return",
                        "src": "671:12:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "11f3524c",
            "id": 280,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 224,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 223,
                  "name": "grantAccess",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "462:11:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "462:11:4"
              }
            ],
            "name": "registerCertificate",
            "nameLocation": "290:19:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "certificate_hash",
                  "nameLocation": "327:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "319:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "319:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "holder_id",
                  "nameLocation": "362:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "354:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "354:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "395:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "381:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "data_address",
                  "nameLocation": "420:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "412:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "309:129:4"
            },
            "returnParameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "496:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "491:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "490:14:4"
            },
            "scope": 324,
            "src": "281:787:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 322,
              "nodeType": "Block",
              "src": "1165:343:4",
              "statements": [
                {
                  "assignments": [
                    290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 290,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "1183:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 322,
                      "src": "1175:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 289,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1175:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 297,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 292,
                        "name": "certificate_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "1210:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 293,
                          "name": "holder_to_certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110,
                          "src": "1228:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$104_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct Data.COV_CERTIFICATE storage ref[] storage ref)"
                          }
                        },
                        "id": 295,
                        "indexExpression": {
                          "id": 294,
                          "name": "holder_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "1251:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1228:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$104_storage_$dyn_storage",
                          "typeString": "struct Data.COV_CERTIFICATE storage ref[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$104_storage_$dyn_storage",
                          "typeString": "struct Data.COV_CERTIFICATE storage ref[] storage ref"
                        }
                      ],
                      "id": 291,
                      "name": "isCertificateExist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "1191:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$104_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes32,struct Data.COV_CERTIFICATE memory[] memory) pure returns (uint256)"
                      }
                    },
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1191:71:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1175:87:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 298,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "1275:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1281:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1275:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 315,
                  "nodeType": "IfStatement",
                  "src": "1272:178:4",
                  "trueBody": {
                    "id": 314,
                    "nodeType": "Block",
                    "src": "1283:167:4",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1336:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 303,
                                  "name": "holder_to_certificates",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 110,
                                  "src": "1358:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$104_storage_$dyn_storage_$",
                                    "typeString": "mapping(bytes32 => struct Data.COV_CERTIFICATE storage ref[] storage ref)"
                                  }
                                },
                                "id": 305,
                                "indexExpression": {
                                  "id": 304,
                                  "name": "holder_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 284,
                                  "src": "1381:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1358:33:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$104_storage_$dyn_storage",
                                  "typeString": "struct Data.COV_CERTIFICATE storage ref[] storage ref"
                                }
                              },
                              "id": 309,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 306,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 290,
                                  "src": "1392:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1398:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "1392:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1358:42:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_COV_CERTIFICATE_$104_storage",
                                "typeString": "struct Data.COV_CERTIFICATE storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_struct$_COV_CERTIFICATE_$104_storage",
                                "typeString": "struct Data.COV_CERTIFICATE storage ref"
                              }
                            ],
                            "id": 301,
                            "name": "certificateExist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 344,
                            "src": "1302:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_struct$_COV_CERTIFICATE_$104_memory_ptr_$returns$__$",
                              "typeString": "function (bool,struct Data.COV_CERTIFICATE memory)"
                            }
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1302:112:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 311,
                        "nodeType": "EmitStatement",
                        "src": "1297:117:4"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1435:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 288,
                        "id": 313,
                        "nodeType": "Return",
                        "src": "1428:11:4"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1474:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 316,
                      "name": "IsSuccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 333,
                      "src": "1464:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:15:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 319,
                  "nodeType": "EmitStatement",
                  "src": "1459:20:4"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1496:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 288,
                  "id": 321,
                  "nodeType": "Return",
                  "src": "1489:12:4"
                }
              ]
            },
            "functionSelector": "1f75435d",
            "id": 323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyCertificate",
            "nameLocation": "1083:17:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "certificate_hash",
                  "nameLocation": "1109:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "1101:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "holder_id",
                  "nameLocation": "1134:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "1126:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1100:44:4"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "1160:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1160:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1159:6:4"
            },
            "scope": 324,
            "src": "1074:434:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 325,
        "src": "130:1382:4",
        "usedErrors": []
      }
    ],
    "src": "32:1480:4"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516107de3803806107de83398101604081905261002f91610062565b600280546001600160a01b03199081163317909155600080546001600160a01b0390931692909116919091179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b61073d806100a16000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806311f3524c146100465780631f75435d1461006e578063f21de1e814610081575b600080fd5b61005961005436600461052a565b61009c565b60405190151581526020015b60405180910390f35b61005961007c366004610508565b610251565b6000546040516001600160a01b039091168152602001610065565b60006100a7336103c2565b15156001146100b557600080fd5b6000848152600360209081526040808320805482518185028101850190935280835261014b938a93929190869084015b8282101561014257600084815260209081902060408051608081018252600486029092018054835260018082015484860152600282015492840192909252600301546001600160a01b0316606083015290835290920191016100e5565b50505050610442565b111561017c57604051600081526000805160206106e8833981519152906020015b60405180910390a1506000610249565b6101878584866104a3565b6101aa57604051600081526000805160206106e88339815191529060200161016c565b600084815260036020818152604080842081516080810183528a8152808401888152428285019081523360608401908152845460018082018755958a529887902093516004909902909301978855905187840155516002870155519490930180546001600160a01b0319166001600160a01b039095169490941790935591519081526000805160206106e8833981519152910160405180910390a15060015b949350505050565b6000818152600360209081526040808320805482518185028101850190935280835284936102de9388939092909186908401821561014257600084815260209081902060408051608081018252600486029092018054835260018082015484860152600282015492840192909252600301546001600160a01b0316606083015290835290920191016100e5565b905080156103945760008381526003602052604090207fcdf631405afda9a82d238101d4a673fa53f947bd014fb050920be8f149acf3e2906001906103238285610673565b81548110610333576103336106bb565b90600052602060002090600402016040516103829291909115158252805460208301526001810154604083015260028101546060830152600301546001600160a01b0316608082015260a00190565b60405180910390a160019150506103bc565b604051600181526000805160206106e88339815191529060200160405180910390a160009150505b92915050565b60008054604051631830003560e21b81526001600160a01b038481166004830152909116906360c000d490602401602060405180830381600087803b15801561040a57600080fd5b505af115801561041e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bc91906104df565b6000805b82518110156104995783838281518110610462576104626106bb565b60200260200101516000015114156104875761047f81600161065b565b9150506103bc565b806104918161068a565b915050610446565b5060009392505050565b6000808284336040516020016104bb939291906105f6565b60408051601f19818403018152919052805160209091012085149150509392505050565b6000602082840312156104f157600080fd5b8151801515811461050157600080fd5b9392505050565b6000806040838503121561051b57600080fd5b50508035926020909101359150565b6000806000806080858703121561054057600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561056657600080fd5b818701915087601f83011261057a57600080fd5b81358181111561058c5761058c6106d1565b604051601f8201601f19908116603f011681019083821181831017156105b4576105b46106d1565b816040528281528a60208487010111156105cd57600080fd5b826020860160208301376000928101602001929092525095989497509495606001359450505050565b8381526000835160005b8181101561061c57602081870181015185830182015201610600565b8181111561062e576000602083860101525b5060609390931b6bffffffffffffffffffffffff1916602092909301918201929092526034019392505050565b6000821982111561066e5761066e6106a5565b500190565b600082821015610685576106856106a5565b500390565b600060001982141561069e5761069e6106a5565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe899357e8ac89ca7eae2190bafddf930cd836d0020a780ec15f4d797348ce2db9a264697066735822122088ffc82cd843f72d12a74d10e202c38a589dac956c7a6659bda6ea97ff8e93a164736f6c63430008070033",
  "bytecodeSha1": "b96131dcde3428c2080da6a0c798e8e571bf3254",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "CertificateHandler",
  "coverageMap": {
    "branches": {
      "1": {},
      "2": {},
      "4": {
        "CertificateHandler.registerCertificate": {
          "16": [
            536,
            611,
            false
          ],
          "17": [
            719,
            768,
            false
          ]
        },
        "CertificateHandler.verifyCertificate": {
          "18": [
            1275,
            1282,
            false
          ]
        }
      },
      "5": {
        "Helper.isCertificateExist": {
          "19": [
            584,
            627,
            false
          ]
        }
      }
    },
    "statements": {
      "1": {
        "CertificateAuthorization.getRegistryAddress": {
          "0": [
            802,
            818
          ]
        },
        "CertificateAuthorization.verifyIssuer": {
          "11": [
            901,
            950
          ]
        }
      },
      "2": {},
      "4": {
        "CertificateHandler.registerCertificate": {
          "1": [
            636,
            657
          ],
          "2": [
            671,
            683
          ],
          "3": [
            787,
            808
          ],
          "4": [
            866,
            992
          ],
          "5": [
            1006,
            1026
          ],
          "6": [
            1040,
            1051
          ]
        },
        "CertificateHandler.verifyCertificate": {
          "7": [
            1297,
            1414
          ],
          "8": [
            1428,
            1439
          ],
          "9": [
            1459,
            1479
          ],
          "10": [
            1489,
            1501
          ]
        }
      },
      "5": {
        "Helper.compareHash": {
          "15": [
            969,
            1009
          ]
        },
        "Helper.isCertificateExist": {
          "12": [
            647,
            657
          ],
          "13": [
            561,
            564
          ],
          "14": [
            730,
            738
          ]
        }
      }
    }
  },
  "dependencies": [
    "CertificateAuthorization",
    "Data",
    "Helper"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c806311f3524c146100465780631f75435d1461006e578063f21de1e814610081575b600080fd5b61005961005436600461052a565b61009c565b60405190151581526020015b60405180910390f35b61005961007c366004610508565b610251565b6000546040516001600160a01b039091168152602001610065565b60006100a7336103c2565b15156001146100b557600080fd5b6000848152600360209081526040808320805482518185028101850190935280835261014b938a93929190869084015b8282101561014257600084815260209081902060408051608081018252600486029092018054835260018082015484860152600282015492840192909252600301546001600160a01b0316606083015290835290920191016100e5565b50505050610442565b111561017c57604051600081526000805160206106e8833981519152906020015b60405180910390a1506000610249565b6101878584866104a3565b6101aa57604051600081526000805160206106e88339815191529060200161016c565b600084815260036020818152604080842081516080810183528a8152808401888152428285019081523360608401908152845460018082018755958a529887902093516004909902909301978855905187840155516002870155519490930180546001600160a01b0319166001600160a01b039095169490941790935591519081526000805160206106e8833981519152910160405180910390a15060015b949350505050565b6000818152600360209081526040808320805482518185028101850190935280835284936102de9388939092909186908401821561014257600084815260209081902060408051608081018252600486029092018054835260018082015484860152600282015492840192909252600301546001600160a01b0316606083015290835290920191016100e5565b905080156103945760008381526003602052604090207fcdf631405afda9a82d238101d4a673fa53f947bd014fb050920be8f149acf3e2906001906103238285610673565b81548110610333576103336106bb565b90600052602060002090600402016040516103829291909115158252805460208301526001810154604083015260028101546060830152600301546001600160a01b0316608082015260a00190565b60405180910390a160019150506103bc565b604051600181526000805160206106e88339815191529060200160405180910390a160009150505b92915050565b60008054604051631830003560e21b81526001600160a01b038481166004830152909116906360c000d490602401602060405180830381600087803b15801561040a57600080fd5b505af115801561041e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bc91906104df565b6000805b82518110156104995783838281518110610462576104626106bb565b60200260200101516000015114156104875761047f81600161065b565b9150506103bc565b806104918161068a565b915050610446565b5060009392505050565b6000808284336040516020016104bb939291906105f6565b60408051601f19818403018152919052805160209091012085149150509392505050565b6000602082840312156104f157600080fd5b8151801515811461050157600080fd5b9392505050565b6000806040838503121561051b57600080fd5b50508035926020909101359150565b6000806000806080858703121561054057600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561056657600080fd5b818701915087601f83011261057a57600080fd5b81358181111561058c5761058c6106d1565b604051601f8201601f19908116603f011681019083821181831017156105b4576105b46106d1565b816040528281528a60208487010111156105cd57600080fd5b826020860160208301376000928101602001929092525095989497509495606001359450505050565b8381526000835160005b8181101561061c57602081870181015185830182015201610600565b8181111561062e576000602083860101525b5060609390931b6bffffffffffffffffffffffff1916602092909301918201929092526034019392505050565b6000821982111561066e5761066e6106a5565b500190565b600082821015610685576106856106a5565b500390565b600060001982141561069e5761069e6106a5565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe899357e8ac89ca7eae2190bafddf930cd836d0020a780ec15f4d797348ce2db9a264697066735822122088ffc82cd843f72d12a74d10e202c38a589dac956c7a6659bda6ea97ff8e93a164736f6c63430008070033",
  "deployedSourceMap": "130:1382:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;281:787;;;;;;:::i;:::-;;:::i;:::-;;;2751:14:9;;2744:22;2726:41;;2714:2;2699:18;281:787:4;;;;;;;;1074:434;;;;;;:::i;:::-;;:::i;735:90:1:-;784:7;809:9;735:90;;-1:-1:-1;;;;;809:9:1;;;2524:51:9;;2512:2;2497:18;735:90:1;2378:203:9;281:787:4;491:12;1003:24:1;1016:10;1003:12;:24::i;:::-;:32;;1031:4;1003:32;995:41;;;;;;610:1:4::1;573:33:::0;;;:22:::1;:33;::::0;;;;;;;536:71;;;;;;::::1;::::0;;;;;;;;;;::::1;::::0;555:16;;536:71;573:33;536:71;610:1;;536:71;::::1;;;;;;;;;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;;;;;;;;::::1;;::::0;-1:-1:-1;;;;;536:71:4::1;::::0;;;;;;;;;::::1;::::0;::::1;;;;;;;;:18;:71::i;:::-;:75;519:543;;;641:16;::::0;651:5:::1;2726:41:9::0;;-1:-1:-1;;;;;;;;;;;641:16:4;2714:2:9;2699:18;641:16:4::1;;;;;;;;-1:-1:-1::0;678:5:4::1;671:12;;519:543;719:49;731:16;749:7;758:9;719:11;:49::i;:::-;714:139;;792:16;::::0;802:5:::1;2726:41:9::0;;-1:-1:-1;;;;;;;;;;;792:16:4;2714:2:9;2699:18;792:16:4::1;2586:187:9::0;714:139:4::1;866:33;::::0;;;:22:::1;:33;::::0;;;;;;;918:73;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;964:15:::1;918:73:::0;;;;;;980:10:::1;918:73:::0;;;;;;866:126;;::::1;::::0;;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;-1:-1:-1;;;;;;866:126:4::1;-1:-1:-1::0;;;;;866:126:4;;::::1;::::0;;;::::1;::::0;;;1011:15;;2726:41:9;;;-1:-1:-1;;;;;;;;;;;1011:15:4;2699:18:9;1011:15:4::1;;;;;;;-1:-1:-1::0;1047:4:4::1;519:543;281:787:::0;;;;;;:::o;1074:434::-;1160:4;1228:33;;;:22;:33;;;;;;;;1191:71;;;;;;;;;;;;;;;;;1160:4;;1191:71;;1210:16;;1191:71;;1228:33;;1160:4;;1191:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1191:71:4;;;;;;;;;;;;;;;;1175:87;-1:-1:-1;1275:7:4;;1272:178;;1358:33;;;;:22;:33;;;;;1302:112;;1336:4;;1392:7;1336:4;1392:5;:7;:::i;:::-;1358:42;;;;;;;;:::i;:::-;;;;;;;;;;;1302:112;;;;;;3033:14:9;;3026:22;3008:41;;3085:13;;3080:2;3065:18;;3058:41;3153:4;3141:17;;3135:24;3130:2;3115:18;;3108:52;3214:4;3202:17;;3196:24;3191:2;3176:18;;3169:52;3280:4;3268:17;3262:24;-1:-1:-1;;;;;3258:50:9;3252:3;3237:19;;3230:79;2995:3;2980:19;;2778:537;1302:112:4;;;;;;;;1435:4;1428:11;;;;;1272:178;1464:15;;1474:4;2726:41:9;;-1:-1:-1;;;;;;;;;;;1464:15:4;2714:2:9;2699:18;1464:15:4;;;;;;;1496:5;1489:12;;;1074:434;;;;;:::o;831:126:1:-;885:4;919:9;;908:42;;-1:-1:-1;;;908:42:1;;-1:-1:-1;;;;;2542:32:9;;;908:42:1;;;2524:51:9;919:9:1;;;;908:34;;2497:18:9;;908:42:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;356:389:5:-;492:7;;510:172;534:18;:25;530:1;:29;510:172;;;618:9;584:18;603:1;584:21;;;;;;;;:::i;:::-;;;;;;;:30;;;:43;580:92;;;654:3;:1;656;654:3;:::i;:::-;647:10;;;;;580:92;561:3;;;;:::i;:::-;;;;510:172;;;-1:-1:-1;737:1:5;;356:389;-1:-1:-1;;;356:389:5:o;751:265::-;860:4;875:22;927:8;937:7;947:10;910:48;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;910:48:5;;;;;;;;;900:59;;910:48;900:59;;;;976:33;;;-1:-1:-1;;751:265:5;;;;;:::o;14:277:9:-;81:6;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;182:9;176:16;235:5;228:13;221:21;214:5;211:32;201:60;;257:1;254;247:12;201:60;280:5;14:277;-1:-1:-1;;;14:277:9:o;296:248::-;364:6;372;425:2;413:9;404:7;400:23;396:32;393:52;;;441:1;438;431:12;393:52;-1:-1:-1;;464:23:9;;;534:2;519:18;;;506:32;;-1:-1:-1;296:248:9:o;549:1127::-;645:6;653;661;669;722:3;710:9;701:7;697:23;693:33;690:53;;;739:1;736;729:12;690:53;775:9;762:23;752:33;;832:2;821:9;817:18;804:32;794:42;;887:2;876:9;872:18;859:32;910:18;951:2;943:6;940:14;937:34;;;967:1;964;957:12;937:34;1005:6;994:9;990:22;980:32;;1050:7;1043:4;1039:2;1035:13;1031:27;1021:55;;1072:1;1069;1062:12;1021:55;1108:2;1095:16;1130:2;1126;1123:10;1120:36;;;1136:18;;:::i;:::-;1211:2;1205:9;1179:2;1265:13;;-1:-1:-1;;1261:22:9;;;1285:2;1257:31;1253:40;1241:53;;;1309:18;;;1329:22;;;1306:46;1303:72;;;1355:18;;:::i;:::-;1395:10;1391:2;1384:22;1430:2;1422:6;1415:18;1470:7;1465:2;1460;1456;1452:11;1448:20;1445:33;1442:53;;;1491:1;1488;1481:12;1442:53;1547:2;1542;1538;1534:11;1529:2;1521:6;1517:15;1504:46;1592:1;1570:15;;;1587:2;1566:24;1559:35;;;;-1:-1:-1;549:1127:9;;;;-1:-1:-1;1574:6:9;;1666:2;1651:18;1638:32;;-1:-1:-1;;;;549:1127:9:o;1681:692::-;1898:6;1893:3;1886:19;1868:3;1934:6;1928:13;1959:1;1969:159;1983:6;1980:1;1977:13;1969:159;;;2043:2;2097:14;;;2093:23;;2087:30;2069:11;;;2065:20;;2058:60;1998:10;1969:159;;;2146:6;2143:1;2140:13;2137:85;;;2210:1;2205:2;2196:6;2191:3;2187:16;2183:25;2176:36;2137:85;-1:-1:-1;2294:2:9;2290:15;;;;-1:-1:-1;;2286:53:9;2281:2;2241:16;;;;2273:11;;;2266:74;;;;2364:2;2356:11;;1681:692;-1:-1:-1;;;1681:692:9:o;3320:128::-;3360:3;3391:1;3387:6;3384:1;3381:13;3378:39;;;3397:18;;:::i;:::-;-1:-1:-1;3433:9:9;;3320:128::o;3453:125::-;3493:4;3521:1;3518;3515:8;3512:34;;;3526:18;;:::i;:::-;-1:-1:-1;3563:9:9;;3453:125::o;3583:135::-;3622:3;-1:-1:-1;;3643:17:9;;3640:43;;;3663:18;;:::i;:::-;-1:-1:-1;3710:1:9;3699:13;;3583:135::o;3723:127::-;3784:10;3779:3;3775:20;3772:1;3765:31;3815:4;3812:1;3805:15;3839:4;3836:1;3829:15;3855:127;3916:10;3911:3;3907:20;3904:1;3897:31;3947:4;3944:1;3937:15;3971:4;3968:1;3961:15;3987:127;4048:10;4043:3;4039:20;4036:1;4029:31;4079:4;4076:1;4069:15;4103:4;4100:1;4093:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    130,
    1512
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x11F3524C EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x1F75435D EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF21DE1E8 EQ PUSH2 0x81 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x508 JUMP JUMPDEST PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x65 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7 CALLER PUSH2 0x3C2 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH2 0x14B SWAP4 DUP11 SWAP4 SWAP3 SWAP2 SWAP1 DUP7 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xE5 JUMP JUMPDEST POP POP POP POP PUSH2 0x442 JUMP JUMPDEST GT ISZERO PUSH2 0x17C JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x6E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x0 PUSH2 0x249 JUMP JUMPDEST PUSH2 0x187 DUP6 DUP5 DUP7 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x1AA JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x6E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x16C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP11 DUP2 MSTORE DUP1 DUP5 ADD DUP9 DUP2 MSTORE TIMESTAMP DUP3 DUP6 ADD SWAP1 DUP2 MSTORE CALLER PUSH1 0x60 DUP5 ADD SWAP1 DUP2 MSTORE DUP5 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP8 SSTORE SWAP6 DUP11 MSTORE SWAP9 DUP8 SWAP1 KECCAK256 SWAP4 MLOAD PUSH1 0x4 SWAP1 SWAP10 MUL SWAP1 SWAP4 ADD SWAP8 DUP9 SSTORE SWAP1 MLOAD DUP8 DUP5 ADD SSTORE MLOAD PUSH1 0x2 DUP8 ADD SSTORE MLOAD SWAP5 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x6E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 PUSH2 0x2DE SWAP4 DUP9 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP7 SWAP1 DUP5 ADD DUP3 ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xE5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0xCDF631405AFDA9A82D238101D4A673FA53F947BD014FB050920BE8F149ACF3E2 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x323 DUP3 DUP6 PUSH2 0x673 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x333 JUMPI PUSH2 0x333 PUSH2 0x6BB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD PUSH2 0x382 SWAP3 SWAP2 SWAP1 SWAP2 ISZERO ISZERO DUP3 MSTORE DUP1 SLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP POP PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x6E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x18300035 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x60C000D4 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x499 JUMPI DUP4 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x462 JUMPI PUSH2 0x462 PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x487 JUMPI PUSH2 0x47F DUP2 PUSH1 0x1 PUSH2 0x65B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3BC JUMP JUMPDEST DUP1 PUSH2 0x491 DUP2 PUSH2 0x68A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x446 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 DUP6 EQ SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x501 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x58C JUMPI PUSH2 0x58C PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x5B4 JUMPI PUSH2 0x5B4 PUSH2 0x6D1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP5 SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x61C JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x600 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x62E JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP7 ADD ADD MSTORE JUMPDEST POP PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 SWAP3 SWAP1 SWAP4 ADD SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x34 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x66E JUMPI PUSH2 0x66E PUSH2 0x6A5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x685 JUMPI PUSH2 0x685 PUSH2 0x6A5 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x69E JUMPI PUSH2 0x69E PUSH2 0x6A5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID DUP10 SWAP4 JUMPI 0xE8 0xAC DUP10 0xCA PUSH31 0xAE2190BAFDDF930CD836D0020A780EC15F4D797348CE2DB9A2646970667358 0x22 SLT KECCAK256 DUP9 SELFDESTRUCT 0xC8 0x2C 0xD8 NUMBER 0xF7 0x2D SLT 0xA7 0x4D LT 0xE2 MUL 0xC3 DUP11 PC SWAP14 0xAC SWAP6 PUSH13 0x7A6659BDA6EA97FF8E93A16473 PUSH16 0x6C634300080700330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        130,
        1512
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x41"
    },
    "25": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x11F3524C"
    },
    "38": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "EQ",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x46"
    },
    "42": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x1F75435D"
    },
    "49": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "EQ",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E"
    },
    "53": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF21DE1E8"
    },
    "60": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x81"
    },
    "64": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "68": {
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "DUP1",
      "path": "4"
    },
    "69": {
      "first_revert": true,
      "fn": null,
      "offset": [
        130,
        1512
      ],
      "op": "REVERT",
      "path": "4"
    },
    "70": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "71": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x59"
    },
    "74": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x54"
    },
    "77": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "78": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "80": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x52A"
    },
    "83": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        281,
        1068
      ],
      "op": "JUMP",
      "path": "4"
    },
    "84": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "85": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9C"
    },
    "88": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        281,
        1068
      ],
      "op": "JUMP",
      "path": "4"
    },
    "89": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "90": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "92": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "93": {
      "op": "SWAP1"
    },
    "94": {
      "op": "ISZERO"
    },
    "95": {
      "op": "ISZERO"
    },
    "96": {
      "op": "DUP2"
    },
    "97": {
      "op": "MSTORE"
    },
    "98": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "100": {
      "op": "ADD"
    },
    "101": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "102": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "104": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "105": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "DUP1",
      "path": "4"
    },
    "106": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "107": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "SUB",
      "path": "4"
    },
    "108": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "109": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "RETURN",
      "path": "4"
    },
    "110": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1074,
        1508
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "111": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1074,
        1508
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x59"
    },
    "114": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1074,
        1508
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C"
    },
    "117": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1074,
        1508
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "118": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1074,
        1508
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "120": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1074,
        1508
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x508"
    },
    "123": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1074,
        1508
      ],
      "op": "JUMP",
      "path": "4"
    },
    "124": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1074,
        1508
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "125": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1074,
        1508
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x251"
    },
    "128": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1074,
        1508
      ],
      "op": "JUMP",
      "path": "4"
    },
    "129": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        735,
        825
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "130": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        784,
        791
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "132": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        809,
        818
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 0
    },
    "133": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        735,
        825
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "135": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        735,
        825
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "142": {
      "op": "SHL"
    },
    "143": {
      "op": "SUB"
    },
    "144": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        809,
        818
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "145": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        809,
        818
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "146": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        809,
        818
      ],
      "op": "AND",
      "path": "1"
    },
    "147": {
      "op": "DUP2"
    },
    "148": {
      "op": "MSTORE"
    },
    "149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "151": {
      "op": "ADD"
    },
    "152": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        735,
        825
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x65"
    },
    "155": {
      "op": "JUMP"
    },
    "156": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "157": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        491,
        503
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "159": {
      "offset": [
        1003,
        1027
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA7"
    },
    "162": {
      "offset": [
        1016,
        1026
      ],
      "op": "CALLER",
      "path": "1"
    },
    "163": {
      "offset": [
        1003,
        1015
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C2"
    },
    "166": {
      "jump": "i",
      "offset": [
        1003,
        1027
      ],
      "op": "JUMP",
      "path": "1"
    },
    "167": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1003,
        1027
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "168": {
      "offset": [
        1003,
        1035
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "169": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1003,
        1035
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "170": {
      "offset": [
        1031,
        1035
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "172": {
      "offset": [
        1003,
        1035
      ],
      "op": "EQ",
      "path": "1"
    },
    "173": {
      "offset": [
        995,
        1036
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB5"
    },
    "176": {
      "offset": [
        995,
        1036
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "177": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        995,
        1036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "179": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        995,
        1036
      ],
      "op": "DUP1",
      "path": "1"
    },
    "180": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        995,
        1036
      ],
      "op": "REVERT",
      "path": "1"
    },
    "181": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        995,
        1036
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "182": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        610,
        611
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "184": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        573,
        606
      ],
      "op": "DUP5",
      "path": "4"
    },
    "185": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        573,
        606
      ],
      "op": "DUP2",
      "path": "4"
    },
    "186": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        573,
        606
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "187": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        573,
        595
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "189": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        573,
        606
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "191": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        573,
        606
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "192": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        573,
        606
      ],
      "op": "DUP2",
      "path": "4"
    },
    "193": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        573,
        606
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "194": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        573,
        606
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "196": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        573,
        606
      ],
      "op": "DUP1",
      "path": "4"
    },
    "197": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        573,
        606
      ],
      "op": "DUP4",
      "path": "4"
    },
    "198": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        573,
        606
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "199": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP1",
      "path": "4"
    },
    "200": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "201": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP3",
      "path": "4"
    },
    "202": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "203": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP2",
      "path": "4"
    },
    "204": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP6",
      "path": "4"
    },
    "205": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "MUL",
      "path": "4"
    },
    "206": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP2",
      "path": "4"
    },
    "207": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "ADD",
      "path": "4"
    },
    "208": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP6",
      "path": "4"
    },
    "209": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "ADD",
      "path": "4"
    },
    "210": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "211": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "212": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "213": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP1",
      "path": "4"
    },
    "214": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP4",
      "path": "4"
    },
    "215": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "216": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14B"
    },
    "219": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "220": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        555,
        571
      ],
      "op": "DUP11",
      "path": "4"
    },
    "221": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        555,
        571
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "222": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "223": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        573,
        606
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "224": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "225": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        610,
        611
      ],
      "op": "DUP7",
      "path": "4"
    },
    "226": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        610,
        611
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "227": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP5",
      "path": "4"
    },
    "228": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "ADD",
      "path": "4"
    },
    "229": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "230": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP3",
      "path": "4"
    },
    "231": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP3",
      "path": "4"
    },
    "232": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "LT",
      "path": "4"
    },
    "233": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "234": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x142"
    },
    "237": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "238": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "240": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP5",
      "path": "4"
    },
    "241": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP2",
      "path": "4"
    },
    "242": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "243": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "245": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "246": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP2",
      "path": "4"
    },
    "247": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "248": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "249": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "251": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP1",
      "path": "4"
    },
    "252": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "253": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "255": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP2",
      "path": "4"
    },
    "256": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "ADD",
      "path": "4"
    },
    "257": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP3",
      "path": "4"
    },
    "258": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "259": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "261": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP7",
      "path": "4"
    },
    "262": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "MUL",
      "path": "4"
    },
    "263": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "264": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "265": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "ADD",
      "path": "4"
    },
    "266": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP1",
      "path": "4"
    },
    "267": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "268": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP4",
      "path": "4"
    },
    "269": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "270": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "272": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP1",
      "path": "4"
    },
    "273": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP3",
      "path": "4"
    },
    "274": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "ADD",
      "path": "4"
    },
    "275": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "276": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP5",
      "path": "4"
    },
    "277": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP7",
      "path": "4"
    },
    "278": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "ADD",
      "path": "4"
    },
    "279": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "280": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "282": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP3",
      "path": "4"
    },
    "283": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "ADD",
      "path": "4"
    },
    "284": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "285": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "286": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP5",
      "path": "4"
    },
    "287": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "ADD",
      "path": "4"
    },
    "288": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "289": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "290": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "291": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "292": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "294": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "ADD",
      "path": "4"
    },
    "295": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "AND",
      "path": "4"
    },
    "305": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "307": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP4",
      "path": "4"
    },
    "308": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "ADD",
      "path": "4"
    },
    "309": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "310": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "311": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "DUP4",
      "path": "4"
    },
    "312": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "313": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "314": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "315": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "ADD",
      "path": "4"
    },
    "316": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "317": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "ADD",
      "path": "4"
    },
    "318": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE5"
    },
    "321": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "JUMP",
      "path": "4"
    },
    "322": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "323": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "POP",
      "path": "4"
    },
    "324": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "POP",
      "path": "4"
    },
    "325": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "POP",
      "path": "4"
    },
    "326": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "POP",
      "path": "4"
    },
    "327": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        554
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x442"
    },
    "330": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        536,
        607
      ],
      "op": "JUMP",
      "path": "4"
    },
    "331": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        607
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "332": {
      "branch": 16,
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        536,
        611
      ],
      "op": "GT",
      "path": "4"
    },
    "333": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        519,
        1062
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "334": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        519,
        1062
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17C"
    },
    "337": {
      "branch": 16,
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        519,
        1062
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "338": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        641,
        657
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 1,
      "value": "0x40"
    },
    "340": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        641,
        657
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "341": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        651,
        656
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "343": {
      "op": "DUP2"
    },
    "344": {
      "op": "MSTORE"
    },
    "345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "347": {
      "op": "DUP1"
    },
    "348": {
      "op": "MLOAD"
    },
    "349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "351": {
      "op": "PUSH2",
      "value": "0x6E8"
    },
    "354": {
      "op": "DUP4"
    },
    "355": {
      "op": "CODECOPY"
    },
    "356": {
      "op": "DUP2"
    },
    "357": {
      "op": "MLOAD"
    },
    "358": {
      "op": "SWAP2"
    },
    "359": {
      "op": "MSTORE"
    },
    "360": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        641,
        657
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "363": {
      "op": "ADD"
    },
    "364": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        641,
        657
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "365": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        641,
        657
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "367": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        641,
        657
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "368": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        641,
        657
      ],
      "op": "DUP1",
      "path": "4"
    },
    "369": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        641,
        657
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "370": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        641,
        657
      ],
      "op": "SUB",
      "path": "4"
    },
    "371": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        641,
        657
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "372": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        641,
        657
      ],
      "op": "LOG1",
      "path": "4"
    },
    "373": {
      "op": "POP"
    },
    "374": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        678,
        683
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 2,
      "value": "0x0"
    },
    "376": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        671,
        683
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x249"
    },
    "379": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        671,
        683
      ],
      "op": "JUMP",
      "path": "4"
    },
    "380": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        519,
        1062
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "381": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        719,
        768
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x187"
    },
    "384": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        731,
        747
      ],
      "op": "DUP6",
      "path": "4"
    },
    "385": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        749,
        756
      ],
      "op": "DUP5",
      "path": "4"
    },
    "386": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        758,
        767
      ],
      "op": "DUP7",
      "path": "4"
    },
    "387": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        719,
        730
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4A3"
    },
    "390": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        719,
        768
      ],
      "op": "JUMP",
      "path": "4"
    },
    "391": {
      "branch": 17,
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        719,
        768
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "392": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        714,
        853
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AA"
    },
    "395": {
      "branch": 17,
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        714,
        853
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "396": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        792,
        808
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 3,
      "value": "0x40"
    },
    "398": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        792,
        808
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "399": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        802,
        807
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "401": {
      "op": "DUP2"
    },
    "402": {
      "op": "MSTORE"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "405": {
      "op": "DUP1"
    },
    "406": {
      "op": "MLOAD"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "409": {
      "op": "PUSH2",
      "value": "0x6E8"
    },
    "412": {
      "op": "DUP4"
    },
    "413": {
      "op": "CODECOPY"
    },
    "414": {
      "op": "DUP2"
    },
    "415": {
      "op": "MLOAD"
    },
    "416": {
      "op": "SWAP2"
    },
    "417": {
      "op": "MSTORE"
    },
    "418": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        792,
        808
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "421": {
      "op": "ADD"
    },
    "422": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        792,
        808
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16C"
    },
    "425": {
      "op": "JUMP"
    },
    "426": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        714,
        853
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "427": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        899
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 4,
      "value": "0x0"
    },
    "429": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        899
      ],
      "op": "DUP5",
      "path": "4"
    },
    "430": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        899
      ],
      "op": "DUP2",
      "path": "4"
    },
    "431": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        899
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "432": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        888
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "434": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        899
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "436": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        899
      ],
      "op": "DUP2",
      "path": "4"
    },
    "437": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        899
      ],
      "op": "DUP2",
      "path": "4"
    },
    "438": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        899
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "439": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        899
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "441": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        899
      ],
      "op": "DUP1",
      "path": "4"
    },
    "442": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        899
      ],
      "op": "DUP5",
      "path": "4"
    },
    "443": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        899
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "444": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "DUP2",
      "path": "4"
    },
    "445": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "446": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "448": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "DUP2",
      "path": "4"
    },
    "449": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "ADD",
      "path": "4"
    },
    "450": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "DUP4",
      "path": "4"
    },
    "451": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "452": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "DUP11",
      "path": "4"
    },
    "453": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "DUP2",
      "path": "4"
    },
    "454": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "455": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "DUP1",
      "path": "4"
    },
    "456": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "DUP5",
      "path": "4"
    },
    "457": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "ADD",
      "path": "4"
    },
    "458": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "DUP9",
      "path": "4"
    },
    "459": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "DUP2",
      "path": "4"
    },
    "460": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "461": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        964,
        979
      ],
      "op": "TIMESTAMP",
      "path": "4"
    },
    "462": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "DUP3",
      "path": "4"
    },
    "463": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "DUP6",
      "path": "4"
    },
    "464": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "ADD",
      "path": "4"
    },
    "465": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "466": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "DUP2",
      "path": "4"
    },
    "467": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "468": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        980,
        990
      ],
      "op": "CALLER",
      "path": "4"
    },
    "469": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "471": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "DUP5",
      "path": "4"
    },
    "472": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "ADD",
      "path": "4"
    },
    "473": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "474": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "DUP2",
      "path": "4"
    },
    "475": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        918,
        991
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "476": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "DUP5",
      "path": "4"
    },
    "477": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "478": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "480": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "DUP1",
      "path": "4"
    },
    "481": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "DUP3",
      "path": "4"
    },
    "482": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "ADD",
      "path": "4"
    },
    "483": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "DUP8",
      "path": "4"
    },
    "484": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "485": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "486": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "DUP11",
      "path": "4"
    },
    "487": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "488": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP9",
      "path": "4"
    },
    "489": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "DUP8",
      "path": "4"
    },
    "490": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "491": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "492": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "493": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "494": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "496": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "497": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP10",
      "path": "4"
    },
    "498": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "MUL",
      "path": "4"
    },
    "499": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "500": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "501": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "ADD",
      "path": "4"
    },
    "502": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP8",
      "path": "4"
    },
    "503": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "DUP9",
      "path": "4"
    },
    "504": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "505": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "506": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "507": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "DUP8",
      "path": "4"
    },
    "508": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "DUP5",
      "path": "4"
    },
    "509": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "ADD",
      "path": "4"
    },
    "510": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "511": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "512": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "514": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "DUP8",
      "path": "4"
    },
    "515": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "ADD",
      "path": "4"
    },
    "516": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "517": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "518": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "519": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "520": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "521": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "ADD",
      "path": "4"
    },
    "522": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "DUP1",
      "path": "4"
    },
    "523": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "530": {
      "op": "SHL"
    },
    "531": {
      "op": "SUB"
    },
    "532": {
      "op": "NOT"
    },
    "533": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "AND",
      "path": "4"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "540": {
      "op": "SHL"
    },
    "541": {
      "op": "SUB"
    },
    "542": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "543": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "544": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "AND",
      "path": "4"
    },
    "545": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "546": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "547": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "548": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "OR",
      "path": "4"
    },
    "549": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "550": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "551": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        866,
        992
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "552": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1011,
        1026
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 5
    },
    "553": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1011,
        1026
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "554": {
      "op": "SWAP1"
    },
    "555": {
      "op": "DUP2"
    },
    "556": {
      "op": "MSTORE"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "559": {
      "op": "DUP1"
    },
    "560": {
      "op": "MLOAD"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "563": {
      "op": "PUSH2",
      "value": "0x6E8"
    },
    "566": {
      "op": "DUP4"
    },
    "567": {
      "op": "CODECOPY"
    },
    "568": {
      "op": "DUP2"
    },
    "569": {
      "op": "MLOAD"
    },
    "570": {
      "op": "SWAP2"
    },
    "571": {
      "op": "MSTORE"
    },
    "572": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1011,
        1026
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "573": {
      "op": "ADD"
    },
    "574": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1011,
        1026
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "576": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1011,
        1026
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "577": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1011,
        1026
      ],
      "op": "DUP1",
      "path": "4"
    },
    "578": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1011,
        1026
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "579": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1011,
        1026
      ],
      "op": "SUB",
      "path": "4"
    },
    "580": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1011,
        1026
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "581": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1011,
        1026
      ],
      "op": "LOG1",
      "path": "4"
    },
    "582": {
      "op": "POP"
    },
    "583": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1047,
        1051
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 6,
      "value": "0x1"
    },
    "585": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        519,
        1062
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "586": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "587": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "588": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "POP",
      "path": "4"
    },
    "589": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "POP",
      "path": "4"
    },
    "590": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "POP",
      "path": "4"
    },
    "591": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        281,
        1068
      ],
      "op": "POP",
      "path": "4"
    },
    "592": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "o",
      "offset": [
        281,
        1068
      ],
      "op": "JUMP",
      "path": "4"
    },
    "593": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1074,
        1508
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "594": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1160,
        1164
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "596": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1228,
        1261
      ],
      "op": "DUP2",
      "path": "4"
    },
    "597": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1228,
        1261
      ],
      "op": "DUP2",
      "path": "4"
    },
    "598": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1228,
        1261
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "599": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1228,
        1250
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "601": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1228,
        1261
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "603": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1228,
        1261
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "604": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1228,
        1261
      ],
      "op": "DUP2",
      "path": "4"
    },
    "605": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1228,
        1261
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "606": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1228,
        1261
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "608": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1228,
        1261
      ],
      "op": "DUP1",
      "path": "4"
    },
    "609": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1228,
        1261
      ],
      "op": "DUP4",
      "path": "4"
    },
    "610": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1228,
        1261
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "611": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP1",
      "path": "4"
    },
    "612": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "613": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP3",
      "path": "4"
    },
    "614": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "615": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP2",
      "path": "4"
    },
    "616": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP6",
      "path": "4"
    },
    "617": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "MUL",
      "path": "4"
    },
    "618": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP2",
      "path": "4"
    },
    "619": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "ADD",
      "path": "4"
    },
    "620": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP6",
      "path": "4"
    },
    "621": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "ADD",
      "path": "4"
    },
    "622": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "623": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "624": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "625": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP1",
      "path": "4"
    },
    "626": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP4",
      "path": "4"
    },
    "627": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "628": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1160,
        1164
      ],
      "op": "DUP5",
      "path": "4"
    },
    "629": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1160,
        1164
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "630": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2DE"
    },
    "633": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "634": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1210,
        1226
      ],
      "op": "DUP9",
      "path": "4"
    },
    "635": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1210,
        1226
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "636": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "637": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "638": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1228,
        1261
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "639": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1228,
        1261
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "640": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1160,
        1164
      ],
      "op": "DUP7",
      "path": "4"
    },
    "641": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1160,
        1164
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "642": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP5",
      "path": "4"
    },
    "643": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "ADD",
      "path": "4"
    },
    "644": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP3",
      "path": "4"
    },
    "645": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "646": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x142"
    },
    "649": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "650": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "652": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP5",
      "path": "4"
    },
    "653": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP2",
      "path": "4"
    },
    "654": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "655": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "657": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "658": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP2",
      "path": "4"
    },
    "659": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "660": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "661": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "663": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP1",
      "path": "4"
    },
    "664": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "665": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "667": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP2",
      "path": "4"
    },
    "668": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "ADD",
      "path": "4"
    },
    "669": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP3",
      "path": "4"
    },
    "670": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "671": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "673": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP7",
      "path": "4"
    },
    "674": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "MUL",
      "path": "4"
    },
    "675": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "676": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "677": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "ADD",
      "path": "4"
    },
    "678": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP1",
      "path": "4"
    },
    "679": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "680": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP4",
      "path": "4"
    },
    "681": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "682": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "684": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP1",
      "path": "4"
    },
    "685": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP3",
      "path": "4"
    },
    "686": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "ADD",
      "path": "4"
    },
    "687": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "688": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP5",
      "path": "4"
    },
    "689": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP7",
      "path": "4"
    },
    "690": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "ADD",
      "path": "4"
    },
    "691": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "692": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "694": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP3",
      "path": "4"
    },
    "695": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "ADD",
      "path": "4"
    },
    "696": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "697": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "698": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP5",
      "path": "4"
    },
    "699": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "ADD",
      "path": "4"
    },
    "700": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "701": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "702": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "703": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "704": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "706": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "ADD",
      "path": "4"
    },
    "707": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "714": {
      "op": "SHL"
    },
    "715": {
      "op": "SUB"
    },
    "716": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "AND",
      "path": "4"
    },
    "717": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "719": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP4",
      "path": "4"
    },
    "720": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "ADD",
      "path": "4"
    },
    "721": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "722": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "723": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "DUP4",
      "path": "4"
    },
    "724": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "725": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "726": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "727": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "ADD",
      "path": "4"
    },
    "728": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "729": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "ADD",
      "path": "4"
    },
    "730": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE5"
    },
    "733": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "JUMP",
      "path": "4"
    },
    "734": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1191,
        1262
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "735": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1175,
        1262
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "736": {
      "op": "POP"
    },
    "737": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1275,
        1282
      ],
      "op": "DUP1",
      "path": "4"
    },
    "738": {
      "branch": 18,
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1275,
        1282
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "739": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1272,
        1450
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x394"
    },
    "742": {
      "branch": 18,
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1272,
        1450
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "743": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1391
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 7,
      "value": "0x0"
    },
    "745": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1391
      ],
      "op": "DUP4",
      "path": "4"
    },
    "746": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1391
      ],
      "op": "DUP2",
      "path": "4"
    },
    "747": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1391
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "748": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1380
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "750": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1391
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "752": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1391
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "753": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1391
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "755": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1391
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "756": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1391
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "757": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1302,
        1414
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xCDF631405AFDA9A82D238101D4A673FA53F947BD014FB050920BE8F149ACF3E2"
    },
    "790": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1302,
        1414
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "791": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1336,
        1340
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "793": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1336,
        1340
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "794": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1392,
        1399
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x323"
    },
    "797": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1336,
        1340
      ],
      "op": "DUP3",
      "path": "4"
    },
    "798": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1392,
        1397
      ],
      "op": "DUP6",
      "path": "4"
    },
    "799": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1392,
        1399
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x673"
    },
    "802": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1392,
        1399
      ],
      "op": "JUMP",
      "path": "4"
    },
    "803": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1392,
        1399
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "804": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1400
      ],
      "op": "DUP2",
      "path": "4"
    },
    "805": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1400
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "806": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1400
      ],
      "op": "DUP2",
      "path": "4"
    },
    "807": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1400
      ],
      "op": "LT",
      "path": "4"
    },
    "808": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1400
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x333"
    },
    "811": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1400
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "812": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1400
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x333"
    },
    "815": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1400
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6BB"
    },
    "818": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1358,
        1400
      ],
      "op": "JUMP",
      "path": "4"
    },
    "819": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1400
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "820": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1400
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "821": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1400
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "823": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1400
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "824": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1400
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "826": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1400
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "828": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1400
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "829": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1400
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "830": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1400
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "832": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1400
      ],
      "op": "MUL",
      "path": "4"
    },
    "833": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1400
      ],
      "op": "ADD",
      "path": "4"
    },
    "834": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1302,
        1414
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "836": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1302,
        1414
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "837": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1302,
        1414
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x382"
    },
    "840": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1302,
        1414
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "841": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1302,
        1414
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "842": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1302,
        1414
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "843": {
      "op": "SWAP2"
    },
    "844": {
      "op": "ISZERO"
    },
    "845": {
      "op": "ISZERO"
    },
    "846": {
      "op": "DUP3"
    },
    "847": {
      "op": "MSTORE"
    },
    "848": {
      "op": "DUP1"
    },
    "849": {
      "op": "SLOAD"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "852": {
      "op": "DUP4"
    },
    "853": {
      "op": "ADD"
    },
    "854": {
      "op": "MSTORE"
    },
    "855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "857": {
      "op": "DUP2"
    },
    "858": {
      "op": "ADD"
    },
    "859": {
      "op": "SLOAD"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "862": {
      "op": "DUP4"
    },
    "863": {
      "op": "ADD"
    },
    "864": {
      "op": "MSTORE"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "867": {
      "op": "DUP2"
    },
    "868": {
      "op": "ADD"
    },
    "869": {
      "op": "SLOAD"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "872": {
      "op": "DUP4"
    },
    "873": {
      "op": "ADD"
    },
    "874": {
      "op": "MSTORE"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "877": {
      "op": "ADD"
    },
    "878": {
      "op": "SLOAD"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "885": {
      "op": "SHL"
    },
    "886": {
      "op": "SUB"
    },
    "887": {
      "op": "AND"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "890": {
      "op": "DUP3"
    },
    "891": {
      "op": "ADD"
    },
    "892": {
      "op": "MSTORE"
    },
    "893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "895": {
      "op": "ADD"
    },
    "896": {
      "op": "SWAP1"
    },
    "897": {
      "op": "JUMP"
    },
    "898": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1302,
        1414
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "899": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1302,
        1414
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "901": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1302,
        1414
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "902": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1302,
        1414
      ],
      "op": "DUP1",
      "path": "4"
    },
    "903": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1302,
        1414
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "904": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1302,
        1414
      ],
      "op": "SUB",
      "path": "4"
    },
    "905": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1302,
        1414
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "906": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1302,
        1414
      ],
      "op": "LOG1",
      "path": "4"
    },
    "907": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1435,
        1439
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 8,
      "value": "0x1"
    },
    "909": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1428,
        1439
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "910": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1428,
        1439
      ],
      "op": "POP",
      "path": "4"
    },
    "911": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1428,
        1439
      ],
      "op": "POP",
      "path": "4"
    },
    "912": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1428,
        1439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3BC"
    },
    "915": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1428,
        1439
      ],
      "op": "JUMP",
      "path": "4"
    },
    "916": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1272,
        1450
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "917": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1464,
        1479
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 9,
      "value": "0x40"
    },
    "919": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1464,
        1479
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "920": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1474,
        1478
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "922": {
      "op": "DUP2"
    },
    "923": {
      "op": "MSTORE"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "926": {
      "op": "DUP1"
    },
    "927": {
      "op": "MLOAD"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "930": {
      "op": "PUSH2",
      "value": "0x6E8"
    },
    "933": {
      "op": "DUP4"
    },
    "934": {
      "op": "CODECOPY"
    },
    "935": {
      "op": "DUP2"
    },
    "936": {
      "op": "MLOAD"
    },
    "937": {
      "op": "SWAP2"
    },
    "938": {
      "op": "MSTORE"
    },
    "939": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1464,
        1479
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "942": {
      "op": "ADD"
    },
    "943": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1464,
        1479
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "945": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1464,
        1479
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "946": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1464,
        1479
      ],
      "op": "DUP1",
      "path": "4"
    },
    "947": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1464,
        1479
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "948": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1464,
        1479
      ],
      "op": "SUB",
      "path": "4"
    },
    "949": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1464,
        1479
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "950": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1464,
        1479
      ],
      "op": "LOG1",
      "path": "4"
    },
    "951": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1496,
        1501
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 10,
      "value": "0x0"
    },
    "953": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1489,
        1501
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "954": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1489,
        1501
      ],
      "op": "POP",
      "path": "4"
    },
    "955": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1489,
        1501
      ],
      "op": "POP",
      "path": "4"
    },
    "956": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1074,
        1508
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "957": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1074,
        1508
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "958": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1074,
        1508
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "959": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1074,
        1508
      ],
      "op": "POP",
      "path": "4"
    },
    "960": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1074,
        1508
      ],
      "op": "POP",
      "path": "4"
    },
    "961": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "o",
      "offset": [
        1074,
        1508
      ],
      "op": "JUMP",
      "path": "4"
    },
    "962": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        831,
        957
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "963": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        885,
        889
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "965": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        919,
        928
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 11
    },
    "966": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        919,
        928
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "967": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "969": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "970": {
      "op": "PUSH4",
      "value": "0x18300035"
    },
    "975": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "977": {
      "op": "SHL"
    },
    "978": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "DUP2",
      "path": "1"
    },
    "979": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "984": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "986": {
      "op": "SHL"
    },
    "987": {
      "op": "SUB"
    },
    "988": {
      "op": "DUP5"
    },
    "989": {
      "op": "DUP2"
    },
    "990": {
      "op": "AND"
    },
    "991": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "993": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "DUP4",
      "path": "1"
    },
    "994": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "ADD",
      "path": "1"
    },
    "995": {
      "op": "MSTORE"
    },
    "996": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        919,
        928
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "997": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        919,
        928
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "998": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        919,
        928
      ],
      "op": "AND",
      "path": "1"
    },
    "999": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        919,
        928
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1000": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        942
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x60C000D4"
    },
    "1005": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        942
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1008": {
      "op": "ADD"
    },
    "1009": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1011": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1013": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1014": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1015": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1016": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "SUB",
      "path": "1"
    },
    "1017": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1018": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1020": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1021": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1022": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "1023": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1024": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1025": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1026": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x40A"
    },
    "1029": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1030": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1032": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1033": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1034": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1035": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "POP",
      "path": "1"
    },
    "1036": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "GAS",
      "path": "1"
    },
    "1037": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "CALL",
      "path": "1"
    },
    "1038": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1039": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1040": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1041": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41E"
    },
    "1044": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1045": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1046": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1048": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1049": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1050": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1051": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1053": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1054": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1055": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "POP",
      "path": "1"
    },
    "1056": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "POP",
      "path": "1"
    },
    "1057": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "POP",
      "path": "1"
    },
    "1058": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "POP",
      "path": "1"
    },
    "1059": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1061": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1062": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1063": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1065": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "NOT",
      "path": "1"
    },
    "1066": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1068": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1069": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "ADD",
      "path": "1"
    },
    "1070": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "AND",
      "path": "1"
    },
    "1071": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1072": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "ADD",
      "path": "1"
    },
    "1073": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1074": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1076": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1077": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "POP",
      "path": "1"
    },
    "1078": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1079": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "ADD",
      "path": "1"
    },
    "1080": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1081": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3BC"
    },
    "1084": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1085": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1086": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "offset": [
        908,
        950
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4DF"
    },
    "1089": {
      "fn": "CertificateAuthorization.verifyIssuer",
      "jump": "i",
      "offset": [
        908,
        950
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1090": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        356,
        745
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1091": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        492,
        499
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1093": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        492,
        499
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1094": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        510,
        682
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1095": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        534,
        552
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1096": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        534,
        559
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1097": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        530,
        531
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1098": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        530,
        559
      ],
      "op": "LT",
      "path": "5"
    },
    "1099": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        510,
        682
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1100": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        510,
        682
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x499"
    },
    "1103": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        510,
        682
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1104": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        618,
        627
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1105": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        602
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1106": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        603,
        604
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1107": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        605
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1108": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        605
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1109": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        605
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1110": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        605
      ],
      "op": "LT",
      "path": "5"
    },
    "1111": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        605
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x462"
    },
    "1114": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        605
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1115": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        605
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x462"
    },
    "1118": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        605
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6BB"
    },
    "1121": {
      "fn": "Helper.isCertificateExist",
      "jump": "i",
      "offset": [
        584,
        605
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1122": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        605
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1123": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        605
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1125": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        605
      ],
      "op": "MUL",
      "path": "5"
    },
    "1126": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        605
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1128": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        605
      ],
      "op": "ADD",
      "path": "5"
    },
    "1129": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        605
      ],
      "op": "ADD",
      "path": "5"
    },
    "1130": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        605
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1131": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        614
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1133": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        614
      ],
      "op": "ADD",
      "path": "5"
    },
    "1134": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        614
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1135": {
      "branch": 19,
      "fn": "Helper.isCertificateExist",
      "offset": [
        584,
        627
      ],
      "op": "EQ",
      "path": "5"
    },
    "1136": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        580,
        672
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1137": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        580,
        672
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x487"
    },
    "1140": {
      "branch": 19,
      "fn": "Helper.isCertificateExist",
      "offset": [
        580,
        672
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1141": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        654,
        657
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 12,
      "value": "0x47F"
    },
    "1144": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        654,
        655
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1145": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        656,
        657
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1147": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        654,
        657
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x65B"
    },
    "1150": {
      "fn": "Helper.isCertificateExist",
      "jump": "i",
      "offset": [
        654,
        657
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1151": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        654,
        657
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1152": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        647,
        657
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1153": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        647,
        657
      ],
      "op": "POP",
      "path": "5"
    },
    "1154": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        647,
        657
      ],
      "op": "POP",
      "path": "5"
    },
    "1155": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        647,
        657
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BC"
    },
    "1158": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        647,
        657
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1159": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        580,
        672
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1160": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        561,
        564
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 13
    },
    "1161": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        561,
        564
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x491"
    },
    "1164": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        561,
        564
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1165": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        561,
        564
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x68A"
    },
    "1168": {
      "fn": "Helper.isCertificateExist",
      "jump": "i",
      "offset": [
        561,
        564
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1169": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        561,
        564
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1170": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        561,
        564
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1171": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        561,
        564
      ],
      "op": "POP",
      "path": "5"
    },
    "1172": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        561,
        564
      ],
      "op": "POP",
      "path": "5"
    },
    "1173": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        510,
        682
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x446"
    },
    "1176": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        510,
        682
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1177": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        510,
        682
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1178": {
      "op": "POP"
    },
    "1179": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        737,
        738
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 14,
      "value": "0x0"
    },
    "1181": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        737,
        738
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1182": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        356,
        745
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1183": {
      "op": "POP"
    },
    "1184": {
      "op": "POP"
    },
    "1185": {
      "op": "POP"
    },
    "1186": {
      "fn": "Helper.isCertificateExist",
      "jump": "o",
      "offset": [
        356,
        745
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1187": {
      "fn": "Helper.compareHash",
      "offset": [
        751,
        1016
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1188": {
      "fn": "Helper.compareHash",
      "offset": [
        860,
        864
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1190": {
      "fn": "Helper.compareHash",
      "offset": [
        875,
        897
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1191": {
      "fn": "Helper.compareHash",
      "offset": [
        927,
        935
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1192": {
      "fn": "Helper.compareHash",
      "offset": [
        937,
        944
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1193": {
      "fn": "Helper.compareHash",
      "offset": [
        947,
        957
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1194": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1196": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1197": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1199": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "ADD",
      "path": "5"
    },
    "1200": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4BB"
    },
    "1203": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1204": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1205": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1206": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1207": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5F6"
    },
    "1210": {
      "fn": "Helper.compareHash",
      "jump": "i",
      "offset": [
        910,
        958
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1211": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1212": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1214": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1215": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1218": {
      "op": "NOT"
    },
    "1219": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1220": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1221": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "SUB",
      "path": "5"
    },
    "1222": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "ADD",
      "path": "5"
    },
    "1223": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1224": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1225": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1226": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1227": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1228": {
      "fn": "Helper.compareHash",
      "offset": [
        900,
        959
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1229": {
      "fn": "Helper.compareHash",
      "offset": [
        900,
        959
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1230": {
      "fn": "Helper.compareHash",
      "offset": [
        910,
        958
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1232": {
      "fn": "Helper.compareHash",
      "offset": [
        900,
        959
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1233": {
      "fn": "Helper.compareHash",
      "offset": [
        900,
        959
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1234": {
      "fn": "Helper.compareHash",
      "offset": [
        900,
        959
      ],
      "op": "ADD",
      "path": "5"
    },
    "1235": {
      "fn": "Helper.compareHash",
      "offset": [
        900,
        959
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1236": {
      "fn": "Helper.compareHash",
      "offset": [
        976,
        1009
      ],
      "op": "DUP6",
      "path": "5",
      "statement": 15
    },
    "1237": {
      "fn": "Helper.compareHash",
      "offset": [
        976,
        1009
      ],
      "op": "EQ",
      "path": "5"
    },
    "1238": {
      "fn": "Helper.compareHash",
      "offset": [
        976,
        1009
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1239": {
      "op": "POP"
    },
    "1240": {
      "op": "POP"
    },
    "1241": {
      "fn": "Helper.compareHash",
      "offset": [
        751,
        1016
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1242": {
      "fn": "Helper.compareHash",
      "offset": [
        751,
        1016
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1243": {
      "fn": "Helper.compareHash",
      "offset": [
        751,
        1016
      ],
      "op": "POP",
      "path": "5"
    },
    "1244": {
      "fn": "Helper.compareHash",
      "offset": [
        751,
        1016
      ],
      "op": "POP",
      "path": "5"
    },
    "1245": {
      "fn": "Helper.compareHash",
      "offset": [
        751,
        1016
      ],
      "op": "POP",
      "path": "5"
    },
    "1246": {
      "fn": "Helper.compareHash",
      "jump": "o",
      "offset": [
        751,
        1016
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1247": {
      "op": "JUMPDEST"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1252": {
      "op": "DUP3"
    },
    "1253": {
      "op": "DUP5"
    },
    "1254": {
      "op": "SUB"
    },
    "1255": {
      "op": "SLT"
    },
    "1256": {
      "op": "ISZERO"
    },
    "1257": {
      "op": "PUSH2",
      "value": "0x4F1"
    },
    "1260": {
      "op": "JUMPI"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1263": {
      "op": "DUP1"
    },
    "1264": {
      "op": "REVERT"
    },
    "1265": {
      "op": "JUMPDEST"
    },
    "1266": {
      "op": "DUP2"
    },
    "1267": {
      "op": "MLOAD"
    },
    "1268": {
      "op": "DUP1"
    },
    "1269": {
      "op": "ISZERO"
    },
    "1270": {
      "op": "ISZERO"
    },
    "1271": {
      "op": "DUP2"
    },
    "1272": {
      "op": "EQ"
    },
    "1273": {
      "op": "PUSH2",
      "value": "0x501"
    },
    "1276": {
      "op": "JUMPI"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1279": {
      "op": "DUP1"
    },
    "1280": {
      "op": "REVERT"
    },
    "1281": {
      "op": "JUMPDEST"
    },
    "1282": {
      "op": "SWAP4"
    },
    "1283": {
      "op": "SWAP3"
    },
    "1284": {
      "op": "POP"
    },
    "1285": {
      "op": "POP"
    },
    "1286": {
      "op": "POP"
    },
    "1287": {
      "jump": "o",
      "op": "JUMP"
    },
    "1288": {
      "op": "JUMPDEST"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1291": {
      "op": "DUP1"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1294": {
      "op": "DUP4"
    },
    "1295": {
      "op": "DUP6"
    },
    "1296": {
      "op": "SUB"
    },
    "1297": {
      "op": "SLT"
    },
    "1298": {
      "op": "ISZERO"
    },
    "1299": {
      "op": "PUSH2",
      "value": "0x51B"
    },
    "1302": {
      "op": "JUMPI"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1305": {
      "op": "DUP1"
    },
    "1306": {
      "op": "REVERT"
    },
    "1307": {
      "op": "JUMPDEST"
    },
    "1308": {
      "op": "POP"
    },
    "1309": {
      "op": "POP"
    },
    "1310": {
      "op": "DUP1"
    },
    "1311": {
      "op": "CALLDATALOAD"
    },
    "1312": {
      "op": "SWAP3"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1315": {
      "op": "SWAP1"
    },
    "1316": {
      "op": "SWAP2"
    },
    "1317": {
      "op": "ADD"
    },
    "1318": {
      "op": "CALLDATALOAD"
    },
    "1319": {
      "op": "SWAP2"
    },
    "1320": {
      "op": "POP"
    },
    "1321": {
      "jump": "o",
      "op": "JUMP"
    },
    "1322": {
      "op": "JUMPDEST"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1325": {
      "op": "DUP1"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1328": {
      "op": "DUP1"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1331": {
      "op": "DUP6"
    },
    "1332": {
      "op": "DUP8"
    },
    "1333": {
      "op": "SUB"
    },
    "1334": {
      "op": "SLT"
    },
    "1335": {
      "op": "ISZERO"
    },
    "1336": {
      "op": "PUSH2",
      "value": "0x540"
    },
    "1339": {
      "op": "JUMPI"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1342": {
      "op": "DUP1"
    },
    "1343": {
      "op": "REVERT"
    },
    "1344": {
      "op": "JUMPDEST"
    },
    "1345": {
      "op": "DUP5"
    },
    "1346": {
      "op": "CALLDATALOAD"
    },
    "1347": {
      "op": "SWAP4"
    },
    "1348": {
      "op": "POP"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1351": {
      "op": "DUP6"
    },
    "1352": {
      "op": "ADD"
    },
    "1353": {
      "op": "CALLDATALOAD"
    },
    "1354": {
      "op": "SWAP3"
    },
    "1355": {
      "op": "POP"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1358": {
      "op": "DUP6"
    },
    "1359": {
      "op": "ADD"
    },
    "1360": {
      "op": "CALLDATALOAD"
    },
    "1361": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1370": {
      "op": "DUP1"
    },
    "1371": {
      "op": "DUP3"
    },
    "1372": {
      "op": "GT"
    },
    "1373": {
      "op": "ISZERO"
    },
    "1374": {
      "op": "PUSH2",
      "value": "0x566"
    },
    "1377": {
      "op": "JUMPI"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1380": {
      "op": "DUP1"
    },
    "1381": {
      "op": "REVERT"
    },
    "1382": {
      "op": "JUMPDEST"
    },
    "1383": {
      "op": "DUP2"
    },
    "1384": {
      "op": "DUP8"
    },
    "1385": {
      "op": "ADD"
    },
    "1386": {
      "op": "SWAP2"
    },
    "1387": {
      "op": "POP"
    },
    "1388": {
      "op": "DUP8"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1391": {
      "op": "DUP4"
    },
    "1392": {
      "op": "ADD"
    },
    "1393": {
      "op": "SLT"
    },
    "1394": {
      "op": "PUSH2",
      "value": "0x57A"
    },
    "1397": {
      "op": "JUMPI"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1400": {
      "op": "DUP1"
    },
    "1401": {
      "op": "REVERT"
    },
    "1402": {
      "op": "JUMPDEST"
    },
    "1403": {
      "op": "DUP2"
    },
    "1404": {
      "op": "CALLDATALOAD"
    },
    "1405": {
      "op": "DUP2"
    },
    "1406": {
      "op": "DUP2"
    },
    "1407": {
      "op": "GT"
    },
    "1408": {
      "op": "ISZERO"
    },
    "1409": {
      "op": "PUSH2",
      "value": "0x58C"
    },
    "1412": {
      "op": "JUMPI"
    },
    "1413": {
      "op": "PUSH2",
      "value": "0x58C"
    },
    "1416": {
      "op": "PUSH2",
      "value": "0x6D1"
    },
    "1419": {
      "jump": "i",
      "op": "JUMP"
    },
    "1420": {
      "op": "JUMPDEST"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1423": {
      "op": "MLOAD"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1426": {
      "op": "DUP3"
    },
    "1427": {
      "op": "ADD"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1430": {
      "op": "NOT"
    },
    "1431": {
      "op": "SWAP1"
    },
    "1432": {
      "op": "DUP2"
    },
    "1433": {
      "op": "AND"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1436": {
      "op": "ADD"
    },
    "1437": {
      "op": "AND"
    },
    "1438": {
      "op": "DUP2"
    },
    "1439": {
      "op": "ADD"
    },
    "1440": {
      "op": "SWAP1"
    },
    "1441": {
      "op": "DUP4"
    },
    "1442": {
      "op": "DUP3"
    },
    "1443": {
      "op": "GT"
    },
    "1444": {
      "op": "DUP2"
    },
    "1445": {
      "op": "DUP4"
    },
    "1446": {
      "op": "LT"
    },
    "1447": {
      "op": "OR"
    },
    "1448": {
      "op": "ISZERO"
    },
    "1449": {
      "op": "PUSH2",
      "value": "0x5B4"
    },
    "1452": {
      "op": "JUMPI"
    },
    "1453": {
      "op": "PUSH2",
      "value": "0x5B4"
    },
    "1456": {
      "op": "PUSH2",
      "value": "0x6D1"
    },
    "1459": {
      "jump": "i",
      "op": "JUMP"
    },
    "1460": {
      "op": "JUMPDEST"
    },
    "1461": {
      "op": "DUP2"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1464": {
      "op": "MSTORE"
    },
    "1465": {
      "op": "DUP3"
    },
    "1466": {
      "op": "DUP2"
    },
    "1467": {
      "op": "MSTORE"
    },
    "1468": {
      "op": "DUP11"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1471": {
      "op": "DUP5"
    },
    "1472": {
      "op": "DUP8"
    },
    "1473": {
      "op": "ADD"
    },
    "1474": {
      "op": "ADD"
    },
    "1475": {
      "op": "GT"
    },
    "1476": {
      "op": "ISZERO"
    },
    "1477": {
      "op": "PUSH2",
      "value": "0x5CD"
    },
    "1480": {
      "op": "JUMPI"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1483": {
      "op": "DUP1"
    },
    "1484": {
      "op": "REVERT"
    },
    "1485": {
      "op": "JUMPDEST"
    },
    "1486": {
      "op": "DUP3"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1489": {
      "op": "DUP7"
    },
    "1490": {
      "op": "ADD"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1493": {
      "op": "DUP4"
    },
    "1494": {
      "op": "ADD"
    },
    "1495": {
      "op": "CALLDATACOPY"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1498": {
      "op": "SWAP3"
    },
    "1499": {
      "op": "DUP2"
    },
    "1500": {
      "op": "ADD"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1503": {
      "op": "ADD"
    },
    "1504": {
      "op": "SWAP3"
    },
    "1505": {
      "op": "SWAP1"
    },
    "1506": {
      "op": "SWAP3"
    },
    "1507": {
      "op": "MSTORE"
    },
    "1508": {
      "op": "POP"
    },
    "1509": {
      "op": "SWAP6"
    },
    "1510": {
      "op": "SWAP9"
    },
    "1511": {
      "op": "SWAP5"
    },
    "1512": {
      "op": "SWAP8"
    },
    "1513": {
      "op": "POP"
    },
    "1514": {
      "op": "SWAP5"
    },
    "1515": {
      "op": "SWAP6"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1518": {
      "op": "ADD"
    },
    "1519": {
      "op": "CALLDATALOAD"
    },
    "1520": {
      "op": "SWAP5"
    },
    "1521": {
      "op": "POP"
    },
    "1522": {
      "op": "POP"
    },
    "1523": {
      "op": "POP"
    },
    "1524": {
      "op": "POP"
    },
    "1525": {
      "jump": "o",
      "op": "JUMP"
    },
    "1526": {
      "op": "JUMPDEST"
    },
    "1527": {
      "op": "DUP4"
    },
    "1528": {
      "op": "DUP2"
    },
    "1529": {
      "op": "MSTORE"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1532": {
      "op": "DUP4"
    },
    "1533": {
      "op": "MLOAD"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1536": {
      "op": "JUMPDEST"
    },
    "1537": {
      "op": "DUP2"
    },
    "1538": {
      "op": "DUP2"
    },
    "1539": {
      "op": "LT"
    },
    "1540": {
      "op": "ISZERO"
    },
    "1541": {
      "op": "PUSH2",
      "value": "0x61C"
    },
    "1544": {
      "op": "JUMPI"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1547": {
      "op": "DUP2"
    },
    "1548": {
      "op": "DUP8"
    },
    "1549": {
      "op": "ADD"
    },
    "1550": {
      "op": "DUP2"
    },
    "1551": {
      "op": "ADD"
    },
    "1552": {
      "op": "MLOAD"
    },
    "1553": {
      "op": "DUP6"
    },
    "1554": {
      "op": "DUP4"
    },
    "1555": {
      "op": "ADD"
    },
    "1556": {
      "op": "DUP3"
    },
    "1557": {
      "op": "ADD"
    },
    "1558": {
      "op": "MSTORE"
    },
    "1559": {
      "op": "ADD"
    },
    "1560": {
      "op": "PUSH2",
      "value": "0x600"
    },
    "1563": {
      "op": "JUMP"
    },
    "1564": {
      "op": "JUMPDEST"
    },
    "1565": {
      "op": "DUP2"
    },
    "1566": {
      "op": "DUP2"
    },
    "1567": {
      "op": "GT"
    },
    "1568": {
      "op": "ISZERO"
    },
    "1569": {
      "op": "PUSH2",
      "value": "0x62E"
    },
    "1572": {
      "op": "JUMPI"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1577": {
      "op": "DUP4"
    },
    "1578": {
      "op": "DUP7"
    },
    "1579": {
      "op": "ADD"
    },
    "1580": {
      "op": "ADD"
    },
    "1581": {
      "op": "MSTORE"
    },
    "1582": {
      "op": "JUMPDEST"
    },
    "1583": {
      "op": "POP"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1586": {
      "op": "SWAP4"
    },
    "1587": {
      "op": "SWAP1"
    },
    "1588": {
      "op": "SWAP4"
    },
    "1589": {
      "op": "SHL"
    },
    "1590": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1603": {
      "op": "NOT"
    },
    "1604": {
      "op": "AND"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1607": {
      "op": "SWAP3"
    },
    "1608": {
      "op": "SWAP1"
    },
    "1609": {
      "op": "SWAP4"
    },
    "1610": {
      "op": "ADD"
    },
    "1611": {
      "op": "SWAP2"
    },
    "1612": {
      "op": "DUP3"
    },
    "1613": {
      "op": "ADD"
    },
    "1614": {
      "op": "SWAP3"
    },
    "1615": {
      "op": "SWAP1"
    },
    "1616": {
      "op": "SWAP3"
    },
    "1617": {
      "op": "MSTORE"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "1620": {
      "op": "ADD"
    },
    "1621": {
      "op": "SWAP4"
    },
    "1622": {
      "op": "SWAP3"
    },
    "1623": {
      "op": "POP"
    },
    "1624": {
      "op": "POP"
    },
    "1625": {
      "op": "POP"
    },
    "1626": {
      "jump": "o",
      "op": "JUMP"
    },
    "1627": {
      "op": "JUMPDEST"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1630": {
      "op": "DUP3"
    },
    "1631": {
      "op": "NOT"
    },
    "1632": {
      "op": "DUP3"
    },
    "1633": {
      "op": "GT"
    },
    "1634": {
      "op": "ISZERO"
    },
    "1635": {
      "op": "PUSH2",
      "value": "0x66E"
    },
    "1638": {
      "op": "JUMPI"
    },
    "1639": {
      "op": "PUSH2",
      "value": "0x66E"
    },
    "1642": {
      "op": "PUSH2",
      "value": "0x6A5"
    },
    "1645": {
      "jump": "i",
      "op": "JUMP"
    },
    "1646": {
      "op": "JUMPDEST"
    },
    "1647": {
      "op": "POP"
    },
    "1648": {
      "op": "ADD"
    },
    "1649": {
      "op": "SWAP1"
    },
    "1650": {
      "jump": "o",
      "op": "JUMP"
    },
    "1651": {
      "op": "JUMPDEST"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1654": {
      "op": "DUP3"
    },
    "1655": {
      "op": "DUP3"
    },
    "1656": {
      "op": "LT"
    },
    "1657": {
      "op": "ISZERO"
    },
    "1658": {
      "op": "PUSH2",
      "value": "0x685"
    },
    "1661": {
      "op": "JUMPI"
    },
    "1662": {
      "op": "PUSH2",
      "value": "0x685"
    },
    "1665": {
      "op": "PUSH2",
      "value": "0x6A5"
    },
    "1668": {
      "jump": "i",
      "op": "JUMP"
    },
    "1669": {
      "op": "JUMPDEST"
    },
    "1670": {
      "op": "POP"
    },
    "1671": {
      "op": "SUB"
    },
    "1672": {
      "op": "SWAP1"
    },
    "1673": {
      "jump": "o",
      "op": "JUMP"
    },
    "1674": {
      "op": "JUMPDEST"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1679": {
      "op": "NOT"
    },
    "1680": {
      "op": "DUP3"
    },
    "1681": {
      "op": "EQ"
    },
    "1682": {
      "op": "ISZERO"
    },
    "1683": {
      "op": "PUSH2",
      "value": "0x69E"
    },
    "1686": {
      "op": "JUMPI"
    },
    "1687": {
      "op": "PUSH2",
      "value": "0x69E"
    },
    "1690": {
      "op": "PUSH2",
      "value": "0x6A5"
    },
    "1693": {
      "jump": "i",
      "op": "JUMP"
    },
    "1694": {
      "op": "JUMPDEST"
    },
    "1695": {
      "op": "POP"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1698": {
      "op": "ADD"
    },
    "1699": {
      "op": "SWAP1"
    },
    "1700": {
      "jump": "o",
      "op": "JUMP"
    },
    "1701": {
      "op": "JUMPDEST"
    },
    "1702": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1709": {
      "op": "SHL"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1712": {
      "op": "MSTORE"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1717": {
      "op": "MSTORE"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1722": {
      "op": "REVERT"
    },
    "1723": {
      "op": "JUMPDEST"
    },
    "1724": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1731": {
      "op": "SHL"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1734": {
      "op": "MSTORE"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1739": {
      "op": "MSTORE"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1744": {
      "op": "REVERT"
    },
    "1745": {
      "op": "JUMPDEST"
    },
    "1746": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1753": {
      "op": "SHL"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1756": {
      "op": "MSTORE"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1761": {
      "op": "MSTORE"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1766": {
      "op": "REVERT"
    }
  },
  "sha1": "7d502e917377ec4a63b44ab97585225bace103a0",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"./CertificateAuthorization.sol\";\nimport \"./Helper.sol\";\n\ncontract CertificateHandler is CertificateAuthorization, Helper {\n\n    constructor(address registrySC) CertificateAuthorization(registrySC){}\n    \n    function registerCertificate(\n        bytes32 certificate_hash, \n        bytes32 holder_id,\n        string memory payload,\n        bytes32 data_address\n    )\n        public\n        grantAccess\n        returns (bool success)\n    {\n        if (\n            isCertificateExist(certificate_hash, holder_to_certificates[holder_id]) > 0\n        ) {\n            emit IsSuccess(false);\n            return false;\n        } else {\n            if (!compareHash(certificate_hash, payload, holder_id)){\n                emit IsSuccess(false);\n                return false;\n            }\n            holder_to_certificates[holder_id].push(\n            COV_CERTIFICATE(certificate_hash,data_address,block.timestamp,msg.sender));\n            emit IsSuccess(true);\n            return true;\n        }\n    }\n\n    function verifyCertificate(bytes32 certificate_hash,bytes32 holder_id) public returns(bool){\n        uint256 index = isCertificateExist(certificate_hash, holder_to_certificates[holder_id]);\n        if(index>0){\n            emit certificateExist(\n                true,\n                holder_to_certificates[holder_id][index-1]\n            );\n            return true;\n        }\n        emit IsSuccess(true);\n        return false;\n    }\n\n\n}",
  "sourceMap": "130:1382:4:-:0;;;201:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;552:5:1;:27;;-1:-1:-1;;;;;;552:27:1;;;568:10;552:27;;;;:5;589:23;;-1:-1:-1;;;;;589:23:1;;;;;;;;;;;;;130:1382:4;;14:290:9;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:9;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:9:o;:::-;130:1382:4;;;;;;",
  "sourcePath": "contracts/Certificate/Handler.sol",
  "type": "contract"
}