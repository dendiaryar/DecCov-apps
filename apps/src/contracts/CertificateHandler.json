{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrySC",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "Registry_sc",
          "type": "address"
        }
      ],
      "name": "DebugRegistryAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "result",
          "type": "string"
        }
      ],
      "name": "IsSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "is_exist",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "cov_certificate_identifier",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "certificate_data",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct CertificateData.COV_CERTIFICATE",
          "name": "certificate_data",
          "type": "tuple"
        }
      ],
      "name": "certificateExist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "is_exist",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "cov_certificate_identifier",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "certificate_data",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct CertificateData.COV_CERTIFICATE[]",
          "name": "certificate_data",
          "type": "tuple[]"
        }
      ],
      "name": "getCertificate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "isFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "timestampEvent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holder_id",
          "type": "bytes32"
        }
      ],
      "name": "getCertificatesByUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "cov_certificate_identifier",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "certificate_data",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct CertificateData.COV_CERTIFICATE[]",
          "name": "certificate_data",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "certificate_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "holder_id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "data_address",
          "type": "bytes32"
        }
      ],
      "name": "registerCertificate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "certificate_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "holder_id",
          "type": "bytes32"
        }
      ],
      "name": "verifyCertificate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "cov_certificate_identifier",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "certificate_data",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct CertificateData.COV_CERTIFICATE",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/Certificate/CertificateAuthorization.sol",
    "2": "contracts/Certificate/Data.sol",
    "3": "contracts/Certificate/Handler.sol",
    "4": "contracts/Certificate/Helper.sol"
  },
  "ast": {
    "absolutePath": "contracts/Certificate/Handler.sol",
    "exportedSymbols": {
      "CertificateAuthorization": [
        96
      ],
      "CertificateData": [
        112
      ],
      "CertificateHandler": [
        266
      ],
      "Helper": [
        366
      ],
      "IssuerData": [
        25
      ]
    },
    "id": 267,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 114,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:3"
      },
      {
        "absolutePath": "contracts/Certificate/CertificateAuthorization.sol",
        "file": "./CertificateAuthorization.sol",
        "id": 115,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 267,
        "sourceUnit": 97,
        "src": "65:40:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 116,
              "name": "CertificateAuthorization",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 96,
              "src": "138:24:3"
            },
            "id": 117,
            "nodeType": "InheritanceSpecifier",
            "src": "138:24:3"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 266,
        "linearizedBaseContracts": [
          266,
          96,
          366,
          112
        ],
        "name": "CertificateHandler",
        "nameLocation": "116:18:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "237:2:3",
              "statements": []
            },
            "id": 126,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 122,
                    "name": "registrySC",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 119,
                    "src": "226:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 123,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 121,
                  "name": "CertificateAuthorization",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 96,
                  "src": "201:24:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "201:36:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "registrySC",
                  "nameLocation": "189:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "181:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "181:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "180:20:3"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "237:0:3"
            },
            "scope": 266,
            "src": "169:70:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "479:644:3",
              "statements": [
                {
                  "assignments": [
                    140
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 140,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "497:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 201,
                      "src": "489:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 139,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "489:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 147,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 142,
                        "name": "certificate_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "524:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 143,
                          "name": "holder_to_certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "542:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$105_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct CertificateData.COV_CERTIFICATE storage ref[] storage ref)"
                          }
                        },
                        "id": 145,
                        "indexExpression": {
                          "id": 144,
                          "name": "holder_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130,
                          "src": "565:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "542:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$105_storage_$dyn_storage",
                          "typeString": "struct CertificateData.COV_CERTIFICATE storage ref[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$105_storage_$dyn_storage",
                          "typeString": "struct CertificateData.COV_CERTIFICATE storage ref[] storage ref"
                        }
                      ],
                      "id": 141,
                      "name": "isCertificateExist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 339,
                      "src": "505:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$105_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes32,struct CertificateData.COV_CERTIFICATE memory[] memory) pure returns (uint256)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "505:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "489:87:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 148,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "590:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "596:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "590:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "600:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "590:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 199,
                    "nodeType": "Block",
                    "src": "822:295:3",
                    "statements": [
                      {
                        "assignments": [
                          173
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 173,
                            "mutability": "mutable",
                            "name": "timestamp",
                            "nameLocation": "844:9:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 199,
                            "src": "836:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 172,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "836:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 176,
                        "initialValue": {
                          "expression": {
                            "id": 174,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "856:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "856:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "836:35:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 182,
                                  "name": "certificate_hash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 128,
                                  "src": "953:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 183,
                                  "name": "data_address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 132,
                                  "src": "970:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 184,
                                  "name": "timestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 173,
                                  "src": "983:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 181,
                                "name": "COV_CERTIFICATE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105,
                                "src": "937:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_COV_CERTIFICATE_$105_storage_ptr_$",
                                  "typeString": "type(struct CertificateData.COV_CERTIFICATE storage pointer)"
                                }
                              },
                              "id": 185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "937:56:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_COV_CERTIFICATE_$105_memory_ptr",
                                "typeString": "struct CertificateData.COV_CERTIFICATE memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_COV_CERTIFICATE_$105_memory_ptr",
                                "typeString": "struct CertificateData.COV_CERTIFICATE memory"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 177,
                                "name": "holder_to_certificates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "885:22:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$105_storage_$dyn_storage_$",
                                  "typeString": "mapping(bytes32 => struct CertificateData.COV_CERTIFICATE storage ref[] storage ref)"
                                }
                              },
                              "id": 179,
                              "indexExpression": {
                                "id": 178,
                                "name": "holder_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 130,
                                "src": "908:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "885:33:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$105_storage_$dyn_storage",
                                "typeString": "struct CertificateData.COV_CERTIFICATE storage ref[] storage ref"
                              }
                            },
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "885:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_COV_CERTIFICATE_$105_storage_$dyn_storage_ptr_$_t_struct$_COV_CERTIFICATE_$105_storage_$returns$__$bound_to$_t_array$_t_struct$_COV_CERTIFICATE_$105_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct CertificateData.COV_CERTIFICATE storage ref[] storage pointer,struct CertificateData.COV_CERTIFICATE storage ref)"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "885:109:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 187,
                        "nodeType": "ExpressionStatement",
                        "src": "885:109:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1023:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "73746f726564",
                              "id": 190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1028:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_62abd276aae8e6f841196366f5e78aedbdb6cc3fbe30da0c9ca4cb4382c135cd",
                                "typeString": "literal_string \"stored\""
                              },
                              "value": "stored"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_62abd276aae8e6f841196366f5e78aedbdb6cc3fbe30da0c9ca4cb4382c135cd",
                                "typeString": "literal_string \"stored\""
                              }
                            ],
                            "id": 188,
                            "name": "IsSuccess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 277,
                            "src": "1013:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1013:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 192,
                        "nodeType": "EmitStatement",
                        "src": "1008:29:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 194,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 173,
                              "src": "1071:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 193,
                            "name": "timestampEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 300,
                            "src": "1056:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1056:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 196,
                        "nodeType": "EmitStatement",
                        "src": "1051:30:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1102:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 138,
                        "id": 198,
                        "nodeType": "Return",
                        "src": "1095:11:3"
                      }
                    ]
                  },
                  "id": 200,
                  "nodeType": "IfStatement",
                  "src": "586:531:3",
                  "trueBody": {
                    "id": 171,
                    "nodeType": "Block",
                    "src": "603:213:3",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "66616c7365",
                              "id": 154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "632:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "616c7265616479",
                              "id": 155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "638:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4d68d74f0eb71ad33b0461f9e93dd42c23615ec558b78fd521e288d1779313d9",
                                "typeString": "literal_string \"already\""
                              },
                              "value": "already"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4d68d74f0eb71ad33b0461f9e93dd42c23615ec558b78fd521e288d1779313d9",
                                "typeString": "literal_string \"already\""
                              }
                            ],
                            "id": 153,
                            "name": "IsSuccess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 277,
                            "src": "622:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "622:26:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 157,
                        "nodeType": "EmitStatement",
                        "src": "617:31:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "701:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 160,
                                  "name": "holder_to_certificates",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 111,
                                  "src": "723:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$105_storage_$dyn_storage_$",
                                    "typeString": "mapping(bytes32 => struct CertificateData.COV_CERTIFICATE storage ref[] storage ref)"
                                  }
                                },
                                "id": 162,
                                "indexExpression": {
                                  "id": 161,
                                  "name": "holder_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 130,
                                  "src": "746:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "723:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$105_storage_$dyn_storage",
                                  "typeString": "struct CertificateData.COV_CERTIFICATE storage ref[] storage ref"
                                }
                              },
                              "id": 166,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 163,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 140,
                                  "src": "757:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 164,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "763:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "757:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "723:42:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_COV_CERTIFICATE_$105_storage",
                                "typeString": "struct CertificateData.COV_CERTIFICATE storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_struct$_COV_CERTIFICATE_$105_storage",
                                "typeString": "struct CertificateData.COV_CERTIFICATE storage ref"
                              }
                            ],
                            "id": 158,
                            "name": "certificateExist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "667:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_struct$_COV_CERTIFICATE_$105_memory_ptr_$returns$__$",
                              "typeString": "function (bool,struct CertificateData.COV_CERTIFICATE memory)"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "667:112:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 168,
                        "nodeType": "EmitStatement",
                        "src": "662:117:3"
                      },
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "800:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 138,
                        "id": 170,
                        "nodeType": "Return",
                        "src": "793:12:3"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "d5864031",
            "id": 202,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 135,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 134,
                  "name": "grantAccess",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 95,
                  "src": "432:11:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "432:11:3"
              }
            ],
            "name": "registerCertificate",
            "nameLocation": "258:19:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "certificate_hash",
                  "nameLocation": "295:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "287:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "287:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "holder_id",
                  "nameLocation": "330:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "322:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "data_address",
                  "nameLocation": "390:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "382:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "277:131:3"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "466:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "461:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "460:14:3"
            },
            "scope": 266,
            "src": "249:874:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 250,
              "nodeType": "Block",
              "src": "1248:274:3",
              "statements": [
                {
                  "assignments": [
                    215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 215,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "1266:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 250,
                      "src": "1258:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 214,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1258:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 222,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 217,
                        "name": "certificate_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "1293:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 218,
                          "name": "holder_to_certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "1311:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$105_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct CertificateData.COV_CERTIFICATE storage ref[] storage ref)"
                          }
                        },
                        "id": 220,
                        "indexExpression": {
                          "id": 219,
                          "name": "holder_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 206,
                          "src": "1334:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1311:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$105_storage_$dyn_storage",
                          "typeString": "struct CertificateData.COV_CERTIFICATE storage ref[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$105_storage_$dyn_storage",
                          "typeString": "struct CertificateData.COV_CERTIFICATE storage ref[] storage ref"
                        }
                      ],
                      "id": 216,
                      "name": "isCertificateExist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 339,
                      "src": "1274:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$105_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes32,struct CertificateData.COV_CERTIFICATE memory[] memory) pure returns (uint256)"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1274:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1258:87:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 223,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "1358:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1364:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1358:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1366:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1358:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 239,
                  "nodeType": "IfStatement",
                  "src": "1355:94:3",
                  "trueBody": {
                    "id": 238,
                    "nodeType": "Block",
                    "src": "1368:81:3",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1390:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 229,
                                  "name": "holder_to_certificates",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 111,
                                  "src": "1395:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$105_storage_$dyn_storage_$",
                                    "typeString": "mapping(bytes32 => struct CertificateData.COV_CERTIFICATE storage ref[] storage ref)"
                                  }
                                },
                                "id": 231,
                                "indexExpression": {
                                  "id": 230,
                                  "name": "holder_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 206,
                                  "src": "1418:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1395:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$105_storage_$dyn_storage",
                                  "typeString": "struct CertificateData.COV_CERTIFICATE storage ref[] storage ref"
                                }
                              },
                              "id": 235,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 234,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 232,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 215,
                                  "src": "1429:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 233,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1435:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "1429:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1395:42:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_COV_CERTIFICATE_$105_storage",
                                "typeString": "struct CertificateData.COV_CERTIFICATE storage ref"
                              }
                            }
                          ],
                          "id": 236,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1389:49:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_COV_CERTIFICATE_$105_storage_$",
                            "typeString": "tuple(bool,struct CertificateData.COV_CERTIFICATE storage ref)"
                          }
                        },
                        "functionReturnParameters": 213,
                        "id": 237,
                        "nodeType": "Return",
                        "src": "1382:56:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "66616c7365",
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1466:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 241,
                            "name": "holder_to_certificates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "1472:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$105_storage_$dyn_storage_$",
                              "typeString": "mapping(bytes32 => struct CertificateData.COV_CERTIFICATE storage ref[] storage ref)"
                            }
                          },
                          "id": 243,
                          "indexExpression": {
                            "id": 242,
                            "name": "holder_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "1495:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1472:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$105_storage_$dyn_storage",
                            "typeString": "struct CertificateData.COV_CERTIFICATE storage ref[] storage ref"
                          }
                        },
                        "id": 247,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 244,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 215,
                            "src": "1506:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1512:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1506:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1472:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_COV_CERTIFICATE_$105_storage",
                          "typeString": "struct CertificateData.COV_CERTIFICATE storage ref"
                        }
                      }
                    ],
                    "id": 248,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1465:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_COV_CERTIFICATE_$105_storage_$",
                      "typeString": "tuple(bool,struct CertificateData.COV_CERTIFICATE storage ref)"
                    }
                  },
                  "functionReturnParameters": 213,
                  "id": 249,
                  "nodeType": "Return",
                  "src": "1458:57:3"
                }
              ]
            },
            "functionSelector": "1f75435d",
            "id": 251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyCertificate",
            "nameLocation": "1138:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "certificate_hash",
                  "nameLocation": "1164:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "1156:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1156:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "holder_id",
                  "nameLocation": "1189:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "1181:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1181:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1155:44:3"
            },
            "returnParameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "1220:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "1225:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_COV_CERTIFICATE_$105_memory_ptr",
                    "typeString": "struct CertificateData.COV_CERTIFICATE"
                  },
                  "typeName": {
                    "id": 211,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 210,
                      "name": "COV_CERTIFICATE",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 105,
                      "src": "1225:15:3"
                    },
                    "referencedDeclaration": 105,
                    "src": "1225:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_COV_CERTIFICATE_$105_storage_ptr",
                      "typeString": "struct CertificateData.COV_CERTIFICATE"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1219:29:3"
            },
            "scope": 266,
            "src": "1129:393:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 264,
              "nodeType": "Block",
              "src": "1670:57:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 260,
                      "name": "holder_to_certificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "1687:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$105_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct CertificateData.COV_CERTIFICATE storage ref[] storage ref)"
                      }
                    },
                    "id": 262,
                    "indexExpression": {
                      "id": 261,
                      "name": "holder_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 253,
                      "src": "1710:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1687:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$105_storage_$dyn_storage",
                      "typeString": "struct CertificateData.COV_CERTIFICATE storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 259,
                  "id": 263,
                  "nodeType": "Return",
                  "src": "1680:40:3"
                }
              ]
            },
            "functionSelector": "54ca51db",
            "id": 265,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCertificatesByUser",
            "nameLocation": "1537:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 253,
                  "mutability": "mutable",
                  "name": "holder_id",
                  "nameLocation": "1567:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "1559:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1559:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1558:19:3"
            },
            "returnParameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "mutability": "mutable",
                  "name": "certificate_data",
                  "nameLocation": "1648:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "1623:41:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$105_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct CertificateData.COV_CERTIFICATE[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 256,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 255,
                        "name": "COV_CERTIFICATE",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 105,
                        "src": "1623:15:3"
                      },
                      "referencedDeclaration": 105,
                      "src": "1623:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_COV_CERTIFICATE_$105_storage_ptr",
                        "typeString": "struct CertificateData.COV_CERTIFICATE"
                      }
                    },
                    "id": 257,
                    "nodeType": "ArrayTypeName",
                    "src": "1623:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$105_storage_$dyn_storage_ptr",
                      "typeString": "struct CertificateData.COV_CERTIFICATE[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1622:43:3"
            },
            "scope": 266,
            "src": "1528:199:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 267,
        "src": "107:1624:3",
        "usedErrors": []
      }
    ],
    "src": "32:1699:3"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516108c33803806108c383398101604081905261002f91610062565b600380546001600160a01b03199081163317909155600180546001600160a01b0390931692909116919091179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b610822806100a16000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f75435d1461005157806354ca51db1461007b578063d58640311461009b578063f21de1e8146100be575b600080fd5b61006461005f36600461069c565b6100d9565b60405161007292919061074c565b60405180910390f35b61008e610089366004610683565b610270565b60405161007291906106ea565b6100ae6100a93660046106be565b6102f7565b6040519015158152602001610072565b6001546040516001600160a01b039091168152602001610072565b60408051606081018252600080825260208201819052918101829052600083815260208181526040808320805482518185028101850190935280835261017c938993929190869084015b828210156101735783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020019060010190610123565b50505050610583565b9050600061018b60018361078e565b11156102005760008481526020819052604090206001906101ac828461078e565b815481106101bc576101bc6107d6565b906000526020600020906003020180604051806060016040529081600082015481526020016001820154815260200160028201548152505090509250925050610269565b600084815260208190526040812061021960018461078e565b81548110610229576102296107d6565b9060005260206000209060030201806040518060600160405290816000820154815260200160018201548152602001600282015481525050905092509250505b9250929050565b600081815260208181526040808320805482518185028101850190935280835260609492939192909184015b828210156102ec578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250508152602001906001019061029c565b505050509050919050565b6000610302336105e6565b151560011461031057600080fd5b600083815260208181526040808320805482518185028101850190935280835261038b9389939291908690840182156101735783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020019060010190610123565b9050600061039a60018361078e565b1115610496577fb7cdced8c7c4e48fcb5e29e76371e78f62509ff97a6175d44f84ad36252008e460006040516103f3911515815260406020820181905260079082015266616c726561647960c81b606082015260800190565b60405180910390a160008481526020819052604090207fccc0c5d3c89cfcf7d56826ec7ef2aebe60e5dfe931762fef6892936d105549b790600190610438828561078e565b81548110610448576104486107d6565b90600052602060002090600302016040516104849291909115158252805460208301526001810154604083015260020154606082015260800190565b60405180910390a1600091505061057c565b600084815260208181526040808320815160608101835289815280840188815242828501818152845460018181018755958952969097209251600390960290920194855551848301559351600290930192909255517fb7cdced8c7c4e48fcb5e29e76371e78f62509ff97a6175d44f84ad36252008e49161053a919015158152604060208201819052600690820152651cdd1bdc995960d21b606082015260800190565b60405180910390a16040518181527fb776f27e2626443cee65f6c6f97999f4a5c737555723bdd3513a565406a61fed9060200160405180910390a16001925050505b9392505050565b6000805b82518110156105da57838382815181106105a3576105a36107d6565b60200260200101516000015114156105c8576105c0816001610776565b9150506105e0565b806105d2816107a5565b915050610587565b50600190505b92915050565b600154604051633aa3a01560e11b81526001600160a01b0383811660048301526000921690637547402a90602401602060405180830381600087803b15801561062e57600080fd5b505af1158015610642573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e0919060006020828403121561067357600080fd5b8151801515811461057c57600080fd5b60006020828403121561069557600080fd5b5035919050565b600080604083850312156106af57600080fd5b50508035926020909101359150565b6000806000606084860312156106d357600080fd5b505081359360208301359350604090920135919050565b6020808252825182820181905260009190848201906040850190845b818110156107405761072d8385518051825260208082015190830152604090810151910152565b9284019260609290920191600101610706565b50909695505050505050565b82151581526080810161057c60208301848051825260208082015190830152604090810151910152565b60008219821115610789576107896107c0565b500190565b6000828210156107a0576107a06107c0565b500390565b60006000198214156107b9576107b96107c0565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220e84211e56d9b1ccfb91c0c7af7711150c37945ab7498a59f30ad2ca51572b06464736f6c63430008070033",
  "bytecodeSha1": "e3b11d31a3dd37dbc8be26a1d945ead8c3bbe156",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "CertificateHandler",
  "coverageMap": {
    "branches": {
      "1": {},
      "2": {},
      "3": {
        "CertificateHandler.registerCertificate": {
          "16": [
            590,
            601,
            false
          ]
        },
        "CertificateHandler.verifyCertificate": {
          "15": [
            1358,
            1367,
            false
          ]
        }
      },
      "4": {
        "Helper.isCertificateExist": {
          "17": [
            760,
            821,
            false
          ]
        }
      }
    },
    "statements": {
      "1": {
        "CertificateAuthorization.checkSignerIsIssuer": {
          "14": [
            944,
            997
          ]
        },
        "CertificateAuthorization.getRegistryAddress": {
          "0": [
            838,
            854
          ]
        }
      },
      "2": {},
      "3": {
        "CertificateHandler.getCertificatesByUser": {
          "3": [
            1680,
            1720
          ]
        },
        "CertificateHandler.registerCertificate": {
          "4": [
            617,
            648
          ],
          "5": [
            662,
            779
          ],
          "6": [
            793,
            805
          ],
          "7": [
            885,
            994
          ],
          "8": [
            1008,
            1037
          ],
          "9": [
            1051,
            1081
          ],
          "10": [
            1095,
            1106
          ]
        },
        "CertificateHandler.verifyCertificate": {
          "1": [
            1382,
            1438
          ],
          "2": [
            1458,
            1515
          ]
        }
      },
      "4": {
        "Helper.isCertificateExist": {
          "11": [
            841,
            851
          ],
          "12": [
            737,
            740
          ],
          "13": [
            965,
            973
          ]
        }
      }
    }
  },
  "dependencies": [
    "CertificateAuthorization",
    "CertificateData",
    "Helper"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f75435d1461005157806354ca51db1461007b578063d58640311461009b578063f21de1e8146100be575b600080fd5b61006461005f36600461069c565b6100d9565b60405161007292919061074c565b60405180910390f35b61008e610089366004610683565b610270565b60405161007291906106ea565b6100ae6100a93660046106be565b6102f7565b6040519015158152602001610072565b6001546040516001600160a01b039091168152602001610072565b60408051606081018252600080825260208201819052918101829052600083815260208181526040808320805482518185028101850190935280835261017c938993929190869084015b828210156101735783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020019060010190610123565b50505050610583565b9050600061018b60018361078e565b11156102005760008481526020819052604090206001906101ac828461078e565b815481106101bc576101bc6107d6565b906000526020600020906003020180604051806060016040529081600082015481526020016001820154815260200160028201548152505090509250925050610269565b600084815260208190526040812061021960018461078e565b81548110610229576102296107d6565b9060005260206000209060030201806040518060600160405290816000820154815260200160018201548152602001600282015481525050905092509250505b9250929050565b600081815260208181526040808320805482518185028101850190935280835260609492939192909184015b828210156102ec578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250508152602001906001019061029c565b505050509050919050565b6000610302336105e6565b151560011461031057600080fd5b600083815260208181526040808320805482518185028101850190935280835261038b9389939291908690840182156101735783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020019060010190610123565b9050600061039a60018361078e565b1115610496577fb7cdced8c7c4e48fcb5e29e76371e78f62509ff97a6175d44f84ad36252008e460006040516103f3911515815260406020820181905260079082015266616c726561647960c81b606082015260800190565b60405180910390a160008481526020819052604090207fccc0c5d3c89cfcf7d56826ec7ef2aebe60e5dfe931762fef6892936d105549b790600190610438828561078e565b81548110610448576104486107d6565b90600052602060002090600302016040516104849291909115158252805460208301526001810154604083015260020154606082015260800190565b60405180910390a1600091505061057c565b600084815260208181526040808320815160608101835289815280840188815242828501818152845460018181018755958952969097209251600390960290920194855551848301559351600290930192909255517fb7cdced8c7c4e48fcb5e29e76371e78f62509ff97a6175d44f84ad36252008e49161053a919015158152604060208201819052600690820152651cdd1bdc995960d21b606082015260800190565b60405180910390a16040518181527fb776f27e2626443cee65f6c6f97999f4a5c737555723bdd3513a565406a61fed9060200160405180910390a16001925050505b9392505050565b6000805b82518110156105da57838382815181106105a3576105a36107d6565b60200260200101516000015114156105c8576105c0816001610776565b9150506105e0565b806105d2816107a5565b915050610587565b50600190505b92915050565b600154604051633aa3a01560e11b81526001600160a01b0383811660048301526000921690637547402a90602401602060405180830381600087803b15801561062e57600080fd5b505af1158015610642573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e0919060006020828403121561067357600080fd5b8151801515811461057c57600080fd5b60006020828403121561069557600080fd5b5035919050565b600080604083850312156106af57600080fd5b50508035926020909101359150565b6000806000606084860312156106d357600080fd5b505081359360208301359350604090920135919050565b6020808252825182820181905260009190848201906040850190845b818110156107405761072d8385518051825260208082015190830152604090810151910152565b9284019260609290920191600101610706565b50909695505050505050565b82151581526080810161057c60208301848051825260208082015190830152604090810151910152565b60008219821115610789576107896107c0565b500190565b6000828210156107a0576107a06107c0565b500390565b60006000198214156107b9576107b96107c0565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220e84211e56d9b1ccfb91c0c7af7711150c37945ab7498a59f30ad2ca51572b06464736f6c63430008070033",
  "deployedSourceMap": "107:1624:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:393;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1528:199;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;249:874::-;;;;;;:::i;:::-;;:::i;:::-;;;2375:14:8;;2368:22;2350:41;;2338:2;2323:18;249:874:3;2210:187:8;771:90:1;845:9;;771:90;;-1:-1:-1;;;;;845:9:1;;;1418:51:8;;1406:2;1391:18;771:90:1;1272:203:8;1129:393:3;-1:-1:-1;;;;;;;;1220:4:3;-1:-1:-1;;;;;;;;;;;;;;;1258:13:3;1311:33;;;;;;;;;;;1274:71;;;;;;;;;;;;;;;;;;;1293:16;;1274:71;1311:33;1274:71;1258:13;;1274:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:18;:71::i;:::-;1258:87;-1:-1:-1;1366:1:3;1358:7;1364:1;1258:87;1358:7;:::i;:::-;:9;1355:94;;;1395:22;:33;;;;;;;;;;1390:4;;1429:7;1390:4;1429:5;:7;:::i;:::-;1395:42;;;;;;;;:::i;:::-;;;;;;;;;;;1382:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1355:94;1466:5;1472:33;;;;;;;;;;1506:7;1512:1;1506:5;:7;:::i;:::-;1472:42;;;;;;;;:::i;:::-;;;;;;;;;;;1458:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:393;;;;;;:::o;1528:199::-;1687:22;:33;;;;;;;;;;;1680:40;;;;;;;;;;;;;;;;;1623:41;;1680:40;;1687:33;;1680:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1528:199;;;:::o;249:874::-;461:12;1050:31:1;1070:10;1050:19;:31::i;:::-;:39;;1085:4;1050:39;1042:48;;;;;;489:13:3::1;542:33:::0;;;::::1;::::0;;;;;;;505:71;;;;;;::::1;::::0;;;;;;;;;;::::1;::::0;524:16;;505:71;542:33;505:71;489:13;;505:71;::::1;::::0;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;489:87:::0;-1:-1:-1;600:1:3::1;590:7;596:1;489:87:::0;590:7:::1;:::i;:::-;:11;586:531;;;622:26;632:5;622:26;;;;2633:14:8::0;2626:22;2608:41;;2685:2;2680;2665:18;;2658:30;;;2724:1;2704:18;;;2697:29;-1:-1:-1;;;2757:2:8;2742:18;;2735:37;2804:3;2789:19;;2402:412;622:26:3::1;;;;;;;;723:22;:33:::0;;;::::1;::::0;;;;;;667:112:::1;::::0;701:4:::1;::::0;757:7:::1;701:4:::0;757:5;:7:::1;:::i;:::-;723:42;;;;;;;;:::i;:::-;;;;;;;;;;;667:112;;;;;;3845:14:8::0;;3838:22;3820:41;;3897:13;;3892:2;3877:18;;3870:41;3965:4;3953:17;;3947:24;3942:2;3927:18;;3920:52;4026:4;4014:17;4008:24;4003:2;3988:18;;3981:52;3807:3;3792:19;;3590:449;667:112:3::1;;;;;;;;800:5;793:12;;;;;586:531;836:17;885:33:::0;;;::::1;::::0;;;;;;;937:56;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;856:15:::1;937:56:::0;;;;;;885:109;;::::1;::::0;;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;1013:24;::::1;::::0;::::1;::::0;3050:14:8;;3043:22;3025:41;;3102:2;3097;3082:18;;3075:30;;;3141:1;3121:18;;;3114:29;-1:-1:-1;;;3174:2:8;3159:18;;3152:36;3220:3;3205:19;;2819:411;1013:24:3::1;;;;;;;;1056:25;::::0;4190::8;;;1056::3::1;::::0;4178:2:8;4163:18;1056:25:3::1;;;;;;;1102:4;1095:11;;;;1100:1:1;249:874:3::0;;;;;:::o;532:448:4:-;668:7;;686:190;710:18;:25;706:1;:29;686:190;;;812:9;760:18;779:1;760:21;;;;;;;;:::i;:::-;;;;;;;:48;;;:61;756:110;;;848:3;:1;850;848:3;:::i;:::-;841:10;;;;;756:110;737:3;;;;:::i;:::-;;;;686:190;;;;972:1;965:8;;532:448;;;;;:::o;867:137:1:-;962:9;;951:46;;-1:-1:-1;;;951:46:1;;-1:-1:-1;;;;;1436:32:8;;;951:46:1;;;1418:51:8;928:4:1;;962:9;;951:38;;1391:18:8;;951:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;81:6:8;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;182:9;176:16;235:5;228:13;221:21;214:5;211:32;201:60;;257:1;254;247:12;296:180;355:6;408:2;396:9;387:7;383:23;379:32;376:52;;;424:1;421;414:12;376:52;-1:-1:-1;447:23:8;;296:180;-1:-1:-1;296:180:8:o;481:248::-;549:6;557;610:2;598:9;589:7;585:23;581:32;578:52;;;626:1;623;616:12;578:52;-1:-1:-1;;649:23:8;;;719:2;704:18;;;691:32;;-1:-1:-1;481:248:8:o;734:316::-;811:6;819;827;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;-1:-1:-1;;919:23:8;;;989:2;974:18;;961:32;;-1:-1:-1;1040:2:8;1025:18;;;1012:32;;734:316;-1:-1:-1;734:316:8:o;1480:725::-;1715:2;1767:21;;;1837:13;;1740:18;;;1859:22;;;1686:4;;1715:2;1938:15;;;;1912:2;1897:18;;;1686:4;1981:198;1995:6;1992:1;1989:13;1981:198;;;2044:53;2093:3;2084:6;2078:13;1136:12;;1124:25;;1198:4;1187:16;;;1181:23;1165:14;;;1158:47;1254:4;1243:16;;;1237:23;1221:14;;1214:47;1055:212;2044:53;2154:15;;;;2126:4;2117:14;;;;;2017:1;2010:9;1981:198;;;-1:-1:-1;2196:3:8;;1480:725;-1:-1:-1;;;;;;1480:725:8:o;3235:350::-;3493:14;;3486:22;3468:41;;3455:3;3440:19;;3518:61;3575:2;3560:18;;3552:6;1136:12;;1124:25;;1198:4;1187:16;;;1181:23;1165:14;;;1158:47;1254:4;1243:16;;;1237:23;1221:14;;1214:47;1055:212;4226:128;4266:3;4297:1;4293:6;4290:1;4287:13;4284:39;;;4303:18;;:::i;:::-;-1:-1:-1;4339:9:8;;4226:128::o;4359:125::-;4399:4;4427:1;4424;4421:8;4418:34;;;4432:18;;:::i;:::-;-1:-1:-1;4469:9:8;;4359:125::o;4489:135::-;4528:3;-1:-1:-1;;4549:17:8;;4546:43;;;4569:18;;:::i;:::-;-1:-1:-1;4616:1:8;4605:13;;4489:135::o;4629:127::-;4690:10;4685:3;4681:20;4678:1;4671:31;4721:4;4718:1;4711:15;4745:4;4742:1;4735:15;4761:127;4822:10;4817:3;4813:20;4810:1;4803:31;4853:4;4850:1;4843:15;4877:4;4874:1;4867:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    107,
    1731
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F75435D EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x54CA51DB EQ PUSH2 0x7B JUMPI DUP1 PUSH4 0xD5864031 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0xF21DE1E8 EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72 SWAP3 SWAP2 SWAP1 PUSH2 0x74C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8E PUSH2 0x89 CALLDATASIZE PUSH1 0x4 PUSH2 0x683 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72 SWAP2 SWAP1 PUSH2 0x6EA JUMP JUMPDEST PUSH2 0xAE PUSH2 0xA9 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x72 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x72 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH2 0x17C SWAP4 DUP10 SWAP4 SWAP3 SWAP2 SWAP1 DUP7 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x173 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x123 JUMP JUMPDEST POP POP POP POP PUSH2 0x583 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18B PUSH1 0x1 DUP4 PUSH2 0x78E JUMP JUMPDEST GT ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 PUSH2 0x1AC DUP3 DUP5 PUSH2 0x78E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1BC JUMPI PUSH2 0x1BC PUSH2 0x7D6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP3 POP SWAP3 POP POP PUSH2 0x269 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x219 PUSH1 0x1 DUP5 PUSH2 0x78E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x229 JUMPI PUSH2 0x229 PUSH2 0x7D6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x2EC JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x29C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x302 CALLER PUSH2 0x5E6 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH2 0x38B SWAP4 DUP10 SWAP4 SWAP3 SWAP2 SWAP1 DUP7 SWAP1 DUP5 ADD DUP3 ISZERO PUSH2 0x173 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x123 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x39A PUSH1 0x1 DUP4 PUSH2 0x78E JUMP JUMPDEST GT ISZERO PUSH2 0x496 JUMPI PUSH32 0xB7CDCED8C7C4E48FCB5E29E76371E78F62509FF97A6175D44F84AD36252008E4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x3F3 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x616C7265616479 PUSH1 0xC8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0xCCC0C5D3C89CFCF7D56826EC7EF2AEBE60E5DFE931762FEF6892936D105549B7 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x438 DUP3 DUP6 PUSH2 0x78E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x448 JUMPI PUSH2 0x448 PUSH2 0x7D6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD PUSH2 0x484 SWAP3 SWAP2 SWAP1 SWAP2 ISZERO ISZERO DUP3 MSTORE DUP1 SLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SWAP2 POP POP PUSH2 0x57C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP10 DUP2 MSTORE DUP1 DUP5 ADD DUP9 DUP2 MSTORE TIMESTAMP DUP3 DUP6 ADD DUP2 DUP2 MSTORE DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP8 SSTORE SWAP6 DUP10 MSTORE SWAP7 SWAP1 SWAP8 KECCAK256 SWAP3 MLOAD PUSH1 0x3 SWAP1 SWAP7 MUL SWAP1 SWAP3 ADD SWAP5 DUP6 SSTORE MLOAD DUP5 DUP4 ADD SSTORE SWAP4 MLOAD PUSH1 0x2 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE MLOAD PUSH32 0xB7CDCED8C7C4E48FCB5E29E76371E78F62509FF97A6175D44F84AD36252008E4 SWAP2 PUSH2 0x53A SWAP2 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x6 SWAP1 DUP3 ADD MSTORE PUSH6 0x1CDD1BDC9959 PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xB776F27E2626443CEE65F6C6F97999F4A5C737555723BDD3513A565406A61FED SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x5DA JUMPI DUP4 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A3 JUMPI PUSH2 0x5A3 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x5C8 JUMPI PUSH2 0x5C0 DUP2 PUSH1 0x1 PUSH2 0x776 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5E0 JUMP JUMPDEST DUP1 PUSH2 0x5D2 DUP2 PUSH2 0x7A5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x587 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3AA3A015 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x7547402A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x642 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E0 SWAP2 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x740 JUMPI PUSH2 0x72D DUP4 DUP6 MLOAD DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 PUSH1 0x60 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x706 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x57C PUSH1 0x20 DUP4 ADD DUP5 DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x789 JUMPI PUSH2 0x789 PUSH2 0x7C0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x7A0 JUMPI PUSH2 0x7A0 PUSH2 0x7C0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x7B9 JUMPI PUSH2 0x7B9 PUSH2 0x7C0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 TIMESTAMP GT 0xE5 PUSH14 0x9B1CCFB91C0C7AF7711150C37945 0xAB PUSH21 0x98A59F30AD2CA51572B06464736F6C634300080700 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        107,
        1731
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1F75435D"
    },
    "38": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "EQ",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x54CA51DB"
    },
    "49": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "EQ",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7B"
    },
    "53": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD5864031"
    },
    "60": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B"
    },
    "64": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF21DE1E8"
    },
    "71": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBE"
    },
    "75": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "DUP1",
      "path": "3"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        107,
        1731
      ],
      "op": "REVERT",
      "path": "3"
    },
    "81": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "82": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x64"
    },
    "85": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5F"
    },
    "88": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "89": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "91": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x69C"
    },
    "94": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1129,
        1522
      ],
      "op": "JUMP",
      "path": "3"
    },
    "95": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "96": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD9"
    },
    "99": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1129,
        1522
      ],
      "op": "JUMP",
      "path": "3"
    },
    "100": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "101": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "103": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "104": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x72"
    },
    "107": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "108": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "109": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "110": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x74C"
    },
    "113": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1129,
        1522
      ],
      "op": "JUMP",
      "path": "3"
    },
    "114": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "115": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "117": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "118": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "DUP1",
      "path": "3"
    },
    "119": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "120": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "SUB",
      "path": "3"
    },
    "121": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "122": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "RETURN",
      "path": "3"
    },
    "123": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1528,
        1727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "124": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1528,
        1727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8E"
    },
    "127": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1528,
        1727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x89"
    },
    "130": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1528,
        1727
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "131": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1528,
        1727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "133": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1528,
        1727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x683"
    },
    "136": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "jump": "i",
      "offset": [
        1528,
        1727
      ],
      "op": "JUMP",
      "path": "3"
    },
    "137": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1528,
        1727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "138": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1528,
        1727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x270"
    },
    "141": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "jump": "i",
      "offset": [
        1528,
        1727
      ],
      "op": "JUMP",
      "path": "3"
    },
    "142": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1528,
        1727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "143": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1528,
        1727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "145": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1528,
        1727
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "146": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1528,
        1727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x72"
    },
    "149": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1528,
        1727
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "150": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1528,
        1727
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "151": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1528,
        1727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6EA"
    },
    "154": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "jump": "i",
      "offset": [
        1528,
        1727
      ],
      "op": "JUMP",
      "path": "3"
    },
    "155": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        249,
        1123
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "156": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        249,
        1123
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAE"
    },
    "159": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        249,
        1123
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA9"
    },
    "162": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        249,
        1123
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "163": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        249,
        1123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "165": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        249,
        1123
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6BE"
    },
    "168": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        249,
        1123
      ],
      "op": "JUMP",
      "path": "3"
    },
    "169": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        249,
        1123
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "170": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        249,
        1123
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F7"
    },
    "173": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        249,
        1123
      ],
      "op": "JUMP",
      "path": "3"
    },
    "174": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        249,
        1123
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "175": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        249,
        1123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "177": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        249,
        1123
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "178": {
      "op": "SWAP1"
    },
    "179": {
      "op": "ISZERO"
    },
    "180": {
      "op": "ISZERO"
    },
    "181": {
      "op": "DUP2"
    },
    "182": {
      "op": "MSTORE"
    },
    "183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "185": {
      "op": "ADD"
    },
    "186": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        249,
        1123
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x72"
    },
    "189": {
      "op": "JUMP"
    },
    "190": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        771,
        861
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "191": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        845,
        854
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x1"
    },
    "193": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        845,
        854
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "194": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        771,
        861
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "196": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        771,
        861
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "203": {
      "op": "SHL"
    },
    "204": {
      "op": "SUB"
    },
    "205": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        845,
        854
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "206": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        845,
        854
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "207": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        845,
        854
      ],
      "op": "AND",
      "path": "1"
    },
    "208": {
      "op": "DUP2"
    },
    "209": {
      "op": "MSTORE"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "212": {
      "op": "ADD"
    },
    "213": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        771,
        861
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x72"
    },
    "216": {
      "op": "JUMP"
    },
    "217": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "218": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "220": {
      "op": "DUP1"
    },
    "221": {
      "op": "MLOAD"
    },
    "222": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "224": {
      "op": "DUP2"
    },
    "225": {
      "op": "ADD"
    },
    "226": {
      "op": "DUP3"
    },
    "227": {
      "op": "MSTORE"
    },
    "228": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1220,
        1224
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "230": {
      "op": "DUP1"
    },
    "231": {
      "op": "DUP3"
    },
    "232": {
      "op": "MSTORE"
    },
    "233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "235": {
      "op": "DUP3"
    },
    "236": {
      "op": "ADD"
    },
    "237": {
      "op": "DUP2"
    },
    "238": {
      "op": "SWAP1"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "SWAP2"
    },
    "241": {
      "op": "DUP2"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "op": "DUP3"
    },
    "244": {
      "op": "SWAP1"
    },
    "245": {
      "op": "MSTORE"
    },
    "246": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1258,
        1271
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "248": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1311,
        1344
      ],
      "op": "DUP4",
      "path": "3"
    },
    "249": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1311,
        1344
      ],
      "op": "DUP2",
      "path": "3"
    },
    "250": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1311,
        1344
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "251": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1311,
        1344
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "253": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1311,
        1344
      ],
      "op": "DUP2",
      "path": "3"
    },
    "254": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1311,
        1344
      ],
      "op": "DUP2",
      "path": "3"
    },
    "255": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1311,
        1344
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "256": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1311,
        1344
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "258": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1311,
        1344
      ],
      "op": "DUP1",
      "path": "3"
    },
    "259": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1311,
        1344
      ],
      "op": "DUP4",
      "path": "3"
    },
    "260": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1311,
        1344
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "261": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP1",
      "path": "3"
    },
    "262": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "263": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP3",
      "path": "3"
    },
    "264": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "265": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP2",
      "path": "3"
    },
    "266": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP6",
      "path": "3"
    },
    "267": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "MUL",
      "path": "3"
    },
    "268": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP2",
      "path": "3"
    },
    "269": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "ADD",
      "path": "3"
    },
    "270": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP6",
      "path": "3"
    },
    "271": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "ADD",
      "path": "3"
    },
    "272": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "273": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "274": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "275": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP1",
      "path": "3"
    },
    "276": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP4",
      "path": "3"
    },
    "277": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "278": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17C"
    },
    "281": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "282": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1293,
        1309
      ],
      "op": "DUP10",
      "path": "3"
    },
    "283": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1293,
        1309
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "284": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "285": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1311,
        1344
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "286": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "287": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1258,
        1271
      ],
      "op": "DUP7",
      "path": "3"
    },
    "288": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1258,
        1271
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "289": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP5",
      "path": "3"
    },
    "290": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "ADD",
      "path": "3"
    },
    "291": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "292": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP3",
      "path": "3"
    },
    "293": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP3",
      "path": "3"
    },
    "294": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "LT",
      "path": "3"
    },
    "295": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "296": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x173"
    },
    "299": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "300": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP4",
      "path": "3"
    },
    "301": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP3",
      "path": "3"
    },
    "302": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "303": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "305": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "306": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "308": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "310": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "311": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "312": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "314": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "MUL",
      "path": "3"
    },
    "315": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "ADD",
      "path": "3"
    },
    "316": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "318": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "319": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP1",
      "path": "3"
    },
    "320": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "322": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "ADD",
      "path": "3"
    },
    "323": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "325": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "326": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "327": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP2",
      "path": "3"
    },
    "328": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "330": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP3",
      "path": "3"
    },
    "331": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "ADD",
      "path": "3"
    },
    "332": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "333": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP2",
      "path": "3"
    },
    "334": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "335": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "337": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "ADD",
      "path": "3"
    },
    "338": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "340": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP3",
      "path": "3"
    },
    "341": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "ADD",
      "path": "3"
    },
    "342": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "343": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP2",
      "path": "3"
    },
    "344": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "345": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "347": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "ADD",
      "path": "3"
    },
    "348": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "350": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP3",
      "path": "3"
    },
    "351": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "ADD",
      "path": "3"
    },
    "352": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "353": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP2",
      "path": "3"
    },
    "354": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "355": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "POP",
      "path": "3"
    },
    "356": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "POP",
      "path": "3"
    },
    "357": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "DUP2",
      "path": "3"
    },
    "358": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "359": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "361": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "ADD",
      "path": "3"
    },
    "362": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "363": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "365": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "ADD",
      "path": "3"
    },
    "366": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "367": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x123"
    },
    "370": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "JUMP",
      "path": "3"
    },
    "371": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "372": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "POP",
      "path": "3"
    },
    "373": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "POP",
      "path": "3"
    },
    "374": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "POP",
      "path": "3"
    },
    "375": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "POP",
      "path": "3"
    },
    "376": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1292
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x583"
    },
    "379": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1274,
        1345
      ],
      "op": "JUMP",
      "path": "3"
    },
    "380": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1274,
        1345
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "381": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1258,
        1345
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "382": {
      "op": "POP"
    },
    "383": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1366,
        1367
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "385": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1365
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18B"
    },
    "388": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1364,
        1365
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "390": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1258,
        1345
      ],
      "op": "DUP4",
      "path": "3"
    },
    "391": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1365
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x78E"
    },
    "394": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1358,
        1365
      ],
      "op": "JUMP",
      "path": "3"
    },
    "395": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1365
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "396": {
      "branch": 15,
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1358,
        1367
      ],
      "op": "GT",
      "path": "3"
    },
    "397": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1355,
        1449
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "398": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1355,
        1449
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x200"
    },
    "401": {
      "branch": 15,
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1355,
        1449
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "402": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1417
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x0"
    },
    "404": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1428
      ],
      "op": "DUP5",
      "path": "3"
    },
    "405": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1428
      ],
      "op": "DUP2",
      "path": "3"
    },
    "406": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1428
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "407": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1428
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "409": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1428
      ],
      "op": "DUP2",
      "path": "3"
    },
    "410": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1428
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "411": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1428
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "412": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1428
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "414": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1428
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "415": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1428
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "416": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1390,
        1394
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "418": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1390,
        1394
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "419": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1429,
        1436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AC"
    },
    "422": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1390,
        1394
      ],
      "op": "DUP3",
      "path": "3"
    },
    "423": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1429,
        1434
      ],
      "op": "DUP5",
      "path": "3"
    },
    "424": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1429,
        1436
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x78E"
    },
    "427": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1429,
        1436
      ],
      "op": "JUMP",
      "path": "3"
    },
    "428": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1429,
        1436
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "429": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1437
      ],
      "op": "DUP2",
      "path": "3"
    },
    "430": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1437
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "431": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1437
      ],
      "op": "DUP2",
      "path": "3"
    },
    "432": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1437
      ],
      "op": "LT",
      "path": "3"
    },
    "433": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1437
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BC"
    },
    "436": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1437
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "437": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1437
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BC"
    },
    "440": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1437
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7D6"
    },
    "443": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1395,
        1437
      ],
      "op": "JUMP",
      "path": "3"
    },
    "444": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1437
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "445": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1437
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "446": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1437
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "448": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1437
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "449": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1437
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "451": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1437
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "453": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1437
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "454": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1437
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "455": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1437
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "457": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1437
      ],
      "op": "MUL",
      "path": "3"
    },
    "458": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1395,
        1437
      ],
      "op": "ADD",
      "path": "3"
    },
    "459": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "460": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "462": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "463": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "464": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "466": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "ADD",
      "path": "3"
    },
    "467": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "469": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "470": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "471": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "472": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "474": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "DUP3",
      "path": "3"
    },
    "475": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "ADD",
      "path": "3"
    },
    "476": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "477": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "478": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "479": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "481": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "ADD",
      "path": "3"
    },
    "482": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "484": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "DUP3",
      "path": "3"
    },
    "485": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "ADD",
      "path": "3"
    },
    "486": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "487": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "488": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "489": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "491": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "ADD",
      "path": "3"
    },
    "492": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "494": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "DUP3",
      "path": "3"
    },
    "495": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "ADD",
      "path": "3"
    },
    "496": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "497": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "498": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "499": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "POP",
      "path": "3"
    },
    "500": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "POP",
      "path": "3"
    },
    "501": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "502": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "POP",
      "path": "3"
    },
    "503": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "504": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "POP",
      "path": "3"
    },
    "505": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "506": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "POP",
      "path": "3"
    },
    "507": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "POP",
      "path": "3"
    },
    "508": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x269"
    },
    "511": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1382,
        1438
      ],
      "op": "JUMP",
      "path": "3"
    },
    "512": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1355,
        1449
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "513": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1466,
        1471
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x0"
    },
    "515": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "DUP5",
      "path": "3"
    },
    "516": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "DUP2",
      "path": "3"
    },
    "517": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "518": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "520": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "DUP2",
      "path": "3"
    },
    "521": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "522": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "523": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "525": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "DUP2",
      "path": "3"
    },
    "526": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "527": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1506,
        1513
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x219"
    },
    "530": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1512,
        1513
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "532": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1506,
        1511
      ],
      "op": "DUP5",
      "path": "3"
    },
    "533": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1506,
        1513
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x78E"
    },
    "536": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1506,
        1513
      ],
      "op": "JUMP",
      "path": "3"
    },
    "537": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1506,
        1513
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "538": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1514
      ],
      "op": "DUP2",
      "path": "3"
    },
    "539": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1514
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "540": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1514
      ],
      "op": "DUP2",
      "path": "3"
    },
    "541": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1514
      ],
      "op": "LT",
      "path": "3"
    },
    "542": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1514
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x229"
    },
    "545": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1514
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "546": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1514
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x229"
    },
    "549": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1514
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7D6"
    },
    "552": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1472,
        1514
      ],
      "op": "JUMP",
      "path": "3"
    },
    "553": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1514
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "554": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1514
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "555": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1514
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "557": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1514
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "558": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1514
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "560": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1514
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "562": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1514
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "563": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1514
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "564": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1514
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "566": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1514
      ],
      "op": "MUL",
      "path": "3"
    },
    "567": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1514
      ],
      "op": "ADD",
      "path": "3"
    },
    "568": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "569": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "571": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "572": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "573": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "575": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "ADD",
      "path": "3"
    },
    "576": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "578": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "579": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "580": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "581": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "583": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "584": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "ADD",
      "path": "3"
    },
    "585": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "586": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "587": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "588": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "590": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "ADD",
      "path": "3"
    },
    "591": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "593": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "594": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "ADD",
      "path": "3"
    },
    "595": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "596": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "597": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "598": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "600": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "ADD",
      "path": "3"
    },
    "601": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "603": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "604": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "ADD",
      "path": "3"
    },
    "605": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "606": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "607": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "608": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "POP",
      "path": "3"
    },
    "609": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "POP",
      "path": "3"
    },
    "610": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "611": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "POP",
      "path": "3"
    },
    "612": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "613": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "POP",
      "path": "3"
    },
    "614": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "615": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "POP",
      "path": "3"
    },
    "616": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1458,
        1515
      ],
      "op": "POP",
      "path": "3"
    },
    "617": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "618": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "619": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "POP",
      "path": "3"
    },
    "620": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "621": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "622": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1129,
        1522
      ],
      "op": "POP",
      "path": "3"
    },
    "623": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "o",
      "offset": [
        1129,
        1522
      ],
      "op": "JUMP",
      "path": "3"
    },
    "624": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1528,
        1727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "625": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1687,
        1709
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 3,
      "value": "0x0"
    },
    "627": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1687,
        1720
      ],
      "op": "DUP2",
      "path": "3"
    },
    "628": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1687,
        1720
      ],
      "op": "DUP2",
      "path": "3"
    },
    "629": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1687,
        1720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "630": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1687,
        1720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "632": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1687,
        1720
      ],
      "op": "DUP2",
      "path": "3"
    },
    "633": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1687,
        1720
      ],
      "op": "DUP2",
      "path": "3"
    },
    "634": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1687,
        1720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "635": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1687,
        1720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "637": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1687,
        1720
      ],
      "op": "DUP1",
      "path": "3"
    },
    "638": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1687,
        1720
      ],
      "op": "DUP4",
      "path": "3"
    },
    "639": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1687,
        1720
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "640": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP1",
      "path": "3"
    },
    "641": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "642": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP3",
      "path": "3"
    },
    "643": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "644": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP2",
      "path": "3"
    },
    "645": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP6",
      "path": "3"
    },
    "646": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "MUL",
      "path": "3"
    },
    "647": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP2",
      "path": "3"
    },
    "648": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "ADD",
      "path": "3"
    },
    "649": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP6",
      "path": "3"
    },
    "650": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "ADD",
      "path": "3"
    },
    "651": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "652": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "653": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "654": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP1",
      "path": "3"
    },
    "655": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP4",
      "path": "3"
    },
    "656": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "657": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1623,
        1664
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "659": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1623,
        1664
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "660": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "661": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "662": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1687,
        1720
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "663": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1687,
        1720
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "664": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "665": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "666": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP5",
      "path": "3"
    },
    "667": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "ADD",
      "path": "3"
    },
    "668": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "669": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP3",
      "path": "3"
    },
    "670": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP3",
      "path": "3"
    },
    "671": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "LT",
      "path": "3"
    },
    "672": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "673": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC"
    },
    "676": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "677": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP4",
      "path": "3"
    },
    "678": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP3",
      "path": "3"
    },
    "679": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "680": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "682": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "683": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "685": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "687": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "688": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "689": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "691": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "MUL",
      "path": "3"
    },
    "692": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "ADD",
      "path": "3"
    },
    "693": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "695": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "696": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP1",
      "path": "3"
    },
    "697": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "699": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "ADD",
      "path": "3"
    },
    "700": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "702": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "703": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "704": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP2",
      "path": "3"
    },
    "705": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "707": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP3",
      "path": "3"
    },
    "708": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "ADD",
      "path": "3"
    },
    "709": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "710": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP2",
      "path": "3"
    },
    "711": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "712": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "714": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "ADD",
      "path": "3"
    },
    "715": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "717": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP3",
      "path": "3"
    },
    "718": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "ADD",
      "path": "3"
    },
    "719": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "720": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP2",
      "path": "3"
    },
    "721": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "722": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "724": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "ADD",
      "path": "3"
    },
    "725": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "727": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP3",
      "path": "3"
    },
    "728": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "ADD",
      "path": "3"
    },
    "729": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "730": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP2",
      "path": "3"
    },
    "731": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "732": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "POP",
      "path": "3"
    },
    "733": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "POP",
      "path": "3"
    },
    "734": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "DUP2",
      "path": "3"
    },
    "735": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "736": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "738": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "ADD",
      "path": "3"
    },
    "739": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "740": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "742": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "ADD",
      "path": "3"
    },
    "743": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "744": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29C"
    },
    "747": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "JUMP",
      "path": "3"
    },
    "748": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "749": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "POP",
      "path": "3"
    },
    "750": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "POP",
      "path": "3"
    },
    "751": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "POP",
      "path": "3"
    },
    "752": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "POP",
      "path": "3"
    },
    "753": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "754": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1680,
        1720
      ],
      "op": "POP",
      "path": "3"
    },
    "755": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1528,
        1727
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "756": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1528,
        1727
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "757": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1528,
        1727
      ],
      "op": "POP",
      "path": "3"
    },
    "758": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "jump": "o",
      "offset": [
        1528,
        1727
      ],
      "op": "JUMP",
      "path": "3"
    },
    "759": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        249,
        1123
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "760": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        461,
        473
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "762": {
      "offset": [
        1050,
        1081
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x302"
    },
    "765": {
      "offset": [
        1070,
        1080
      ],
      "op": "CALLER",
      "path": "1"
    },
    "766": {
      "offset": [
        1050,
        1069
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5E6"
    },
    "769": {
      "jump": "i",
      "offset": [
        1050,
        1081
      ],
      "op": "JUMP",
      "path": "1"
    },
    "770": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1050,
        1081
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "771": {
      "offset": [
        1050,
        1089
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "772": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1050,
        1089
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "773": {
      "offset": [
        1085,
        1089
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "775": {
      "offset": [
        1050,
        1089
      ],
      "op": "EQ",
      "path": "1"
    },
    "776": {
      "offset": [
        1042,
        1090
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x310"
    },
    "779": {
      "offset": [
        1042,
        1090
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "780": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1042,
        1090
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "782": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1042,
        1090
      ],
      "op": "DUP1",
      "path": "1"
    },
    "783": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1042,
        1090
      ],
      "op": "REVERT",
      "path": "1"
    },
    "784": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1042,
        1090
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "785": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        489,
        502
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "787": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        542,
        575
      ],
      "op": "DUP4",
      "path": "3"
    },
    "788": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        542,
        575
      ],
      "op": "DUP2",
      "path": "3"
    },
    "789": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        542,
        575
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "790": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        542,
        575
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "792": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        542,
        575
      ],
      "op": "DUP2",
      "path": "3"
    },
    "793": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        542,
        575
      ],
      "op": "DUP2",
      "path": "3"
    },
    "794": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        542,
        575
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "795": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        542,
        575
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "797": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        542,
        575
      ],
      "op": "DUP1",
      "path": "3"
    },
    "798": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        542,
        575
      ],
      "op": "DUP4",
      "path": "3"
    },
    "799": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        542,
        575
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "800": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP1",
      "path": "3"
    },
    "801": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "802": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP3",
      "path": "3"
    },
    "803": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "804": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP2",
      "path": "3"
    },
    "805": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP6",
      "path": "3"
    },
    "806": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "MUL",
      "path": "3"
    },
    "807": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP2",
      "path": "3"
    },
    "808": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "ADD",
      "path": "3"
    },
    "809": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP6",
      "path": "3"
    },
    "810": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "ADD",
      "path": "3"
    },
    "811": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "812": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "813": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "814": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP1",
      "path": "3"
    },
    "815": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP4",
      "path": "3"
    },
    "816": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "817": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38B"
    },
    "820": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "821": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        524,
        540
      ],
      "op": "DUP10",
      "path": "3"
    },
    "822": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        524,
        540
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "823": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "824": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        542,
        575
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "825": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "826": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        489,
        502
      ],
      "op": "DUP7",
      "path": "3"
    },
    "827": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        489,
        502
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "828": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP5",
      "path": "3"
    },
    "829": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "ADD",
      "path": "3"
    },
    "830": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP3",
      "path": "3"
    },
    "831": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "832": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x173"
    },
    "835": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "836": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP4",
      "path": "3"
    },
    "837": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP3",
      "path": "3"
    },
    "838": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "839": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "841": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "842": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "844": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "846": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "847": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "848": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "850": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "MUL",
      "path": "3"
    },
    "851": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "ADD",
      "path": "3"
    },
    "852": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "854": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "855": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP1",
      "path": "3"
    },
    "856": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "858": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "ADD",
      "path": "3"
    },
    "859": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "861": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "862": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "863": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP2",
      "path": "3"
    },
    "864": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "866": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP3",
      "path": "3"
    },
    "867": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "ADD",
      "path": "3"
    },
    "868": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "869": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP2",
      "path": "3"
    },
    "870": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "871": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "873": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "ADD",
      "path": "3"
    },
    "874": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "876": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP3",
      "path": "3"
    },
    "877": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "ADD",
      "path": "3"
    },
    "878": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "879": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP2",
      "path": "3"
    },
    "880": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "881": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "883": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "ADD",
      "path": "3"
    },
    "884": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "886": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP3",
      "path": "3"
    },
    "887": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "ADD",
      "path": "3"
    },
    "888": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "889": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP2",
      "path": "3"
    },
    "890": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "891": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "POP",
      "path": "3"
    },
    "892": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "POP",
      "path": "3"
    },
    "893": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "DUP2",
      "path": "3"
    },
    "894": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "895": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "897": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "ADD",
      "path": "3"
    },
    "898": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "899": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "901": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "ADD",
      "path": "3"
    },
    "902": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "903": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x123"
    },
    "906": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "JUMP",
      "path": "3"
    },
    "907": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        505,
        576
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "908": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        489,
        576
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "909": {
      "op": "POP"
    },
    "910": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        600,
        601
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "912": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        590,
        597
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39A"
    },
    "915": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        596,
        597
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "917": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        489,
        576
      ],
      "op": "DUP4",
      "path": "3"
    },
    "918": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        590,
        597
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x78E"
    },
    "921": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        590,
        597
      ],
      "op": "JUMP",
      "path": "3"
    },
    "922": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        590,
        597
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "923": {
      "branch": 16,
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        590,
        601
      ],
      "op": "GT",
      "path": "3"
    },
    "924": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        586,
        1117
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "925": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        586,
        1117
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x496"
    },
    "928": {
      "branch": 16,
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        586,
        1117
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "929": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        622,
        648
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 4,
      "value": "0xB7CDCED8C7C4E48FCB5E29E76371E78F62509FF97A6175D44F84AD36252008E4"
    },
    "962": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        632,
        637
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "964": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        622,
        648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "966": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        622,
        648
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "967": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        622,
        648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F3"
    },
    "970": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        622,
        648
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "971": {
      "op": "ISZERO"
    },
    "972": {
      "op": "ISZERO"
    },
    "973": {
      "op": "DUP2"
    },
    "974": {
      "op": "MSTORE"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "979": {
      "op": "DUP3"
    },
    "980": {
      "op": "ADD"
    },
    "981": {
      "op": "DUP2"
    },
    "982": {
      "op": "SWAP1"
    },
    "983": {
      "op": "MSTORE"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "986": {
      "op": "SWAP1"
    },
    "987": {
      "op": "DUP3"
    },
    "988": {
      "op": "ADD"
    },
    "989": {
      "op": "MSTORE"
    },
    "990": {
      "op": "PUSH7",
      "value": "0x616C7265616479"
    },
    "998": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "1000": {
      "op": "SHL"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1003": {
      "op": "DUP3"
    },
    "1004": {
      "op": "ADD"
    },
    "1005": {
      "op": "MSTORE"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1008": {
      "op": "ADD"
    },
    "1009": {
      "op": "SWAP1"
    },
    "1010": {
      "op": "JUMP"
    },
    "1011": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        622,
        648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1012": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        622,
        648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1014": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        622,
        648
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1015": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        622,
        648
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1016": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        622,
        648
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1017": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        622,
        648
      ],
      "op": "SUB",
      "path": "3"
    },
    "1018": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        622,
        648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1019": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        622,
        648
      ],
      "op": "LOG1",
      "path": "3"
    },
    "1020": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        745
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x0"
    },
    "1022": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        756
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1023": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        756
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1024": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        756
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1025": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        756
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1027": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        756
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1028": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        756
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1029": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        756
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1030": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        756
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1032": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        756
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1033": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        756
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1034": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        667,
        779
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xCCC0C5D3C89CFCF7D56826EC7EF2AEBE60E5DFE931762FEF6892936D105549B7"
    },
    "1067": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        667,
        779
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1068": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        701,
        705
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1070": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        701,
        705
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1071": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        757,
        764
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x438"
    },
    "1074": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        701,
        705
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1075": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        757,
        762
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1076": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        757,
        764
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x78E"
    },
    "1079": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        757,
        764
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1080": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        757,
        764
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1081": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        765
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1082": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        765
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1083": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        765
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1084": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        765
      ],
      "op": "LT",
      "path": "3"
    },
    "1085": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        765
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x448"
    },
    "1088": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        765
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1089": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        765
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x448"
    },
    "1092": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        765
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7D6"
    },
    "1095": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        723,
        765
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1096": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        765
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1097": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        765
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1098": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1100": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        765
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1101": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1103": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1105": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        765
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1106": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        765
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1107": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1109": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        765
      ],
      "op": "MUL",
      "path": "3"
    },
    "1110": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        723,
        765
      ],
      "op": "ADD",
      "path": "3"
    },
    "1111": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        667,
        779
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1113": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        667,
        779
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1114": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        667,
        779
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x484"
    },
    "1117": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        667,
        779
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1118": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        667,
        779
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1119": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        667,
        779
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1120": {
      "op": "SWAP2"
    },
    "1121": {
      "op": "ISZERO"
    },
    "1122": {
      "op": "ISZERO"
    },
    "1123": {
      "op": "DUP3"
    },
    "1124": {
      "op": "MSTORE"
    },
    "1125": {
      "op": "DUP1"
    },
    "1126": {
      "op": "SLOAD"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1129": {
      "op": "DUP4"
    },
    "1130": {
      "op": "ADD"
    },
    "1131": {
      "op": "MSTORE"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1134": {
      "op": "DUP2"
    },
    "1135": {
      "op": "ADD"
    },
    "1136": {
      "op": "SLOAD"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1139": {
      "op": "DUP4"
    },
    "1140": {
      "op": "ADD"
    },
    "1141": {
      "op": "MSTORE"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1144": {
      "op": "ADD"
    },
    "1145": {
      "op": "SLOAD"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1148": {
      "op": "DUP3"
    },
    "1149": {
      "op": "ADD"
    },
    "1150": {
      "op": "MSTORE"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1153": {
      "op": "ADD"
    },
    "1154": {
      "op": "SWAP1"
    },
    "1155": {
      "op": "JUMP"
    },
    "1156": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        667,
        779
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1157": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        667,
        779
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1159": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        667,
        779
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1160": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        667,
        779
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1161": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        667,
        779
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1162": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        667,
        779
      ],
      "op": "SUB",
      "path": "3"
    },
    "1163": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        667,
        779
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1164": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        667,
        779
      ],
      "op": "LOG1",
      "path": "3"
    },
    "1165": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        800,
        805
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 6,
      "value": "0x0"
    },
    "1167": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        793,
        805
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1168": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        793,
        805
      ],
      "op": "POP",
      "path": "3"
    },
    "1169": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        793,
        805
      ],
      "op": "POP",
      "path": "3"
    },
    "1170": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        793,
        805
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57C"
    },
    "1173": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        793,
        805
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1174": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        586,
        1117
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1175": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        836,
        853
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1177": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        918
      ],
      "op": "DUP5",
      "path": "3",
      "statement": 7
    },
    "1178": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        918
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1179": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        918
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1180": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        918
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1182": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        918
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1183": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        918
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1184": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        918
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1185": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        918
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1187": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        918
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1188": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        918
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1189": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        918
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1190": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1191": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1192": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1194": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1195": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "ADD",
      "path": "3"
    },
    "1196": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1197": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1198": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "DUP10",
      "path": "3"
    },
    "1199": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1200": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1201": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1202": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1203": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "ADD",
      "path": "3"
    },
    "1204": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1205": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1206": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1207": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        856,
        871
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "1208": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1209": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1210": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "ADD",
      "path": "3"
    },
    "1211": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1212": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1213": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        937,
        993
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1214": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1215": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1216": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1218": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1219": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1220": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "ADD",
      "path": "3"
    },
    "1221": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1222": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1223": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1224": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "DUP10",
      "path": "3"
    },
    "1225": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1226": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "1227": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1228": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "1229": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1230": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1231": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1232": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1234": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1235": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "1236": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "MUL",
      "path": "3"
    },
    "1237": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1238": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1239": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "ADD",
      "path": "3"
    },
    "1240": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1241": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1242": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1243": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1244": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1245": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1246": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "ADD",
      "path": "3"
    },
    "1247": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1248": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1249": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1250": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1252": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1253": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1254": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "ADD",
      "path": "3"
    },
    "1255": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1256": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1257": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1258": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        885,
        994
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1259": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1013,
        1037
      ],
      "op": "MLOAD",
      "path": "3",
      "statement": 8
    },
    "1260": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1013,
        1037
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xB7CDCED8C7C4E48FCB5E29E76371E78F62509FF97A6175D44F84AD36252008E4"
    },
    "1293": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1013,
        1037
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1294": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1013,
        1037
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x53A"
    },
    "1297": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1013,
        1037
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1298": {
      "op": "SWAP1"
    },
    "1299": {
      "op": "ISZERO"
    },
    "1300": {
      "op": "ISZERO"
    },
    "1301": {
      "op": "DUP2"
    },
    "1302": {
      "op": "MSTORE"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1307": {
      "op": "DUP3"
    },
    "1308": {
      "op": "ADD"
    },
    "1309": {
      "op": "DUP2"
    },
    "1310": {
      "op": "SWAP1"
    },
    "1311": {
      "op": "MSTORE"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "1314": {
      "op": "SWAP1"
    },
    "1315": {
      "op": "DUP3"
    },
    "1316": {
      "op": "ADD"
    },
    "1317": {
      "op": "MSTORE"
    },
    "1318": {
      "op": "PUSH6",
      "value": "0x1CDD1BDC9959"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "1327": {
      "op": "SHL"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1330": {
      "op": "DUP3"
    },
    "1331": {
      "op": "ADD"
    },
    "1332": {
      "op": "MSTORE"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1335": {
      "op": "ADD"
    },
    "1336": {
      "op": "SWAP1"
    },
    "1337": {
      "op": "JUMP"
    },
    "1338": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1013,
        1037
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1339": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1013,
        1037
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1341": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1013,
        1037
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1342": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1013,
        1037
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1343": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1013,
        1037
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1344": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1013,
        1037
      ],
      "op": "SUB",
      "path": "3"
    },
    "1345": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1013,
        1037
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1346": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1013,
        1037
      ],
      "op": "LOG1",
      "path": "3"
    },
    "1347": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1056,
        1081
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x40"
    },
    "1349": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1056,
        1081
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1350": {
      "op": "DUP2"
    },
    "1351": {
      "op": "DUP2"
    },
    "1352": {
      "op": "MSTORE"
    },
    "1353": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1056,
        1081
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xB776F27E2626443CEE65F6C6F97999F4A5C737555723BDD3513A565406A61FED"
    },
    "1386": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1056,
        1081
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1389": {
      "op": "ADD"
    },
    "1390": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1056,
        1081
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1392": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1056,
        1081
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1393": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1056,
        1081
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1394": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1056,
        1081
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1395": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1056,
        1081
      ],
      "op": "SUB",
      "path": "3"
    },
    "1396": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1056,
        1081
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1397": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1056,
        1081
      ],
      "op": "LOG1",
      "path": "3"
    },
    "1398": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1102,
        1106
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 10,
      "value": "0x1"
    },
    "1400": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1095,
        1106
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1401": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1095,
        1106
      ],
      "op": "POP",
      "path": "3"
    },
    "1402": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1095,
        1106
      ],
      "op": "POP",
      "path": "3"
    },
    "1403": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1095,
        1106
      ],
      "op": "POP",
      "path": "3"
    },
    "1404": {
      "offset": [
        1100,
        1101
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1405": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        249,
        1123
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1406": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        249,
        1123
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1407": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        249,
        1123
      ],
      "op": "POP",
      "path": "3"
    },
    "1408": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        249,
        1123
      ],
      "op": "POP",
      "path": "3"
    },
    "1409": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        249,
        1123
      ],
      "op": "POP",
      "path": "3"
    },
    "1410": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "o",
      "offset": [
        249,
        1123
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1411": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        532,
        980
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1412": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        668,
        675
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1414": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        668,
        675
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1415": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        686,
        876
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1416": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        710,
        728
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1417": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        710,
        735
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1418": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        706,
        707
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1419": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        706,
        735
      ],
      "op": "LT",
      "path": "4"
    },
    "1420": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        686,
        876
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1421": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        686,
        876
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5DA"
    },
    "1424": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        686,
        876
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1425": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        812,
        821
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1426": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        778
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1427": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        779,
        780
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1428": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1429": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1430": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1431": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "LT",
      "path": "4"
    },
    "1432": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5A3"
    },
    "1435": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1436": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5A3"
    },
    "1439": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7D6"
    },
    "1442": {
      "fn": "Helper.isCertificateExist",
      "jump": "i",
      "offset": [
        760,
        781
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1443": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1444": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1446": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "MUL",
      "path": "4"
    },
    "1447": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1449": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "ADD",
      "path": "4"
    },
    "1450": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "ADD",
      "path": "4"
    },
    "1451": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1452": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        808
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1454": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        808
      ],
      "op": "ADD",
      "path": "4"
    },
    "1455": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        808
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1456": {
      "branch": 17,
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        821
      ],
      "op": "EQ",
      "path": "4"
    },
    "1457": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        756,
        866
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1458": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        756,
        866
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5C8"
    },
    "1461": {
      "branch": 17,
      "fn": "Helper.isCertificateExist",
      "offset": [
        756,
        866
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1462": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        848,
        851
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 11,
      "value": "0x5C0"
    },
    "1465": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        848,
        849
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1466": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        850,
        851
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1468": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        848,
        851
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x776"
    },
    "1471": {
      "fn": "Helper.isCertificateExist",
      "jump": "i",
      "offset": [
        848,
        851
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1472": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        848,
        851
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1473": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        841,
        851
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1474": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        841,
        851
      ],
      "op": "POP",
      "path": "4"
    },
    "1475": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        841,
        851
      ],
      "op": "POP",
      "path": "4"
    },
    "1476": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        841,
        851
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5E0"
    },
    "1479": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        841,
        851
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1480": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        756,
        866
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1481": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        737,
        740
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 12
    },
    "1482": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        737,
        740
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5D2"
    },
    "1485": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        737,
        740
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1486": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        737,
        740
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7A5"
    },
    "1489": {
      "fn": "Helper.isCertificateExist",
      "jump": "i",
      "offset": [
        737,
        740
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1490": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        737,
        740
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1491": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        737,
        740
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1492": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        737,
        740
      ],
      "op": "POP",
      "path": "4"
    },
    "1493": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        737,
        740
      ],
      "op": "POP",
      "path": "4"
    },
    "1494": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        686,
        876
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x587"
    },
    "1497": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        686,
        876
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1498": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        686,
        876
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1499": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        686,
        876
      ],
      "op": "POP",
      "path": "4"
    },
    "1500": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        972,
        973
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 13,
      "value": "0x1"
    },
    "1502": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        965,
        973
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1503": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        965,
        973
      ],
      "op": "POP",
      "path": "4"
    },
    "1504": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        532,
        980
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1505": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        532,
        980
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1506": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        532,
        980
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1507": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        532,
        980
      ],
      "op": "POP",
      "path": "4"
    },
    "1508": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        532,
        980
      ],
      "op": "POP",
      "path": "4"
    },
    "1509": {
      "fn": "Helper.isCertificateExist",
      "jump": "o",
      "offset": [
        532,
        980
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1510": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        867,
        1004
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1511": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        962,
        971
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 14,
      "value": "0x1"
    },
    "1513": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        962,
        971
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1514": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1516": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1517": {
      "op": "PUSH4",
      "value": "0x3AA3A015"
    },
    "1522": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1524": {
      "op": "SHL"
    },
    "1525": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1526": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1533": {
      "op": "SHL"
    },
    "1534": {
      "op": "SUB"
    },
    "1535": {
      "op": "DUP4"
    },
    "1536": {
      "op": "DUP2"
    },
    "1537": {
      "op": "AND"
    },
    "1538": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1540": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1541": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "ADD",
      "path": "1"
    },
    "1542": {
      "op": "MSTORE"
    },
    "1543": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        928,
        932
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1545": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        928,
        932
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1546": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        962,
        971
      ],
      "op": "AND",
      "path": "1"
    },
    "1547": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        962,
        971
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1548": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        989
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x7547402A"
    },
    "1553": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        989
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1556": {
      "op": "ADD"
    },
    "1557": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1559": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1561": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1562": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1563": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1564": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "SUB",
      "path": "1"
    },
    "1565": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1566": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1568": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1569": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1570": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "1571": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1572": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1573": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1574": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x62E"
    },
    "1577": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1578": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1580": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1581": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1582": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1583": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "POP",
      "path": "1"
    },
    "1584": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "GAS",
      "path": "1"
    },
    "1585": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "CALL",
      "path": "1"
    },
    "1586": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1587": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1588": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1589": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x642"
    },
    "1592": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1593": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1594": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1596": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1597": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1598": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1599": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1601": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1602": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1603": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "POP",
      "path": "1"
    },
    "1604": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "POP",
      "path": "1"
    },
    "1605": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "POP",
      "path": "1"
    },
    "1606": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "POP",
      "path": "1"
    },
    "1607": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1609": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1610": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1611": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1613": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "NOT",
      "path": "1"
    },
    "1614": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1616": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1617": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "ADD",
      "path": "1"
    },
    "1618": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "AND",
      "path": "1"
    },
    "1619": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1620": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "ADD",
      "path": "1"
    },
    "1621": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1622": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1624": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1625": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "POP",
      "path": "1"
    },
    "1626": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1627": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "ADD",
      "path": "1"
    },
    "1628": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1629": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5E0"
    },
    "1632": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1633": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        951,
        997
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1638": {
      "op": "DUP3"
    },
    "1639": {
      "op": "DUP5"
    },
    "1640": {
      "op": "SUB"
    },
    "1641": {
      "op": "SLT"
    },
    "1642": {
      "op": "ISZERO"
    },
    "1643": {
      "op": "PUSH2",
      "value": "0x673"
    },
    "1646": {
      "op": "JUMPI"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1649": {
      "op": "DUP1"
    },
    "1650": {
      "op": "REVERT"
    },
    "1651": {
      "op": "JUMPDEST"
    },
    "1652": {
      "op": "DUP2"
    },
    "1653": {
      "op": "MLOAD"
    },
    "1654": {
      "op": "DUP1"
    },
    "1655": {
      "op": "ISZERO"
    },
    "1656": {
      "op": "ISZERO"
    },
    "1657": {
      "op": "DUP2"
    },
    "1658": {
      "op": "EQ"
    },
    "1659": {
      "op": "PUSH2",
      "value": "0x57C"
    },
    "1662": {
      "op": "JUMPI"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1665": {
      "op": "DUP1"
    },
    "1666": {
      "op": "REVERT"
    },
    "1667": {
      "op": "JUMPDEST"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1672": {
      "op": "DUP3"
    },
    "1673": {
      "op": "DUP5"
    },
    "1674": {
      "op": "SUB"
    },
    "1675": {
      "op": "SLT"
    },
    "1676": {
      "op": "ISZERO"
    },
    "1677": {
      "op": "PUSH2",
      "value": "0x695"
    },
    "1680": {
      "op": "JUMPI"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1683": {
      "op": "DUP1"
    },
    "1684": {
      "op": "REVERT"
    },
    "1685": {
      "op": "JUMPDEST"
    },
    "1686": {
      "op": "POP"
    },
    "1687": {
      "op": "CALLDATALOAD"
    },
    "1688": {
      "op": "SWAP2"
    },
    "1689": {
      "op": "SWAP1"
    },
    "1690": {
      "op": "POP"
    },
    "1691": {
      "jump": "o",
      "op": "JUMP"
    },
    "1692": {
      "op": "JUMPDEST"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1695": {
      "op": "DUP1"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1698": {
      "op": "DUP4"
    },
    "1699": {
      "op": "DUP6"
    },
    "1700": {
      "op": "SUB"
    },
    "1701": {
      "op": "SLT"
    },
    "1702": {
      "op": "ISZERO"
    },
    "1703": {
      "op": "PUSH2",
      "value": "0x6AF"
    },
    "1706": {
      "op": "JUMPI"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1709": {
      "op": "DUP1"
    },
    "1710": {
      "op": "REVERT"
    },
    "1711": {
      "op": "JUMPDEST"
    },
    "1712": {
      "op": "POP"
    },
    "1713": {
      "op": "POP"
    },
    "1714": {
      "op": "DUP1"
    },
    "1715": {
      "op": "CALLDATALOAD"
    },
    "1716": {
      "op": "SWAP3"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1719": {
      "op": "SWAP1"
    },
    "1720": {
      "op": "SWAP2"
    },
    "1721": {
      "op": "ADD"
    },
    "1722": {
      "op": "CALLDATALOAD"
    },
    "1723": {
      "op": "SWAP2"
    },
    "1724": {
      "op": "POP"
    },
    "1725": {
      "jump": "o",
      "op": "JUMP"
    },
    "1726": {
      "op": "JUMPDEST"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1729": {
      "op": "DUP1"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1734": {
      "op": "DUP5"
    },
    "1735": {
      "op": "DUP7"
    },
    "1736": {
      "op": "SUB"
    },
    "1737": {
      "op": "SLT"
    },
    "1738": {
      "op": "ISZERO"
    },
    "1739": {
      "op": "PUSH2",
      "value": "0x6D3"
    },
    "1742": {
      "op": "JUMPI"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1745": {
      "op": "DUP1"
    },
    "1746": {
      "op": "REVERT"
    },
    "1747": {
      "op": "JUMPDEST"
    },
    "1748": {
      "op": "POP"
    },
    "1749": {
      "op": "POP"
    },
    "1750": {
      "op": "DUP2"
    },
    "1751": {
      "op": "CALLDATALOAD"
    },
    "1752": {
      "op": "SWAP4"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1755": {
      "op": "DUP4"
    },
    "1756": {
      "op": "ADD"
    },
    "1757": {
      "op": "CALLDATALOAD"
    },
    "1758": {
      "op": "SWAP4"
    },
    "1759": {
      "op": "POP"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1762": {
      "op": "SWAP1"
    },
    "1763": {
      "op": "SWAP3"
    },
    "1764": {
      "op": "ADD"
    },
    "1765": {
      "op": "CALLDATALOAD"
    },
    "1766": {
      "op": "SWAP2"
    },
    "1767": {
      "op": "SWAP1"
    },
    "1768": {
      "op": "POP"
    },
    "1769": {
      "jump": "o",
      "op": "JUMP"
    },
    "1770": {
      "op": "JUMPDEST"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1773": {
      "op": "DUP1"
    },
    "1774": {
      "op": "DUP3"
    },
    "1775": {
      "op": "MSTORE"
    },
    "1776": {
      "op": "DUP3"
    },
    "1777": {
      "op": "MLOAD"
    },
    "1778": {
      "op": "DUP3"
    },
    "1779": {
      "op": "DUP3"
    },
    "1780": {
      "op": "ADD"
    },
    "1781": {
      "op": "DUP2"
    },
    "1782": {
      "op": "SWAP1"
    },
    "1783": {
      "op": "MSTORE"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1786": {
      "op": "SWAP2"
    },
    "1787": {
      "op": "SWAP1"
    },
    "1788": {
      "op": "DUP5"
    },
    "1789": {
      "op": "DUP3"
    },
    "1790": {
      "op": "ADD"
    },
    "1791": {
      "op": "SWAP1"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1794": {
      "op": "DUP6"
    },
    "1795": {
      "op": "ADD"
    },
    "1796": {
      "op": "SWAP1"
    },
    "1797": {
      "op": "DUP5"
    },
    "1798": {
      "op": "JUMPDEST"
    },
    "1799": {
      "op": "DUP2"
    },
    "1800": {
      "op": "DUP2"
    },
    "1801": {
      "op": "LT"
    },
    "1802": {
      "op": "ISZERO"
    },
    "1803": {
      "op": "PUSH2",
      "value": "0x740"
    },
    "1806": {
      "op": "JUMPI"
    },
    "1807": {
      "op": "PUSH2",
      "value": "0x72D"
    },
    "1810": {
      "op": "DUP4"
    },
    "1811": {
      "op": "DUP6"
    },
    "1812": {
      "op": "MLOAD"
    },
    "1813": {
      "op": "DUP1"
    },
    "1814": {
      "op": "MLOAD"
    },
    "1815": {
      "op": "DUP3"
    },
    "1816": {
      "op": "MSTORE"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1819": {
      "op": "DUP1"
    },
    "1820": {
      "op": "DUP3"
    },
    "1821": {
      "op": "ADD"
    },
    "1822": {
      "op": "MLOAD"
    },
    "1823": {
      "op": "SWAP1"
    },
    "1824": {
      "op": "DUP4"
    },
    "1825": {
      "op": "ADD"
    },
    "1826": {
      "op": "MSTORE"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1829": {
      "op": "SWAP1"
    },
    "1830": {
      "op": "DUP2"
    },
    "1831": {
      "op": "ADD"
    },
    "1832": {
      "op": "MLOAD"
    },
    "1833": {
      "op": "SWAP2"
    },
    "1834": {
      "op": "ADD"
    },
    "1835": {
      "op": "MSTORE"
    },
    "1836": {
      "op": "JUMP"
    },
    "1837": {
      "op": "JUMPDEST"
    },
    "1838": {
      "op": "SWAP3"
    },
    "1839": {
      "op": "DUP5"
    },
    "1840": {
      "op": "ADD"
    },
    "1841": {
      "op": "SWAP3"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1844": {
      "op": "SWAP3"
    },
    "1845": {
      "op": "SWAP1"
    },
    "1846": {
      "op": "SWAP3"
    },
    "1847": {
      "op": "ADD"
    },
    "1848": {
      "op": "SWAP2"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1851": {
      "op": "ADD"
    },
    "1852": {
      "op": "PUSH2",
      "value": "0x706"
    },
    "1855": {
      "op": "JUMP"
    },
    "1856": {
      "op": "JUMPDEST"
    },
    "1857": {
      "op": "POP"
    },
    "1858": {
      "op": "SWAP1"
    },
    "1859": {
      "op": "SWAP7"
    },
    "1860": {
      "op": "SWAP6"
    },
    "1861": {
      "op": "POP"
    },
    "1862": {
      "op": "POP"
    },
    "1863": {
      "op": "POP"
    },
    "1864": {
      "op": "POP"
    },
    "1865": {
      "op": "POP"
    },
    "1866": {
      "op": "POP"
    },
    "1867": {
      "jump": "o",
      "op": "JUMP"
    },
    "1868": {
      "op": "JUMPDEST"
    },
    "1869": {
      "op": "DUP3"
    },
    "1870": {
      "op": "ISZERO"
    },
    "1871": {
      "op": "ISZERO"
    },
    "1872": {
      "op": "DUP2"
    },
    "1873": {
      "op": "MSTORE"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1876": {
      "op": "DUP2"
    },
    "1877": {
      "op": "ADD"
    },
    "1878": {
      "op": "PUSH2",
      "value": "0x57C"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1883": {
      "op": "DUP4"
    },
    "1884": {
      "op": "ADD"
    },
    "1885": {
      "op": "DUP5"
    },
    "1886": {
      "op": "DUP1"
    },
    "1887": {
      "op": "MLOAD"
    },
    "1888": {
      "op": "DUP3"
    },
    "1889": {
      "op": "MSTORE"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1892": {
      "op": "DUP1"
    },
    "1893": {
      "op": "DUP3"
    },
    "1894": {
      "op": "ADD"
    },
    "1895": {
      "op": "MLOAD"
    },
    "1896": {
      "op": "SWAP1"
    },
    "1897": {
      "op": "DUP4"
    },
    "1898": {
      "op": "ADD"
    },
    "1899": {
      "op": "MSTORE"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1902": {
      "op": "SWAP1"
    },
    "1903": {
      "op": "DUP2"
    },
    "1904": {
      "op": "ADD"
    },
    "1905": {
      "op": "MLOAD"
    },
    "1906": {
      "op": "SWAP2"
    },
    "1907": {
      "op": "ADD"
    },
    "1908": {
      "op": "MSTORE"
    },
    "1909": {
      "op": "JUMP"
    },
    "1910": {
      "op": "JUMPDEST"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1913": {
      "op": "DUP3"
    },
    "1914": {
      "op": "NOT"
    },
    "1915": {
      "op": "DUP3"
    },
    "1916": {
      "op": "GT"
    },
    "1917": {
      "op": "ISZERO"
    },
    "1918": {
      "op": "PUSH2",
      "value": "0x789"
    },
    "1921": {
      "op": "JUMPI"
    },
    "1922": {
      "op": "PUSH2",
      "value": "0x789"
    },
    "1925": {
      "op": "PUSH2",
      "value": "0x7C0"
    },
    "1928": {
      "jump": "i",
      "op": "JUMP"
    },
    "1929": {
      "op": "JUMPDEST"
    },
    "1930": {
      "op": "POP"
    },
    "1931": {
      "op": "ADD"
    },
    "1932": {
      "op": "SWAP1"
    },
    "1933": {
      "jump": "o",
      "op": "JUMP"
    },
    "1934": {
      "op": "JUMPDEST"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1937": {
      "op": "DUP3"
    },
    "1938": {
      "op": "DUP3"
    },
    "1939": {
      "op": "LT"
    },
    "1940": {
      "op": "ISZERO"
    },
    "1941": {
      "op": "PUSH2",
      "value": "0x7A0"
    },
    "1944": {
      "op": "JUMPI"
    },
    "1945": {
      "op": "PUSH2",
      "value": "0x7A0"
    },
    "1948": {
      "op": "PUSH2",
      "value": "0x7C0"
    },
    "1951": {
      "jump": "i",
      "op": "JUMP"
    },
    "1952": {
      "op": "JUMPDEST"
    },
    "1953": {
      "op": "POP"
    },
    "1954": {
      "op": "SUB"
    },
    "1955": {
      "op": "SWAP1"
    },
    "1956": {
      "jump": "o",
      "op": "JUMP"
    },
    "1957": {
      "op": "JUMPDEST"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1962": {
      "op": "NOT"
    },
    "1963": {
      "op": "DUP3"
    },
    "1964": {
      "op": "EQ"
    },
    "1965": {
      "op": "ISZERO"
    },
    "1966": {
      "op": "PUSH2",
      "value": "0x7B9"
    },
    "1969": {
      "op": "JUMPI"
    },
    "1970": {
      "op": "PUSH2",
      "value": "0x7B9"
    },
    "1973": {
      "op": "PUSH2",
      "value": "0x7C0"
    },
    "1976": {
      "jump": "i",
      "op": "JUMP"
    },
    "1977": {
      "op": "JUMPDEST"
    },
    "1978": {
      "op": "POP"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1981": {
      "op": "ADD"
    },
    "1982": {
      "op": "SWAP1"
    },
    "1983": {
      "jump": "o",
      "op": "JUMP"
    },
    "1984": {
      "op": "JUMPDEST"
    },
    "1985": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1992": {
      "op": "SHL"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1995": {
      "op": "MSTORE"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2000": {
      "op": "MSTORE"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2005": {
      "op": "REVERT"
    },
    "2006": {
      "op": "JUMPDEST"
    },
    "2007": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2012": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2014": {
      "op": "SHL"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2017": {
      "op": "MSTORE"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2022": {
      "op": "MSTORE"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2027": {
      "op": "REVERT"
    }
  },
  "sha1": "aa75f5a646e7f8d5a106f002c7e6dc3b1290b1b0",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"./CertificateAuthorization.sol\";\n\ncontract CertificateHandler is CertificateAuthorization{\n\n    constructor(address registrySC) CertificateAuthorization(registrySC){}\n    \n    function registerCertificate(\n        bytes32 certificate_hash, \n        bytes32 holder_id,\n        //string memory payload,\n        bytes32 data_address\n    )\n        public\n        grantAccess\n        returns (bool success)\n    {\n        uint256 index = isCertificateExist(certificate_hash, holder_to_certificates[holder_id]);\n        if (index-1 > 0) {\n            emit IsSuccess(false,\"already\");\n            emit certificateExist(\n                true,\n                holder_to_certificates[holder_id][index-1]\n            );\n            return false;\n        } else {\n            uint256 timestamp = block.timestamp;\n            holder_to_certificates[holder_id].push(\n            COV_CERTIFICATE(certificate_hash,data_address,timestamp));\n            emit IsSuccess(true,\"stored\");\n            emit timestampEvent(timestamp);\n            return true;\n        }\n    }\n\n    function verifyCertificate(bytes32 certificate_hash,bytes32 holder_id) public view returns(bool,COV_CERTIFICATE memory){\n        uint256 index = isCertificateExist(certificate_hash, holder_to_certificates[holder_id]);\n        if(index-1>0){\n            return (true,holder_to_certificates[holder_id][index-1]);\n        }\n        return (false,holder_to_certificates[holder_id][index-1]);\n    }\n\n    function getCertificatesByUser(bytes32 holder_id) \n        public\n        view\n        returns(COV_CERTIFICATE[] memory certificate_data)\n    {\n        return holder_to_certificates[holder_id];\n    }\n\n\n}",
  "sourceMap": "107:1624:3:-:0;;;169:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;588:5:1;:27;;-1:-1:-1;;;;;;588:27:1;;;604:10;588:27;;;;;625:23;;-1:-1:-1;;;;;625:23:1;;;;;;;;;;;;;107:1624:3;;14:290:8;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:8;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:8:o;:::-;107:1624:3;;;;;;",
  "sourcePath": "contracts/Certificate/Handler.sol",
  "type": "contract"
}