{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrySC",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "Registry_sc",
          "type": "address"
        }
      ],
      "name": "DebugRegistryAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "result",
          "type": "string"
        }
      ],
      "name": "IsSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "is_exist",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "cov_certificate_identifier",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "certificate_data",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct CertificateData.COV_CERTIFICATE",
          "name": "certificate_data",
          "type": "tuple"
        }
      ],
      "name": "certificateExist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "is_exist",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "cov_certificate_identifier",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "certificate_data",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct CertificateData.COV_CERTIFICATE[]",
          "name": "certificate_data",
          "type": "tuple[]"
        }
      ],
      "name": "getCertificate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "isFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "timestampEvent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "holder_id",
          "type": "bytes32"
        }
      ],
      "name": "getCertificatesByUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "cov_certificate_identifier",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "certificate_data",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct CertificateData.COV_CERTIFICATE[]",
          "name": "certificate_data",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "certificate_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "holder_id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "data_address",
          "type": "bytes32"
        }
      ],
      "name": "registerCertificate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "certificate_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "holder_id",
          "type": "bytes32"
        }
      ],
      "name": "verifyCertificate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "cov_certificate_identifier",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "certificate_data",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct CertificateData.COV_CERTIFICATE",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/Certificate/CertificateAuthorization.sol",
    "2": "contracts/Certificate/Data.sol",
    "3": "contracts/Certificate/Handler.sol",
    "4": "contracts/Certificate/Helper.sol"
  },
  "ast": {
    "absolutePath": "contracts/Certificate/Handler.sol",
    "exportedSymbols": {
      "CertificateAuthorization": [
        252
      ],
      "CertificateData": [
        370
      ],
      "CertificateHandler": [
        170
      ],
      "Helper": [
        352
      ],
      "IssuerData": [
        181
      ]
    },
    "id": 171,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:3"
      },
      {
        "absolutePath": "contracts/Certificate/CertificateAuthorization.sol",
        "file": "./CertificateAuthorization.sol",
        "id": 17,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 171,
        "sourceUnit": 253,
        "src": "65:40:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18,
              "name": "CertificateAuthorization",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 252,
              "src": "138:24:3"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "138:24:3"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 170,
        "linearizedBaseContracts": [
          170,
          252,
          352,
          370
        ],
        "name": "CertificateHandler",
        "nameLocation": "116:18:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 27,
              "nodeType": "Block",
              "src": "238:2:3",
              "statements": []
            },
            "id": 28,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 24,
                    "name": "registrySC",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21,
                    "src": "226:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 25,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 23,
                  "name": "CertificateAuthorization",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 252,
                  "src": "201:24:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "201:36:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "registrySC",
                  "nameLocation": "189:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "181:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "181:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "180:20:3"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "238:0:3"
            },
            "scope": 170,
            "src": "169:71:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 105,
              "nodeType": "Block",
              "src": "414:813:3",
              "statements": [
                {
                  "assignments": [
                    42
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "432:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 105,
                      "src": "424:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "424:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 44,
                        "name": "certificate_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "472:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 45,
                          "name": "holder_to_certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 369,
                          "src": "502:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$363_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct CertificateData.COV_CERTIFICATE storage ref[] storage ref)"
                          }
                        },
                        "id": 47,
                        "indexExpression": {
                          "id": 46,
                          "name": "holder_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "525:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "502:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$363_storage_$dyn_storage",
                          "typeString": "struct CertificateData.COV_CERTIFICATE storage ref[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$363_storage_$dyn_storage",
                          "typeString": "struct CertificateData.COV_CERTIFICATE storage ref[] storage ref"
                        }
                      ],
                      "id": 43,
                      "name": "isCertificateExist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 325,
                      "src": "440:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$363_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes32,struct CertificateData.COV_CERTIFICATE memory[] memory) pure returns (uint256)"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "440:105:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "424:121:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 50,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "559:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "567:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "559:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "571:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "559:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 103,
                    "nodeType": "Block",
                    "src": "796:425:3",
                    "statements": [
                      {
                        "assignments": [
                          75
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 75,
                            "mutability": "mutable",
                            "name": "timestamp",
                            "nameLocation": "818:9:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 103,
                            "src": "810:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 74,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "810:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 78,
                        "initialValue": {
                          "expression": {
                            "id": 76,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "830:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "830:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "810:35:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 84,
                                  "name": "certificate_hash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30,
                                  "src": "952:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 85,
                                  "name": "data_address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34,
                                  "src": "990:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 86,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1024:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 87,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1024:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 88,
                                  "name": "timestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75,
                                  "src": "1056:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 83,
                                "name": "COV_CERTIFICATE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "915:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_COV_CERTIFICATE_$363_storage_ptr_$",
                                  "typeString": "type(struct CertificateData.COV_CERTIFICATE storage pointer)"
                                }
                              },
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "915:168:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_COV_CERTIFICATE_$363_memory_ptr",
                                "typeString": "struct CertificateData.COV_CERTIFICATE memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_COV_CERTIFICATE_$363_memory_ptr",
                                "typeString": "struct CertificateData.COV_CERTIFICATE memory"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 79,
                                "name": "holder_to_certificates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 369,
                                "src": "859:22:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$363_storage_$dyn_storage_$",
                                  "typeString": "mapping(bytes32 => struct CertificateData.COV_CERTIFICATE storage ref[] storage ref)"
                                }
                              },
                              "id": 81,
                              "indexExpression": {
                                "id": 80,
                                "name": "holder_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "882:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "859:33:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$363_storage_$dyn_storage",
                                "typeString": "struct CertificateData.COV_CERTIFICATE storage ref[] storage ref"
                              }
                            },
                            "id": 82,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "859:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_COV_CERTIFICATE_$363_storage_$dyn_storage_ptr_$_t_struct$_COV_CERTIFICATE_$363_storage_$returns$__$bound_to$_t_array$_t_struct$_COV_CERTIFICATE_$363_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct CertificateData.COV_CERTIFICATE storage ref[] storage pointer,struct CertificateData.COV_CERTIFICATE storage ref)"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "859:238:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "859:238:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 93,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1126:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "73746f726564",
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1132:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_62abd276aae8e6f841196366f5e78aedbdb6cc3fbe30da0c9ca4cb4382c135cd",
                                "typeString": "literal_string \"stored\""
                              },
                              "value": "stored"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_62abd276aae8e6f841196366f5e78aedbdb6cc3fbe30da0c9ca4cb4382c135cd",
                                "typeString": "literal_string \"stored\""
                              }
                            ],
                            "id": 92,
                            "name": "IsSuccess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "1116:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1116:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "EmitStatement",
                        "src": "1111:30:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 98,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "1175:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 97,
                            "name": "timestampEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 286,
                            "src": "1160:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1160:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 100,
                        "nodeType": "EmitStatement",
                        "src": "1155:30:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1206:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 40,
                        "id": 102,
                        "nodeType": "Return",
                        "src": "1199:11:3"
                      }
                    ]
                  },
                  "id": 104,
                  "nodeType": "IfStatement",
                  "src": "555:666:3",
                  "trueBody": {
                    "id": 73,
                    "nodeType": "Block",
                    "src": "574:216:3",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "66616c7365",
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "603:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "616c7265616479",
                              "id": 57,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "610:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4d68d74f0eb71ad33b0461f9e93dd42c23615ec558b78fd521e288d1779313d9",
                                "typeString": "literal_string \"already\""
                              },
                              "value": "already"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4d68d74f0eb71ad33b0461f9e93dd42c23615ec558b78fd521e288d1779313d9",
                                "typeString": "literal_string \"already\""
                              }
                            ],
                            "id": 55,
                            "name": "IsSuccess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "593:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "593:27:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59,
                        "nodeType": "EmitStatement",
                        "src": "588:32:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 61,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "673:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 62,
                                  "name": "holder_to_certificates",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 369,
                                  "src": "695:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$363_storage_$dyn_storage_$",
                                    "typeString": "mapping(bytes32 => struct CertificateData.COV_CERTIFICATE storage ref[] storage ref)"
                                  }
                                },
                                "id": 64,
                                "indexExpression": {
                                  "id": 63,
                                  "name": "holder_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "718:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "695:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$363_storage_$dyn_storage",
                                  "typeString": "struct CertificateData.COV_CERTIFICATE storage ref[] storage ref"
                                }
                              },
                              "id": 68,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 67,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 65,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42,
                                  "src": "729:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 66,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "737:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "729:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "695:44:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_COV_CERTIFICATE_$363_storage",
                                "typeString": "struct CertificateData.COV_CERTIFICATE storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_struct$_COV_CERTIFICATE_$363_storage",
                                "typeString": "struct CertificateData.COV_CERTIFICATE storage ref"
                              }
                            ],
                            "id": 60,
                            "name": "certificateExist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 274,
                            "src": "639:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_struct$_COV_CERTIFICATE_$363_memory_ptr_$returns$__$",
                              "typeString": "function (bool,struct CertificateData.COV_CERTIFICATE memory)"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "639:114:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 70,
                        "nodeType": "EmitStatement",
                        "src": "634:119:3"
                      },
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "774:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 40,
                        "id": 72,
                        "nodeType": "Return",
                        "src": "767:12:3"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "d5864031",
            "id": 106,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36,
                  "name": "grantAccess",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 251,
                  "src": "379:11:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "379:11:3"
              }
            ],
            "name": "registerCertificate",
            "nameLocation": "255:19:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "certificate_hash",
                  "nameLocation": "292:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "284:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "holder_id",
                  "nameLocation": "326:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "318:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "data_address",
                  "nameLocation": "353:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "345:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "345:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "274:97:3"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "405:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "400:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "399:14:3"
            },
            "scope": 170,
            "src": "246:981:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "1384:320:3",
              "statements": [
                {
                  "assignments": [
                    119
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 119,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "1402:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 154,
                      "src": "1394:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 118,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1394:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 126,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 121,
                        "name": "certificate_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "1442:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 122,
                          "name": "holder_to_certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 369,
                          "src": "1472:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$363_storage_$dyn_storage_$",
                            "typeString": "mapping(bytes32 => struct CertificateData.COV_CERTIFICATE storage ref[] storage ref)"
                          }
                        },
                        "id": 124,
                        "indexExpression": {
                          "id": 123,
                          "name": "holder_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110,
                          "src": "1495:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1472:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$363_storage_$dyn_storage",
                          "typeString": "struct CertificateData.COV_CERTIFICATE storage ref[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$363_storage_$dyn_storage",
                          "typeString": "struct CertificateData.COV_CERTIFICATE storage ref[] storage ref"
                        }
                      ],
                      "id": 120,
                      "name": "isCertificateExist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 325,
                      "src": "1410:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$363_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes32,struct CertificateData.COV_CERTIFICATE memory[] memory) pure returns (uint256)"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1410:105:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1394:121:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 127,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "1529:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1537:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1529:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1541:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1529:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 143,
                  "nodeType": "IfStatement",
                  "src": "1525:103:3",
                  "trueBody": {
                    "id": 142,
                    "nodeType": "Block",
                    "src": "1544:84:3",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "74727565",
                              "id": 132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1566:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 133,
                                  "name": "holder_to_certificates",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 369,
                                  "src": "1572:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$363_storage_$dyn_storage_$",
                                    "typeString": "mapping(bytes32 => struct CertificateData.COV_CERTIFICATE storage ref[] storage ref)"
                                  }
                                },
                                "id": 135,
                                "indexExpression": {
                                  "id": 134,
                                  "name": "holder_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 110,
                                  "src": "1595:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1572:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$363_storage_$dyn_storage",
                                  "typeString": "struct CertificateData.COV_CERTIFICATE storage ref[] storage ref"
                                }
                              },
                              "id": 139,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 136,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 119,
                                  "src": "1606:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 137,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1614:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "1606:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1572:44:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_COV_CERTIFICATE_$363_storage",
                                "typeString": "struct CertificateData.COV_CERTIFICATE storage ref"
                              }
                            }
                          ],
                          "id": 140,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1565:52:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_COV_CERTIFICATE_$363_storage_$",
                            "typeString": "tuple(bool,struct CertificateData.COV_CERTIFICATE storage ref)"
                          }
                        },
                        "functionReturnParameters": 117,
                        "id": 141,
                        "nodeType": "Return",
                        "src": "1558:59:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "66616c7365",
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1645:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 145,
                            "name": "holder_to_certificates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 369,
                            "src": "1652:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$363_storage_$dyn_storage_$",
                              "typeString": "mapping(bytes32 => struct CertificateData.COV_CERTIFICATE storage ref[] storage ref)"
                            }
                          },
                          "id": 147,
                          "indexExpression": {
                            "id": 146,
                            "name": "holder_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110,
                            "src": "1675:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1652:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$363_storage_$dyn_storage",
                            "typeString": "struct CertificateData.COV_CERTIFICATE storage ref[] storage ref"
                          }
                        },
                        "id": 151,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 148,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 119,
                            "src": "1686:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1694:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1686:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1652:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_COV_CERTIFICATE_$363_storage",
                          "typeString": "struct CertificateData.COV_CERTIFICATE storage ref"
                        }
                      }
                    ],
                    "id": 152,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1644:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_COV_CERTIFICATE_$363_storage_$",
                      "typeString": "tuple(bool,struct CertificateData.COV_CERTIFICATE storage ref)"
                    }
                  },
                  "functionReturnParameters": 117,
                  "id": 153,
                  "nodeType": "Return",
                  "src": "1637:60:3"
                }
              ]
            },
            "functionSelector": "1f75435d",
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyCertificate",
            "nameLocation": "1242:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "certificate_hash",
                  "nameLocation": "1268:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1260:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1260:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "holder_id",
                  "nameLocation": "1294:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1286:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1259:45:3"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1350:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1350:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1356:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_COV_CERTIFICATE_$363_memory_ptr",
                    "typeString": "struct CertificateData.COV_CERTIFICATE"
                  },
                  "typeName": {
                    "id": 115,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 114,
                      "name": "COV_CERTIFICATE",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 363,
                      "src": "1356:15:3"
                    },
                    "referencedDeclaration": 363,
                    "src": "1356:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_COV_CERTIFICATE_$363_storage_ptr",
                      "typeString": "struct CertificateData.COV_CERTIFICATE"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1349:30:3"
            },
            "scope": 170,
            "src": "1233:471:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 168,
              "nodeType": "Block",
              "src": "1852:57:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 164,
                      "name": "holder_to_certificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 369,
                      "src": "1869:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_COV_CERTIFICATE_$363_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct CertificateData.COV_CERTIFICATE storage ref[] storage ref)"
                      }
                    },
                    "id": 166,
                    "indexExpression": {
                      "id": 165,
                      "name": "holder_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "1892:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1869:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$363_storage_$dyn_storage",
                      "typeString": "struct CertificateData.COV_CERTIFICATE storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 163,
                  "id": 167,
                  "nodeType": "Return",
                  "src": "1862:40:3"
                }
              ]
            },
            "functionSelector": "54ca51db",
            "id": 169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCertificatesByUser",
            "nameLocation": "1719:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "holder_id",
                  "nameLocation": "1749:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1741:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1741:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1740:19:3"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "certificate_data",
                  "nameLocation": "1830:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1805:41:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$363_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct CertificateData.COV_CERTIFICATE[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 160,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 159,
                        "name": "COV_CERTIFICATE",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 363,
                        "src": "1805:15:3"
                      },
                      "referencedDeclaration": 363,
                      "src": "1805:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_COV_CERTIFICATE_$363_storage_ptr",
                        "typeString": "struct CertificateData.COV_CERTIFICATE"
                      }
                    },
                    "id": 161,
                    "nodeType": "ArrayTypeName",
                    "src": "1805:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_COV_CERTIFICATE_$363_storage_$dyn_storage_ptr",
                      "typeString": "struct CertificateData.COV_CERTIFICATE[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1804:43:3"
            },
            "scope": 170,
            "src": "1710:199:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 171,
        "src": "107:1804:3",
        "usedErrors": []
      }
    ],
    "src": "32:1880:3"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161097b38038061097b83398101604081905261002f91610062565b600380546001600160a01b03199081163317909155600180546001600160a01b0390931692909116919091179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b6108da806100a16000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f75435d1461005157806354ca51db1461007b578063d58640311461009b578063f21de1e8146100be575b600080fd5b61006461005f36600461072e565b6100d9565b6040516100729291906107f1565b60405180910390f35b61008e610089366004610715565b6102a7565b604051610072919061077c565b6100ae6100a9366004610750565b61033b565b6040519015158152602001610072565b6001546040516001600160a01b039091168152602001610072565b60408051608081018252600080825260208201819052918101829052606081018290526000838152602081815260408083208054825181850281018501909352808352610190938993929190869084015b828210156101875760008481526020908190206040805160808101825260048602909201805483526001808201548486015260028201546001600160a01b031692840192909252600301546060830152908352909201910161012a565b50505050610615565b9050600061019f600183610846565b11156102265760008481526020819052604090206001906101c08284610846565b815481106101d0576101d061088e565b60009182526020918290206040805160808101825260049093029091018054835260018101549383019390935260028301546001600160a01b031690820152600390910154606082015290935091506102a09050565b600084815260208190526040812061023f600184610846565b8154811061024f5761024f61088e565b60009182526020918290206040805160808101825260049093029091018054835260018101549383019390935260028301546001600160a01b03169082015260039091015460608201529093509150505b9250929050565b600081815260208181526040808320805482518185028101850190935280835260609492939192909184015b828210156103305760008481526020908190206040805160808101825260048602909201805483526001808201548486015260028201546001600160a01b03169284019290925260030154606083015290835290920191016102d3565b505050509050919050565b600061034633610678565b151560011461035457600080fd5b60008381526020818152604080832080548251818502810185019093528083526103dc9389939291908690840182156101875760008481526020908190206040805160808101825260048602909201805483526001808201548486015260028201546001600160a01b031692840192909252600301546060830152908352909201910161012a565b905060006103eb600183610846565b11156104fa577fb7cdced8c7c4e48fcb5e29e76371e78f62509ff97a6175d44f84ad36252008e46000604051610444911515815260406020820181905260079082015266616c726561647960c81b606082015260800190565b60405180910390a160008481526020819052604090207fc2ef0555c48e0a7dadac6f502772e4802bec1d77257cf294ff123d5017ad98cf906001906104898285610846565b815481106104995761049961088e565b90600052602060002090600402016040516104e89291909115158252805460208301526001810154604083015260028101546001600160a01b0316606083015260030154608082015260a00190565b60405180910390a1600091505061060e565b6000848152602081815260408083208151608081018352898152808401888152338285019081524260608401818152855460018181018855968a529790982093516004909702909301958655905185840155516002850180546001600160a01b03929092166001600160a01b03199092169190911790559351600390930192909255517fb7cdced8c7c4e48fcb5e29e76371e78f62509ff97a6175d44f84ad36252008e4916105cc919015158152604060208201819052600690820152651cdd1bdc995960d21b606082015260800190565b60405180910390a16040518181527fb776f27e2626443cee65f6c6f97999f4a5c737555723bdd3513a565406a61fed9060200160405180910390a16001925050505b9392505050565b6000805b825181101561066c57838382815181106106355761063561088e565b602002602001015160000151141561065a5761065281600161082e565b915050610672565b806106648161085d565b915050610619565b50600190505b92915050565b600154604051633aa3a01560e11b81526001600160a01b0383811660048301526000921690637547402a90602401602060405180830381600087803b1580156106c057600080fd5b505af11580156106d4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610672919060006020828403121561070557600080fd5b8151801515811461060e57600080fd5b60006020828403121561072757600080fd5b5035919050565b6000806040838503121561074157600080fd5b50508035926020909101359150565b60008060006060848603121561076557600080fd5b505081359360208301359350604090920135919050565b6020808252825182820181905260009190848201906040850190845b818110156107e5576107d283855180518252602080820151908301526040808201516001600160a01b031690830152606090810151910152565b9284019260809290920191600101610798565b50909695505050505050565b821515815260a0810161060e602083018480518252602080820151908301526040808201516001600160a01b031690830152606090810151910152565b6000821982111561084157610841610878565b500190565b60008282101561085857610858610878565b500390565b600060001982141561087157610871610878565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea264697066735822122097d8703947c54df438a01a6545d4fb7cbbc70ce40b70dbeb662ad5fc93f84ffe64736f6c63430008070033",
  "bytecodeSha1": "d06865ea26a2b4c7a603bccf48ab4883a19b6587",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "CertificateHandler",
  "coverageMap": {
    "branches": {
      "1": {},
      "2": {},
      "3": {
        "CertificateHandler.registerCertificate": {
          "16": [
            559,
            572,
            false
          ]
        },
        "CertificateHandler.verifyCertificate": {
          "15": [
            1529,
            1542,
            false
          ]
        }
      },
      "4": {
        "Helper.isCertificateExist": {
          "17": [
            760,
            821,
            false
          ]
        }
      }
    },
    "statements": {
      "1": {
        "CertificateAuthorization.checkSignerIsIssuer": {
          "14": [
            986,
            1039
          ]
        },
        "CertificateAuthorization.getRegistryAddress": {
          "0": [
            876,
            892
          ]
        }
      },
      "2": {},
      "3": {
        "CertificateHandler.getCertificatesByUser": {
          "3": [
            1862,
            1902
          ]
        },
        "CertificateHandler.registerCertificate": {
          "4": [
            588,
            620
          ],
          "5": [
            634,
            753
          ],
          "6": [
            767,
            779
          ],
          "7": [
            859,
            1097
          ],
          "8": [
            1111,
            1141
          ],
          "9": [
            1155,
            1185
          ],
          "10": [
            1199,
            1210
          ]
        },
        "CertificateHandler.verifyCertificate": {
          "1": [
            1558,
            1617
          ],
          "2": [
            1637,
            1697
          ]
        }
      },
      "4": {
        "Helper.isCertificateExist": {
          "11": [
            841,
            851
          ],
          "12": [
            737,
            740
          ],
          "13": [
            965,
            973
          ]
        }
      }
    }
  },
  "dependencies": [
    "CertificateAuthorization",
    "CertificateData",
    "Helper"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f75435d1461005157806354ca51db1461007b578063d58640311461009b578063f21de1e8146100be575b600080fd5b61006461005f36600461072e565b6100d9565b6040516100729291906107f1565b60405180910390f35b61008e610089366004610715565b6102a7565b604051610072919061077c565b6100ae6100a9366004610750565b61033b565b6040519015158152602001610072565b6001546040516001600160a01b039091168152602001610072565b60408051608081018252600080825260208201819052918101829052606081018290526000838152602081815260408083208054825181850281018501909352808352610190938993929190869084015b828210156101875760008481526020908190206040805160808101825260048602909201805483526001808201548486015260028201546001600160a01b031692840192909252600301546060830152908352909201910161012a565b50505050610615565b9050600061019f600183610846565b11156102265760008481526020819052604090206001906101c08284610846565b815481106101d0576101d061088e565b60009182526020918290206040805160808101825260049093029091018054835260018101549383019390935260028301546001600160a01b031690820152600390910154606082015290935091506102a09050565b600084815260208190526040812061023f600184610846565b8154811061024f5761024f61088e565b60009182526020918290206040805160808101825260049093029091018054835260018101549383019390935260028301546001600160a01b03169082015260039091015460608201529093509150505b9250929050565b600081815260208181526040808320805482518185028101850190935280835260609492939192909184015b828210156103305760008481526020908190206040805160808101825260048602909201805483526001808201548486015260028201546001600160a01b03169284019290925260030154606083015290835290920191016102d3565b505050509050919050565b600061034633610678565b151560011461035457600080fd5b60008381526020818152604080832080548251818502810185019093528083526103dc9389939291908690840182156101875760008481526020908190206040805160808101825260048602909201805483526001808201548486015260028201546001600160a01b031692840192909252600301546060830152908352909201910161012a565b905060006103eb600183610846565b11156104fa577fb7cdced8c7c4e48fcb5e29e76371e78f62509ff97a6175d44f84ad36252008e46000604051610444911515815260406020820181905260079082015266616c726561647960c81b606082015260800190565b60405180910390a160008481526020819052604090207fc2ef0555c48e0a7dadac6f502772e4802bec1d77257cf294ff123d5017ad98cf906001906104898285610846565b815481106104995761049961088e565b90600052602060002090600402016040516104e89291909115158252805460208301526001810154604083015260028101546001600160a01b0316606083015260030154608082015260a00190565b60405180910390a1600091505061060e565b6000848152602081815260408083208151608081018352898152808401888152338285019081524260608401818152855460018181018855968a529790982093516004909702909301958655905185840155516002850180546001600160a01b03929092166001600160a01b03199092169190911790559351600390930192909255517fb7cdced8c7c4e48fcb5e29e76371e78f62509ff97a6175d44f84ad36252008e4916105cc919015158152604060208201819052600690820152651cdd1bdc995960d21b606082015260800190565b60405180910390a16040518181527fb776f27e2626443cee65f6c6f97999f4a5c737555723bdd3513a565406a61fed9060200160405180910390a16001925050505b9392505050565b6000805b825181101561066c57838382815181106106355761063561088e565b602002602001015160000151141561065a5761065281600161082e565b915050610672565b806106648161085d565b915050610619565b50600190505b92915050565b600154604051633aa3a01560e11b81526001600160a01b0383811660048301526000921690637547402a90602401602060405180830381600087803b1580156106c057600080fd5b505af11580156106d4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610672919060006020828403121561070557600080fd5b8151801515811461060e57600080fd5b60006020828403121561072757600080fd5b5035919050565b6000806040838503121561074157600080fd5b50508035926020909101359150565b60008060006060848603121561076557600080fd5b505081359360208301359350604090920135919050565b6020808252825182820181905260009190848201906040850190845b818110156107e5576107d283855180518252602080820151908301526040808201516001600160a01b031690830152606090810151910152565b9284019260809290920191600101610798565b50909695505050505050565b821515815260a0810161060e602083018480518252602080820151908301526040808201516001600160a01b031690830152606090810151910152565b6000821982111561084157610841610878565b500190565b60008282101561085857610858610878565b500390565b600060001982141561087157610871610878565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea264697066735822122097d8703947c54df438a01a6545d4fb7cbbc70ce40b70dbeb662ad5fc93f84ffe64736f6c63430008070033",
  "deployedSourceMap": "107:1804:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1233:471;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1710:199;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;246:981::-;;;;;;:::i;:::-;;:::i;:::-;;;2457:14:5;;2450:22;2432:41;;2420:2;2405:18;246:981:3;2292:187:5;808:92:1;883:9;;808:92;;-1:-1:-1;;;;;883:9:1;;;1500:51:5;;1488:2;1473:18;808:92:1;1354:203:5;1233:471:3;-1:-1:-1;;;;;;;;1350:4:3;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;1394:13:3;1472:33;;;;;;;;;;;1410:105;;;;;;;;;;;;;;;;;;;1442:16;;1410:105;1472:33;1410:105;1394:13;;1410:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1410:105:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:18;:105::i;:::-;1394:121;-1:-1:-1;1541:1:3;1529:9;1537:1;1394:121;1529:9;:::i;:::-;:13;1525:103;;;1572:22;:33;;;;;;;;;;1566:4;;1606:9;1566:4;1606:5;:9;:::i;:::-;1572:44;;;;;;;;:::i;:::-;;;;;;;;;;1558:59;;;;;;;;1572:44;;;;;;;1558:59;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1558:59:3;;;;;;;;;;;;;;;;-1:-1:-1;1558:59:3;-1:-1:-1;1558:59:3;;-1:-1:-1;1558:59:3;1525:103;1645:5;1652:33;;;;;;;;;;1686:9;1694:1;1686:5;:9;:::i;:::-;1652:44;;;;;;;;:::i;:::-;;;;;;;;;;1637:60;;;;;;;;1652:44;;;;;;;1637:60;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1637:60:3;;;;;;;;;;;;;;;;-1:-1:-1;1637:60:3;-1:-1:-1;;1233:471:3;;;;;;:::o;1710:199::-;1869:22;:33;;;;;;;;;;;1862:40;;;;;;;;;;;;;;;;;1805:41;;1862:40;;1869:33;;1862:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1862:40:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:199;;;:::o;246:981::-;400:12;1096:31:1;1116:10;1096:19;:31::i;:::-;:39;;1131:4;1096:39;1088:48;;;;;;424:13:3::1;502:33:::0;;;::::1;::::0;;;;;;;440:105;;;;;;::::1;::::0;;;;;;;;;;::::1;::::0;472:16;;440:105;502:33;440:105;424:13;;440:105;::::1;::::0;;::::1;;;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;440:105:3::1;::::0;;;;;;;::::1;;::::0;;;;;;;;;;::::1;::::0;::::1;;;;424:121:::0;-1:-1:-1;571:1:3::1;559:9;567:1;424:121:::0;559:9:::1;:::i;:::-;:13;555:666;;;593:27;603:5;593:27;;;;2715:14:5::0;2708:22;2690:41;;2767:2;2762;2747:18;;2740:30;;;2806:1;2786:18;;;2779:29;-1:-1:-1;;;2839:2:5;2824:18;;2817:37;2886:3;2871:19;;2484:412;593:27:3::1;;;;;;;;695:22;:33:::0;;;::::1;::::0;;;;;;639:114:::1;::::0;673:4:::1;::::0;729:9:::1;673:4:::0;729:5;:9:::1;:::i;:::-;695:44;;;;;;;;:::i;:::-;;;;;;;;;;;639:114;;;;;;3927:14:5::0;;3920:22;3902:41;;3979:13;;3974:2;3959:18;;3952:41;4047:4;4035:17;;4029:24;4024:2;4009:18;;4002:52;4112:4;4100:17;;4094:24;-1:-1:-1;;;;;4090:50:5;4085:2;4070:18;;4063:78;4196:4;4184:17;4178:24;4172:3;4157:19;;4150:53;3889:3;3874:19;;3672:537;639:114:3::1;;;;;;;;774:5;767:12;;;;;555:666;810:17;859:33:::0;;;::::1;::::0;;;;;;;915:168;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;1024:10:::1;915:168:::0;;;;;;830:15:::1;915:168:::0;;;;;;859:238;;::::1;::::0;;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;859:238:3;;;::::1;-1:-1:-1::0;;;;;;859:238:3;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;;1116:25;::::1;::::0;::::1;::::0;3132:14:5;;3125:22;3107:41;;3184:2;3179;3164:18;;3157:30;;;3223:1;3203:18;;;3196:29;-1:-1:-1;;;3256:2:5;3241:18;;3234:36;3302:3;3287:19;;2901:411;1116:25:3::1;;;;;;;;1160;::::0;4360::5;;;1160::3::1;::::0;4348:2:5;4333:18;1160:25:3::1;;;;;;;1206:4;1199:11;;;;1147:1:1;246:981:3::0;;;;;:::o;532:448:4:-;668:7;;686:190;710:18;:25;706:1;:29;686:190;;;812:9;760:18;779:1;760:21;;;;;;;;:::i;:::-;;;;;;;:48;;;:61;756:110;;;848:3;:1;850;848:3;:::i;:::-;841:10;;;;;756:110;737:3;;;;:::i;:::-;;;;686:190;;;;972:1;965:8;;532:448;;;;;:::o;908:139:1:-;1004:9;;993:46;;-1:-1:-1;;;993:46:1;;-1:-1:-1;;;;;1518:32:5;;;993:46:1;;;1500:51:5;969:4:1;;1004:9;;993:38;;1473:18:5;;993:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;81:6:5;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;182:9;176:16;235:5;228:13;221:21;214:5;211:32;201:60;;257:1;254;247:12;296:180;355:6;408:2;396:9;387:7;383:23;379:32;376:52;;;424:1;421;414:12;376:52;-1:-1:-1;447:23:5;;296:180;-1:-1:-1;296:180:5:o;481:248::-;549:6;557;610:2;598:9;589:7;585:23;581:32;578:52;;;626:1;623;616:12;578:52;-1:-1:-1;;649:23:5;;;719:2;704:18;;;691:32;;-1:-1:-1;481:248:5:o;734:316::-;811:6;819;827;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;-1:-1:-1;;919:23:5;;;989:2;974:18;;961:32;;-1:-1:-1;1040:2:5;1025:18;;;1012:32;;734:316;-1:-1:-1;734:316:5:o;1562:725::-;1797:2;1849:21;;;1919:13;;1822:18;;;1941:22;;;1768:4;;1797:2;2020:15;;;;1994:2;1979:18;;;1768:4;2063:198;2077:6;2074:1;2071:13;2063:198;;;2126:53;2175:3;2166:6;2160:13;1136:12;;1124:25;;1198:4;1187:16;;;1181:23;1165:14;;;1158:47;1258:4;1247:16;;;1241:23;-1:-1:-1;;;;;1237:49:5;1221:14;;;1214:73;1336:4;1325:16;;;1319:23;1303:14;;1296:47;1055:294;2126:53;2236:15;;;;2208:4;2199:14;;;;;2099:1;2092:9;2063:198;;;-1:-1:-1;2278:3:5;;1562:725;-1:-1:-1;;;;;;1562:725:5:o;3317:350::-;3575:14;;3568:22;3550:41;;3537:3;3522:19;;3600:61;3657:2;3642:18;;3634:6;1136:12;;1124:25;;1198:4;1187:16;;;1181:23;1165:14;;;1158:47;1258:4;1247:16;;;1241:23;-1:-1:-1;;;;;1237:49:5;1221:14;;;1214:73;1336:4;1325:16;;;1319:23;1303:14;;1296:47;1055:294;4396:128;4436:3;4467:1;4463:6;4460:1;4457:13;4454:39;;;4473:18;;:::i;:::-;-1:-1:-1;4509:9:5;;4396:128::o;4529:125::-;4569:4;4597:1;4594;4591:8;4588:34;;;4602:18;;:::i;:::-;-1:-1:-1;4639:9:5;;4529:125::o;4659:135::-;4698:3;-1:-1:-1;;4719:17:5;;4716:43;;;4739:18;;:::i;:::-;-1:-1:-1;4786:1:5;4775:13;;4659:135::o;4799:127::-;4860:10;4855:3;4851:20;4848:1;4841:31;4891:4;4888:1;4881:15;4915:4;4912:1;4905:15;4931:127;4992:10;4987:3;4983:20;4980:1;4973:31;5023:4;5020:1;5013:15;5047:4;5044:1;5037:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    107,
    1911
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F75435D EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x54CA51DB EQ PUSH2 0x7B JUMPI DUP1 PUSH4 0xD5864031 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0xF21DE1E8 EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x72E JUMP JUMPDEST PUSH2 0xD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72 SWAP3 SWAP2 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8E PUSH2 0x89 CALLDATASIZE PUSH1 0x4 PUSH2 0x715 JUMP JUMPDEST PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72 SWAP2 SWAP1 PUSH2 0x77C JUMP JUMPDEST PUSH2 0xAE PUSH2 0xA9 CALLDATASIZE PUSH1 0x4 PUSH2 0x750 JUMP JUMPDEST PUSH2 0x33B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x72 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x72 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH2 0x190 SWAP4 DUP10 SWAP4 SWAP3 SWAP2 SWAP1 DUP7 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x12A JUMP JUMPDEST POP POP POP POP PUSH2 0x615 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x19F PUSH1 0x1 DUP4 PUSH2 0x846 JUMP JUMPDEST GT ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 PUSH2 0x1C0 DUP3 DUP5 PUSH2 0x846 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1D0 JUMPI PUSH2 0x1D0 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x4 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x2A0 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x23F PUSH1 0x1 DUP5 PUSH2 0x846 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x24F JUMPI PUSH2 0x24F PUSH2 0x88E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x4 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 SWAP4 POP SWAP2 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2D3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346 CALLER PUSH2 0x678 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH2 0x3DC SWAP4 DUP10 SWAP4 SWAP3 SWAP2 SWAP1 DUP7 SWAP1 DUP5 ADD DUP3 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x12A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3EB PUSH1 0x1 DUP4 PUSH2 0x846 JUMP JUMPDEST GT ISZERO PUSH2 0x4FA JUMPI PUSH32 0xB7CDCED8C7C4E48FCB5E29E76371E78F62509FF97A6175D44F84AD36252008E4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x444 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x616C7265616479 PUSH1 0xC8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0xC2EF0555C48E0A7DADAC6F502772E4802BEC1D77257CF294FF123D5017AD98CF SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x489 DUP3 DUP6 PUSH2 0x846 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x499 JUMPI PUSH2 0x499 PUSH2 0x88E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD PUSH2 0x4E8 SWAP3 SWAP2 SWAP1 SWAP2 ISZERO ISZERO DUP3 MSTORE DUP1 SLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SWAP2 POP POP PUSH2 0x60E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP10 DUP2 MSTORE DUP1 DUP5 ADD DUP9 DUP2 MSTORE CALLER DUP3 DUP6 ADD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x60 DUP5 ADD DUP2 DUP2 MSTORE DUP6 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP9 SSTORE SWAP7 DUP11 MSTORE SWAP8 SWAP1 SWAP9 KECCAK256 SWAP4 MLOAD PUSH1 0x4 SWAP1 SWAP8 MUL SWAP1 SWAP4 ADD SWAP6 DUP7 SSTORE SWAP1 MLOAD DUP6 DUP5 ADD SSTORE MLOAD PUSH1 0x2 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP4 MLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE MLOAD PUSH32 0xB7CDCED8C7C4E48FCB5E29E76371E78F62509FF97A6175D44F84AD36252008E4 SWAP2 PUSH2 0x5CC SWAP2 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x6 SWAP1 DUP3 ADD MSTORE PUSH6 0x1CDD1BDC9959 PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xB776F27E2626443CEE65F6C6F97999F4A5C737555723BDD3513A565406A61FED SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x66C JUMPI DUP4 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x635 JUMPI PUSH2 0x635 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x65A JUMPI PUSH2 0x652 DUP2 PUSH1 0x1 PUSH2 0x82E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x672 JUMP JUMPDEST DUP1 PUSH2 0x664 DUP2 PUSH2 0x85D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x619 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3AA3A015 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x7547402A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x672 SWAP2 SWAP1 PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x705 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x60E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7E5 JUMPI PUSH2 0x7D2 DUP4 DUP6 MLOAD DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 PUSH1 0x80 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x798 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0xA0 DUP2 ADD PUSH2 0x60E PUSH1 0x20 DUP4 ADD DUP5 DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x841 JUMPI PUSH2 0x841 PUSH2 0x878 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x858 JUMPI PUSH2 0x858 PUSH2 0x878 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x871 JUMPI PUSH2 0x871 PUSH2 0x878 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xD8 PUSH17 0x3947C54DF438A01A6545D4FB7CBBC70CE4 SIGNEXTEND PUSH17 0xDBEB662AD5FC93F84FFE64736F6C634300 ADDMOD SMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        107,
        1911
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1F75435D"
    },
    "38": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "EQ",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x54CA51DB"
    },
    "49": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "EQ",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7B"
    },
    "53": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD5864031"
    },
    "60": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B"
    },
    "64": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF21DE1E8"
    },
    "71": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBE"
    },
    "75": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "DUP1",
      "path": "3"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        107,
        1911
      ],
      "op": "REVERT",
      "path": "3"
    },
    "81": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "82": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x64"
    },
    "85": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5F"
    },
    "88": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "89": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "91": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x72E"
    },
    "94": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1233,
        1704
      ],
      "op": "JUMP",
      "path": "3"
    },
    "95": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "96": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD9"
    },
    "99": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1233,
        1704
      ],
      "op": "JUMP",
      "path": "3"
    },
    "100": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "101": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "103": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "104": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x72"
    },
    "107": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "108": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "109": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "110": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7F1"
    },
    "113": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1233,
        1704
      ],
      "op": "JUMP",
      "path": "3"
    },
    "114": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "115": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "117": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "118": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "DUP1",
      "path": "3"
    },
    "119": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "120": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "SUB",
      "path": "3"
    },
    "121": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "122": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "RETURN",
      "path": "3"
    },
    "123": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1710,
        1909
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "124": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1710,
        1909
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8E"
    },
    "127": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1710,
        1909
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x89"
    },
    "130": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1710,
        1909
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "131": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1710,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "133": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1710,
        1909
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x715"
    },
    "136": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "jump": "i",
      "offset": [
        1710,
        1909
      ],
      "op": "JUMP",
      "path": "3"
    },
    "137": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1710,
        1909
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "138": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1710,
        1909
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A7"
    },
    "141": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "jump": "i",
      "offset": [
        1710,
        1909
      ],
      "op": "JUMP",
      "path": "3"
    },
    "142": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1710,
        1909
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "143": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1710,
        1909
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "145": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1710,
        1909
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "146": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1710,
        1909
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x72"
    },
    "149": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1710,
        1909
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "150": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1710,
        1909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "151": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1710,
        1909
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x77C"
    },
    "154": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "jump": "i",
      "offset": [
        1710,
        1909
      ],
      "op": "JUMP",
      "path": "3"
    },
    "155": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        246,
        1227
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "156": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        246,
        1227
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAE"
    },
    "159": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        246,
        1227
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA9"
    },
    "162": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        246,
        1227
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "163": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        246,
        1227
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "165": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        246,
        1227
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x750"
    },
    "168": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        246,
        1227
      ],
      "op": "JUMP",
      "path": "3"
    },
    "169": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        246,
        1227
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "170": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        246,
        1227
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33B"
    },
    "173": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        246,
        1227
      ],
      "op": "JUMP",
      "path": "3"
    },
    "174": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        246,
        1227
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "175": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        246,
        1227
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "177": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        246,
        1227
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "178": {
      "op": "SWAP1"
    },
    "179": {
      "op": "ISZERO"
    },
    "180": {
      "op": "ISZERO"
    },
    "181": {
      "op": "DUP2"
    },
    "182": {
      "op": "MSTORE"
    },
    "183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "185": {
      "op": "ADD"
    },
    "186": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        246,
        1227
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x72"
    },
    "189": {
      "op": "JUMP"
    },
    "190": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        808,
        900
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "191": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        883,
        892
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x1"
    },
    "193": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        883,
        892
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "194": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        808,
        900
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "196": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        808,
        900
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "203": {
      "op": "SHL"
    },
    "204": {
      "op": "SUB"
    },
    "205": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        883,
        892
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "206": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        883,
        892
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "207": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        883,
        892
      ],
      "op": "AND",
      "path": "1"
    },
    "208": {
      "op": "DUP2"
    },
    "209": {
      "op": "MSTORE"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "212": {
      "op": "ADD"
    },
    "213": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        808,
        900
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x72"
    },
    "216": {
      "op": "JUMP"
    },
    "217": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "218": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "220": {
      "op": "DUP1"
    },
    "221": {
      "op": "MLOAD"
    },
    "222": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "224": {
      "op": "DUP2"
    },
    "225": {
      "op": "ADD"
    },
    "226": {
      "op": "DUP3"
    },
    "227": {
      "op": "MSTORE"
    },
    "228": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1350,
        1354
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "230": {
      "op": "DUP1"
    },
    "231": {
      "op": "DUP3"
    },
    "232": {
      "op": "MSTORE"
    },
    "233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "235": {
      "op": "DUP3"
    },
    "236": {
      "op": "ADD"
    },
    "237": {
      "op": "DUP2"
    },
    "238": {
      "op": "SWAP1"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "SWAP2"
    },
    "241": {
      "op": "DUP2"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "op": "DUP3"
    },
    "244": {
      "op": "SWAP1"
    },
    "245": {
      "op": "MSTORE"
    },
    "246": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "248": {
      "op": "DUP2"
    },
    "249": {
      "op": "ADD"
    },
    "250": {
      "op": "DUP3"
    },
    "251": {
      "op": "SWAP1"
    },
    "252": {
      "op": "MSTORE"
    },
    "253": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1394,
        1407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "255": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "DUP4",
      "path": "3"
    },
    "256": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "DUP2",
      "path": "3"
    },
    "257": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "258": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "260": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "DUP2",
      "path": "3"
    },
    "261": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "DUP2",
      "path": "3"
    },
    "262": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "263": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "265": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "DUP1",
      "path": "3"
    },
    "266": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "DUP4",
      "path": "3"
    },
    "267": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "268": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "269": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "270": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "271": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "272": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "273": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP6",
      "path": "3"
    },
    "274": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "MUL",
      "path": "3"
    },
    "275": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "276": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "ADD",
      "path": "3"
    },
    "277": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP6",
      "path": "3"
    },
    "278": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "ADD",
      "path": "3"
    },
    "279": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "280": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "281": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "282": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "283": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP4",
      "path": "3"
    },
    "284": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "285": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x190"
    },
    "288": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "289": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1442,
        1458
      ],
      "op": "DUP10",
      "path": "3"
    },
    "290": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1442,
        1458
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "291": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "292": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1472,
        1505
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "293": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "294": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1394,
        1407
      ],
      "op": "DUP7",
      "path": "3"
    },
    "295": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1394,
        1407
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "296": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP5",
      "path": "3"
    },
    "297": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "ADD",
      "path": "3"
    },
    "298": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "299": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "300": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "301": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "LT",
      "path": "3"
    },
    "302": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "303": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x187"
    },
    "306": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "307": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "309": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP5",
      "path": "3"
    },
    "310": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "311": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "312": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "314": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "315": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "316": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "317": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "318": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "320": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "321": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "322": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "324": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "325": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "ADD",
      "path": "3"
    },
    "326": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "327": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "328": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "330": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP7",
      "path": "3"
    },
    "331": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "MUL",
      "path": "3"
    },
    "332": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "333": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "334": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "ADD",
      "path": "3"
    },
    "335": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "336": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "337": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP4",
      "path": "3"
    },
    "338": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "339": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "341": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "342": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "343": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "ADD",
      "path": "3"
    },
    "344": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "345": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP5",
      "path": "3"
    },
    "346": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP7",
      "path": "3"
    },
    "347": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "ADD",
      "path": "3"
    },
    "348": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "349": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "351": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP3",
      "path": "3"
    },
    "352": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "ADD",
      "path": "3"
    },
    "353": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "360": {
      "op": "SHL"
    },
    "361": {
      "op": "SUB"
    },
    "362": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "AND",
      "path": "3"
    },
    "363": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "364": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP5",
      "path": "3"
    },
    "365": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "ADD",
      "path": "3"
    },
    "366": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "367": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "368": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "369": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "370": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "372": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "ADD",
      "path": "3"
    },
    "373": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "374": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "376": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP4",
      "path": "3"
    },
    "377": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "ADD",
      "path": "3"
    },
    "378": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "379": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "380": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "DUP4",
      "path": "3"
    },
    "381": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "382": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "383": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "384": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "ADD",
      "path": "3"
    },
    "385": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "386": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "ADD",
      "path": "3"
    },
    "387": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12A"
    },
    "390": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "JUMP",
      "path": "3"
    },
    "391": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "392": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "POP",
      "path": "3"
    },
    "393": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "POP",
      "path": "3"
    },
    "394": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "POP",
      "path": "3"
    },
    "395": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "POP",
      "path": "3"
    },
    "396": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1428
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x615"
    },
    "399": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1410,
        1515
      ],
      "op": "JUMP",
      "path": "3"
    },
    "400": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1410,
        1515
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "401": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1394,
        1515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "402": {
      "op": "POP"
    },
    "403": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1541,
        1542
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "405": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1529,
        1538
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19F"
    },
    "408": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1537,
        1538
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "410": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1394,
        1515
      ],
      "op": "DUP4",
      "path": "3"
    },
    "411": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1529,
        1538
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x846"
    },
    "414": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1529,
        1538
      ],
      "op": "JUMP",
      "path": "3"
    },
    "415": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1529,
        1538
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "416": {
      "branch": 15,
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1529,
        1542
      ],
      "op": "GT",
      "path": "3"
    },
    "417": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1525,
        1628
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "418": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1525,
        1628
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x226"
    },
    "421": {
      "branch": 15,
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1525,
        1628
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "422": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1594
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x0"
    },
    "424": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1605
      ],
      "op": "DUP5",
      "path": "3"
    },
    "425": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1605
      ],
      "op": "DUP2",
      "path": "3"
    },
    "426": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1605
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "427": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "429": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1605
      ],
      "op": "DUP2",
      "path": "3"
    },
    "430": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1605
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "431": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1605
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "432": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "434": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1605
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "435": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1605
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "436": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1566,
        1570
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "438": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1566,
        1570
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "439": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1606,
        1615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C0"
    },
    "442": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1566,
        1570
      ],
      "op": "DUP3",
      "path": "3"
    },
    "443": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1606,
        1611
      ],
      "op": "DUP5",
      "path": "3"
    },
    "444": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1606,
        1615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x846"
    },
    "447": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1606,
        1615
      ],
      "op": "JUMP",
      "path": "3"
    },
    "448": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1606,
        1615
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "449": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "DUP2",
      "path": "3"
    },
    "450": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "451": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "DUP2",
      "path": "3"
    },
    "452": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "LT",
      "path": "3"
    },
    "453": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D0"
    },
    "456": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "457": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D0"
    },
    "460": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x88E"
    },
    "463": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1572,
        1616
      ],
      "op": "JUMP",
      "path": "3"
    },
    "464": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "465": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "467": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "468": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "DUP3",
      "path": "3"
    },
    "469": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "470": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "472": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "473": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "DUP3",
      "path": "3"
    },
    "474": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "475": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "476": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "478": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "DUP1",
      "path": "3"
    },
    "479": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "480": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "482": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "DUP2",
      "path": "3"
    },
    "483": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "ADD",
      "path": "3"
    },
    "484": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "DUP3",
      "path": "3"
    },
    "485": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "486": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "488": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "489": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "490": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "MUL",
      "path": "3"
    },
    "491": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "492": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "493": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1572,
        1616
      ],
      "op": "ADD",
      "path": "3"
    },
    "494": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "DUP1",
      "path": "3"
    },
    "495": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "496": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "DUP4",
      "path": "3"
    },
    "497": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "498": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "500": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "DUP2",
      "path": "3"
    },
    "501": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "ADD",
      "path": "3"
    },
    "502": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "503": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "504": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "DUP4",
      "path": "3"
    },
    "505": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "ADD",
      "path": "3"
    },
    "506": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "507": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "508": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "509": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "510": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "512": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "DUP4",
      "path": "3"
    },
    "513": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "ADD",
      "path": "3"
    },
    "514": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "521": {
      "op": "SHL"
    },
    "522": {
      "op": "SUB"
    },
    "523": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "AND",
      "path": "3"
    },
    "524": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "525": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "DUP3",
      "path": "3"
    },
    "526": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "ADD",
      "path": "3"
    },
    "527": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "528": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "530": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "531": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "532": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "ADD",
      "path": "3"
    },
    "533": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "534": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "536": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "DUP3",
      "path": "3"
    },
    "537": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "ADD",
      "path": "3"
    },
    "538": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "539": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "540": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "541": {
      "op": "POP"
    },
    "542": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "543": {
      "op": "POP"
    },
    "544": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A0"
    },
    "547": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "548": {
      "op": "POP"
    },
    "549": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1558,
        1617
      ],
      "op": "JUMP",
      "path": "3"
    },
    "550": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1525,
        1628
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "551": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1645,
        1650
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x0"
    },
    "553": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1685
      ],
      "op": "DUP5",
      "path": "3"
    },
    "554": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1685
      ],
      "op": "DUP2",
      "path": "3"
    },
    "555": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1685
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "556": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1685
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "558": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1685
      ],
      "op": "DUP2",
      "path": "3"
    },
    "559": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1685
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "560": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1685
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "561": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1685
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "563": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1685
      ],
      "op": "DUP2",
      "path": "3"
    },
    "564": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1685
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "565": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1686,
        1695
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23F"
    },
    "568": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1694,
        1695
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "570": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1686,
        1691
      ],
      "op": "DUP5",
      "path": "3"
    },
    "571": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1686,
        1695
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x846"
    },
    "574": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1686,
        1695
      ],
      "op": "JUMP",
      "path": "3"
    },
    "575": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1686,
        1695
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "576": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "DUP2",
      "path": "3"
    },
    "577": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "578": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "DUP2",
      "path": "3"
    },
    "579": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "LT",
      "path": "3"
    },
    "580": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24F"
    },
    "583": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "584": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24F"
    },
    "587": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x88E"
    },
    "590": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "i",
      "offset": [
        1652,
        1696
      ],
      "op": "JUMP",
      "path": "3"
    },
    "591": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "592": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "594": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "595": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "DUP3",
      "path": "3"
    },
    "596": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "597": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "599": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "600": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "DUP3",
      "path": "3"
    },
    "601": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "602": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "603": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "605": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "DUP1",
      "path": "3"
    },
    "606": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "607": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "609": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "610": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "ADD",
      "path": "3"
    },
    "611": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "DUP3",
      "path": "3"
    },
    "612": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "613": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "615": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "616": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "617": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "MUL",
      "path": "3"
    },
    "618": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "619": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "620": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1652,
        1696
      ],
      "op": "ADD",
      "path": "3"
    },
    "621": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "DUP1",
      "path": "3"
    },
    "622": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "623": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "DUP4",
      "path": "3"
    },
    "624": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "625": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "627": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "DUP2",
      "path": "3"
    },
    "628": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "ADD",
      "path": "3"
    },
    "629": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "630": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "631": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "DUP4",
      "path": "3"
    },
    "632": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "ADD",
      "path": "3"
    },
    "633": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "634": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "635": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "636": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "637": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "639": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "DUP4",
      "path": "3"
    },
    "640": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "ADD",
      "path": "3"
    },
    "641": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "648": {
      "op": "SHL"
    },
    "649": {
      "op": "SUB"
    },
    "650": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "AND",
      "path": "3"
    },
    "651": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "652": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "DUP3",
      "path": "3"
    },
    "653": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "ADD",
      "path": "3"
    },
    "654": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "655": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "657": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "658": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "659": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "ADD",
      "path": "3"
    },
    "660": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "661": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "663": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "DUP3",
      "path": "3"
    },
    "664": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "ADD",
      "path": "3"
    },
    "665": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "666": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "667": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "668": {
      "op": "POP"
    },
    "669": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1637,
        1697
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "670": {
      "op": "POP"
    },
    "671": {
      "op": "POP"
    },
    "672": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "673": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "674": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "POP",
      "path": "3"
    },
    "675": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "676": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "677": {
      "fn": "CertificateHandler.verifyCertificate",
      "offset": [
        1233,
        1704
      ],
      "op": "POP",
      "path": "3"
    },
    "678": {
      "fn": "CertificateHandler.verifyCertificate",
      "jump": "o",
      "offset": [
        1233,
        1704
      ],
      "op": "JUMP",
      "path": "3"
    },
    "679": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1710,
        1909
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "680": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1891
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 3,
      "value": "0x0"
    },
    "682": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1902
      ],
      "op": "DUP2",
      "path": "3"
    },
    "683": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1902
      ],
      "op": "DUP2",
      "path": "3"
    },
    "684": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1902
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "685": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "687": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1902
      ],
      "op": "DUP2",
      "path": "3"
    },
    "688": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1902
      ],
      "op": "DUP2",
      "path": "3"
    },
    "689": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1902
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "690": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "692": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1902
      ],
      "op": "DUP1",
      "path": "3"
    },
    "693": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1902
      ],
      "op": "DUP4",
      "path": "3"
    },
    "694": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1902
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "695": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP1",
      "path": "3"
    },
    "696": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "697": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP3",
      "path": "3"
    },
    "698": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "699": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP2",
      "path": "3"
    },
    "700": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP6",
      "path": "3"
    },
    "701": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "MUL",
      "path": "3"
    },
    "702": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP2",
      "path": "3"
    },
    "703": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "ADD",
      "path": "3"
    },
    "704": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP6",
      "path": "3"
    },
    "705": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "ADD",
      "path": "3"
    },
    "706": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "707": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "708": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "709": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP1",
      "path": "3"
    },
    "710": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP4",
      "path": "3"
    },
    "711": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "712": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1805,
        1846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "714": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1805,
        1846
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "715": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "716": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "717": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1902
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "718": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1869,
        1902
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "719": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "720": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "721": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP5",
      "path": "3"
    },
    "722": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "ADD",
      "path": "3"
    },
    "723": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "724": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP3",
      "path": "3"
    },
    "725": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP3",
      "path": "3"
    },
    "726": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "LT",
      "path": "3"
    },
    "727": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "728": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x330"
    },
    "731": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "732": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "734": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP5",
      "path": "3"
    },
    "735": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP2",
      "path": "3"
    },
    "736": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "737": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "739": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "740": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP2",
      "path": "3"
    },
    "741": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "742": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "743": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "745": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP1",
      "path": "3"
    },
    "746": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "747": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "749": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP2",
      "path": "3"
    },
    "750": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "ADD",
      "path": "3"
    },
    "751": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP3",
      "path": "3"
    },
    "752": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "753": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "755": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP7",
      "path": "3"
    },
    "756": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "MUL",
      "path": "3"
    },
    "757": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "758": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "759": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "ADD",
      "path": "3"
    },
    "760": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP1",
      "path": "3"
    },
    "761": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "762": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP4",
      "path": "3"
    },
    "763": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "764": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "766": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP1",
      "path": "3"
    },
    "767": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP3",
      "path": "3"
    },
    "768": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "ADD",
      "path": "3"
    },
    "769": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "770": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP5",
      "path": "3"
    },
    "771": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP7",
      "path": "3"
    },
    "772": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "ADD",
      "path": "3"
    },
    "773": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "774": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "776": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP3",
      "path": "3"
    },
    "777": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "ADD",
      "path": "3"
    },
    "778": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "785": {
      "op": "SHL"
    },
    "786": {
      "op": "SUB"
    },
    "787": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "AND",
      "path": "3"
    },
    "788": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "789": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP5",
      "path": "3"
    },
    "790": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "ADD",
      "path": "3"
    },
    "791": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "792": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "793": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "794": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "795": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "797": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "ADD",
      "path": "3"
    },
    "798": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "799": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "801": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP4",
      "path": "3"
    },
    "802": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "ADD",
      "path": "3"
    },
    "803": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "804": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "805": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "DUP4",
      "path": "3"
    },
    "806": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "807": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "808": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "809": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "ADD",
      "path": "3"
    },
    "810": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "811": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "ADD",
      "path": "3"
    },
    "812": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D3"
    },
    "815": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "JUMP",
      "path": "3"
    },
    "816": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "817": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "POP",
      "path": "3"
    },
    "818": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "POP",
      "path": "3"
    },
    "819": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "POP",
      "path": "3"
    },
    "820": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "POP",
      "path": "3"
    },
    "821": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "822": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1862,
        1902
      ],
      "op": "POP",
      "path": "3"
    },
    "823": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1710,
        1909
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "824": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1710,
        1909
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "825": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "offset": [
        1710,
        1909
      ],
      "op": "POP",
      "path": "3"
    },
    "826": {
      "fn": "CertificateHandler.getCertificatesByUser",
      "jump": "o",
      "offset": [
        1710,
        1909
      ],
      "op": "JUMP",
      "path": "3"
    },
    "827": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        246,
        1227
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "828": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        400,
        412
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "830": {
      "offset": [
        1096,
        1127
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x346"
    },
    "833": {
      "offset": [
        1116,
        1126
      ],
      "op": "CALLER",
      "path": "1"
    },
    "834": {
      "offset": [
        1096,
        1115
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x678"
    },
    "837": {
      "jump": "i",
      "offset": [
        1096,
        1127
      ],
      "op": "JUMP",
      "path": "1"
    },
    "838": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1096,
        1127
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "839": {
      "offset": [
        1096,
        1135
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "840": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1096,
        1135
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "841": {
      "offset": [
        1131,
        1135
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "843": {
      "offset": [
        1096,
        1135
      ],
      "op": "EQ",
      "path": "1"
    },
    "844": {
      "offset": [
        1088,
        1136
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x354"
    },
    "847": {
      "offset": [
        1088,
        1136
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "848": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1088,
        1136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "850": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1088,
        1136
      ],
      "op": "DUP1",
      "path": "1"
    },
    "851": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1088,
        1136
      ],
      "op": "REVERT",
      "path": "1"
    },
    "852": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1088,
        1136
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "853": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        424,
        437
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "855": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        502,
        535
      ],
      "op": "DUP4",
      "path": "3"
    },
    "856": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        502,
        535
      ],
      "op": "DUP2",
      "path": "3"
    },
    "857": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        502,
        535
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "858": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        502,
        535
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "860": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        502,
        535
      ],
      "op": "DUP2",
      "path": "3"
    },
    "861": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        502,
        535
      ],
      "op": "DUP2",
      "path": "3"
    },
    "862": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        502,
        535
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "863": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        502,
        535
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "865": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        502,
        535
      ],
      "op": "DUP1",
      "path": "3"
    },
    "866": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        502,
        535
      ],
      "op": "DUP4",
      "path": "3"
    },
    "867": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        502,
        535
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "868": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP1",
      "path": "3"
    },
    "869": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "870": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP3",
      "path": "3"
    },
    "871": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "872": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP2",
      "path": "3"
    },
    "873": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP6",
      "path": "3"
    },
    "874": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "MUL",
      "path": "3"
    },
    "875": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP2",
      "path": "3"
    },
    "876": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "ADD",
      "path": "3"
    },
    "877": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP6",
      "path": "3"
    },
    "878": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "ADD",
      "path": "3"
    },
    "879": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "880": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "881": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "882": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP1",
      "path": "3"
    },
    "883": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP4",
      "path": "3"
    },
    "884": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "885": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3DC"
    },
    "888": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "889": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        472,
        488
      ],
      "op": "DUP10",
      "path": "3"
    },
    "890": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        472,
        488
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "891": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "892": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        502,
        535
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "893": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "894": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        424,
        437
      ],
      "op": "DUP7",
      "path": "3"
    },
    "895": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        424,
        437
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "896": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP5",
      "path": "3"
    },
    "897": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "ADD",
      "path": "3"
    },
    "898": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP3",
      "path": "3"
    },
    "899": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "900": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x187"
    },
    "903": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "904": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "906": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP5",
      "path": "3"
    },
    "907": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP2",
      "path": "3"
    },
    "908": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "909": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "911": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "912": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP2",
      "path": "3"
    },
    "913": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "914": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "915": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "917": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP1",
      "path": "3"
    },
    "918": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "919": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "921": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP2",
      "path": "3"
    },
    "922": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "ADD",
      "path": "3"
    },
    "923": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP3",
      "path": "3"
    },
    "924": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "925": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "927": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP7",
      "path": "3"
    },
    "928": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "MUL",
      "path": "3"
    },
    "929": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "930": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "931": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "ADD",
      "path": "3"
    },
    "932": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP1",
      "path": "3"
    },
    "933": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "934": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP4",
      "path": "3"
    },
    "935": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "936": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "938": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP1",
      "path": "3"
    },
    "939": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP3",
      "path": "3"
    },
    "940": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "ADD",
      "path": "3"
    },
    "941": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "942": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP5",
      "path": "3"
    },
    "943": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP7",
      "path": "3"
    },
    "944": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "ADD",
      "path": "3"
    },
    "945": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "946": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "948": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP3",
      "path": "3"
    },
    "949": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "ADD",
      "path": "3"
    },
    "950": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "957": {
      "op": "SHL"
    },
    "958": {
      "op": "SUB"
    },
    "959": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "AND",
      "path": "3"
    },
    "960": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "961": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP5",
      "path": "3"
    },
    "962": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "ADD",
      "path": "3"
    },
    "963": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "964": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "965": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "966": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "967": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "969": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "ADD",
      "path": "3"
    },
    "970": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "971": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "973": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP4",
      "path": "3"
    },
    "974": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "ADD",
      "path": "3"
    },
    "975": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "976": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "977": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "DUP4",
      "path": "3"
    },
    "978": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "979": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "980": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "981": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "ADD",
      "path": "3"
    },
    "982": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "983": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "ADD",
      "path": "3"
    },
    "984": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12A"
    },
    "987": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "JUMP",
      "path": "3"
    },
    "988": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        440,
        545
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "989": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        424,
        545
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "990": {
      "op": "POP"
    },
    "991": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        571,
        572
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "993": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        559,
        568
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3EB"
    },
    "996": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        567,
        568
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "998": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        424,
        545
      ],
      "op": "DUP4",
      "path": "3"
    },
    "999": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        559,
        568
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x846"
    },
    "1002": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        559,
        568
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1003": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        559,
        568
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1004": {
      "branch": 16,
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        559,
        572
      ],
      "op": "GT",
      "path": "3"
    },
    "1005": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        555,
        1221
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1006": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        555,
        1221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4FA"
    },
    "1009": {
      "branch": 16,
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        555,
        1221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1010": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        593,
        620
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 4,
      "value": "0xB7CDCED8C7C4E48FCB5E29E76371E78F62509FF97A6175D44F84AD36252008E4"
    },
    "1043": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        603,
        608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1045": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        593,
        620
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1047": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        593,
        620
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1048": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        593,
        620
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x444"
    },
    "1051": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        593,
        620
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1052": {
      "op": "ISZERO"
    },
    "1053": {
      "op": "ISZERO"
    },
    "1054": {
      "op": "DUP2"
    },
    "1055": {
      "op": "MSTORE"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1060": {
      "op": "DUP3"
    },
    "1061": {
      "op": "ADD"
    },
    "1062": {
      "op": "DUP2"
    },
    "1063": {
      "op": "SWAP1"
    },
    "1064": {
      "op": "MSTORE"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "1067": {
      "op": "SWAP1"
    },
    "1068": {
      "op": "DUP3"
    },
    "1069": {
      "op": "ADD"
    },
    "1070": {
      "op": "MSTORE"
    },
    "1071": {
      "op": "PUSH7",
      "value": "0x616C7265616479"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "1081": {
      "op": "SHL"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1084": {
      "op": "DUP3"
    },
    "1085": {
      "op": "ADD"
    },
    "1086": {
      "op": "MSTORE"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1089": {
      "op": "ADD"
    },
    "1090": {
      "op": "SWAP1"
    },
    "1091": {
      "op": "JUMP"
    },
    "1092": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        593,
        620
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1093": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        593,
        620
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1095": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        593,
        620
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1096": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        593,
        620
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1097": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        593,
        620
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1098": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        593,
        620
      ],
      "op": "SUB",
      "path": "3"
    },
    "1099": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        593,
        620
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1100": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        593,
        620
      ],
      "op": "LOG1",
      "path": "3"
    },
    "1101": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        717
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x0"
    },
    "1103": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        728
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1104": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        728
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1105": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        728
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1106": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1108": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        728
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1109": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        728
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1110": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        728
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1111": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        728
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1113": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        728
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1114": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        728
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1115": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        639,
        753
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xC2EF0555C48E0A7DADAC6F502772E4802BEC1D77257CF294FF123D5017AD98CF"
    },
    "1148": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        639,
        753
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1149": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        673,
        677
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1151": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        673,
        677
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1152": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        729,
        738
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x489"
    },
    "1155": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        673,
        677
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1156": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        729,
        734
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1157": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        729,
        738
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x846"
    },
    "1160": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        729,
        738
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1161": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        729,
        738
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1162": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        739
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1163": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        739
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1164": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        739
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1165": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        739
      ],
      "op": "LT",
      "path": "3"
    },
    "1166": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        739
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x499"
    },
    "1169": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        739
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1170": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        739
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x499"
    },
    "1173": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        739
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x88E"
    },
    "1176": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "i",
      "offset": [
        695,
        739
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1177": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        739
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1178": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        739
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1179": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        739
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1181": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        739
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1182": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        739
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1184": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        739
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1186": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        739
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1187": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        739
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1188": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        739
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1190": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        739
      ],
      "op": "MUL",
      "path": "3"
    },
    "1191": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        695,
        739
      ],
      "op": "ADD",
      "path": "3"
    },
    "1192": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        639,
        753
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1194": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        639,
        753
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1195": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        639,
        753
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E8"
    },
    "1198": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        639,
        753
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1199": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        639,
        753
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1200": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        639,
        753
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1201": {
      "op": "SWAP2"
    },
    "1202": {
      "op": "ISZERO"
    },
    "1203": {
      "op": "ISZERO"
    },
    "1204": {
      "op": "DUP3"
    },
    "1205": {
      "op": "MSTORE"
    },
    "1206": {
      "op": "DUP1"
    },
    "1207": {
      "op": "SLOAD"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1210": {
      "op": "DUP4"
    },
    "1211": {
      "op": "ADD"
    },
    "1212": {
      "op": "MSTORE"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1215": {
      "op": "DUP2"
    },
    "1216": {
      "op": "ADD"
    },
    "1217": {
      "op": "SLOAD"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1220": {
      "op": "DUP4"
    },
    "1221": {
      "op": "ADD"
    },
    "1222": {
      "op": "MSTORE"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1225": {
      "op": "DUP2"
    },
    "1226": {
      "op": "ADD"
    },
    "1227": {
      "op": "SLOAD"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1234": {
      "op": "SHL"
    },
    "1235": {
      "op": "SUB"
    },
    "1236": {
      "op": "AND"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1239": {
      "op": "DUP4"
    },
    "1240": {
      "op": "ADD"
    },
    "1241": {
      "op": "MSTORE"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "1244": {
      "op": "ADD"
    },
    "1245": {
      "op": "SLOAD"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1248": {
      "op": "DUP3"
    },
    "1249": {
      "op": "ADD"
    },
    "1250": {
      "op": "MSTORE"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1253": {
      "op": "ADD"
    },
    "1254": {
      "op": "SWAP1"
    },
    "1255": {
      "op": "JUMP"
    },
    "1256": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        639,
        753
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1257": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        639,
        753
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1259": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        639,
        753
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1260": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        639,
        753
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1261": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        639,
        753
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1262": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        639,
        753
      ],
      "op": "SUB",
      "path": "3"
    },
    "1263": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        639,
        753
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1264": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        639,
        753
      ],
      "op": "LOG1",
      "path": "3"
    },
    "1265": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        774,
        779
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 6,
      "value": "0x0"
    },
    "1267": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        767,
        779
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1268": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        767,
        779
      ],
      "op": "POP",
      "path": "3"
    },
    "1269": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        767,
        779
      ],
      "op": "POP",
      "path": "3"
    },
    "1270": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        767,
        779
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x60E"
    },
    "1273": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        767,
        779
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1274": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        555,
        1221
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1275": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        810,
        827
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1277": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        892
      ],
      "op": "DUP5",
      "path": "3",
      "statement": 7
    },
    "1278": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        892
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1279": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        892
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1280": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        892
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1282": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        892
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1283": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        892
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1284": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        892
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1285": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        892
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1287": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        892
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1288": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        892
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1289": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        892
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1290": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1291": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1292": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "1294": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1295": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "ADD",
      "path": "3"
    },
    "1296": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1297": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1298": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "DUP10",
      "path": "3"
    },
    "1299": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1300": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1301": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1302": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1303": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "ADD",
      "path": "3"
    },
    "1304": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1305": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1306": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1307": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1024,
        1034
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1308": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1309": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1310": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "ADD",
      "path": "3"
    },
    "1311": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1312": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1313": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1314": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        830,
        845
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "1315": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1317": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1318": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "ADD",
      "path": "3"
    },
    "1319": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1320": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1321": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        915,
        1083
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1322": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1323": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1324": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1326": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1327": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1328": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "ADD",
      "path": "3"
    },
    "1329": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1330": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1331": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "1332": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "DUP11",
      "path": "3"
    },
    "1333": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1334": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "1335": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1336": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP9",
      "path": "3"
    },
    "1337": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1338": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1339": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1340": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1342": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1343": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "1344": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "MUL",
      "path": "3"
    },
    "1345": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1346": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1347": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "ADD",
      "path": "3"
    },
    "1348": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1349": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1350": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1351": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1352": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1353": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1354": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1355": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "ADD",
      "path": "3"
    },
    "1356": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1357": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1358": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1360": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1361": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "ADD",
      "path": "3"
    },
    "1362": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1363": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1370": {
      "op": "SHL"
    },
    "1371": {
      "op": "SUB"
    },
    "1372": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1373": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1374": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1375": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "AND",
      "path": "3"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1382": {
      "op": "SHL"
    },
    "1383": {
      "op": "SUB"
    },
    "1384": {
      "op": "NOT"
    },
    "1385": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1386": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1387": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "AND",
      "path": "3"
    },
    "1388": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1389": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1390": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1391": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "OR",
      "path": "3"
    },
    "1392": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1393": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1394": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1395": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1396": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1398": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1399": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1400": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "ADD",
      "path": "3"
    },
    "1401": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1402": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1403": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1404": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        859,
        1097
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1405": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1116,
        1141
      ],
      "op": "MLOAD",
      "path": "3",
      "statement": 8
    },
    "1406": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1116,
        1141
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xB7CDCED8C7C4E48FCB5E29E76371E78F62509FF97A6175D44F84AD36252008E4"
    },
    "1439": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1116,
        1141
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1440": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1116,
        1141
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5CC"
    },
    "1443": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1116,
        1141
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1444": {
      "op": "SWAP1"
    },
    "1445": {
      "op": "ISZERO"
    },
    "1446": {
      "op": "ISZERO"
    },
    "1447": {
      "op": "DUP2"
    },
    "1448": {
      "op": "MSTORE"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1453": {
      "op": "DUP3"
    },
    "1454": {
      "op": "ADD"
    },
    "1455": {
      "op": "DUP2"
    },
    "1456": {
      "op": "SWAP1"
    },
    "1457": {
      "op": "MSTORE"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "1460": {
      "op": "SWAP1"
    },
    "1461": {
      "op": "DUP3"
    },
    "1462": {
      "op": "ADD"
    },
    "1463": {
      "op": "MSTORE"
    },
    "1464": {
      "op": "PUSH6",
      "value": "0x1CDD1BDC9959"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "1473": {
      "op": "SHL"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1476": {
      "op": "DUP3"
    },
    "1477": {
      "op": "ADD"
    },
    "1478": {
      "op": "MSTORE"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1481": {
      "op": "ADD"
    },
    "1482": {
      "op": "SWAP1"
    },
    "1483": {
      "op": "JUMP"
    },
    "1484": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1116,
        1141
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1485": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1116,
        1141
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1487": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1116,
        1141
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1488": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1116,
        1141
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1489": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1116,
        1141
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1490": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1116,
        1141
      ],
      "op": "SUB",
      "path": "3"
    },
    "1491": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1116,
        1141
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1492": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1116,
        1141
      ],
      "op": "LOG1",
      "path": "3"
    },
    "1493": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1160,
        1185
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x40"
    },
    "1495": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1160,
        1185
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1496": {
      "op": "DUP2"
    },
    "1497": {
      "op": "DUP2"
    },
    "1498": {
      "op": "MSTORE"
    },
    "1499": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1160,
        1185
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xB776F27E2626443CEE65F6C6F97999F4A5C737555723BDD3513A565406A61FED"
    },
    "1532": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1160,
        1185
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1535": {
      "op": "ADD"
    },
    "1536": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1160,
        1185
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1538": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1160,
        1185
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1539": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1160,
        1185
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1540": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1160,
        1185
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1541": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1160,
        1185
      ],
      "op": "SUB",
      "path": "3"
    },
    "1542": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1160,
        1185
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1543": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1160,
        1185
      ],
      "op": "LOG1",
      "path": "3"
    },
    "1544": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1206,
        1210
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 10,
      "value": "0x1"
    },
    "1546": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1199,
        1210
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1547": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1199,
        1210
      ],
      "op": "POP",
      "path": "3"
    },
    "1548": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1199,
        1210
      ],
      "op": "POP",
      "path": "3"
    },
    "1549": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        1199,
        1210
      ],
      "op": "POP",
      "path": "3"
    },
    "1550": {
      "offset": [
        1147,
        1148
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1551": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        246,
        1227
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1552": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        246,
        1227
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1553": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        246,
        1227
      ],
      "op": "POP",
      "path": "3"
    },
    "1554": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        246,
        1227
      ],
      "op": "POP",
      "path": "3"
    },
    "1555": {
      "fn": "CertificateHandler.registerCertificate",
      "offset": [
        246,
        1227
      ],
      "op": "POP",
      "path": "3"
    },
    "1556": {
      "fn": "CertificateHandler.registerCertificate",
      "jump": "o",
      "offset": [
        246,
        1227
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1557": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        532,
        980
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1558": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        668,
        675
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1560": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        668,
        675
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1561": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        686,
        876
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1562": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        710,
        728
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1563": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        710,
        735
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1564": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        706,
        707
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1565": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        706,
        735
      ],
      "op": "LT",
      "path": "4"
    },
    "1566": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        686,
        876
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1567": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        686,
        876
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x66C"
    },
    "1570": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        686,
        876
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1571": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        812,
        821
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1572": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        778
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1573": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        779,
        780
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1574": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1575": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1576": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1577": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "LT",
      "path": "4"
    },
    "1578": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x635"
    },
    "1581": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1582": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x635"
    },
    "1585": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x88E"
    },
    "1588": {
      "fn": "Helper.isCertificateExist",
      "jump": "i",
      "offset": [
        760,
        781
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1589": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1590": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1592": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "MUL",
      "path": "4"
    },
    "1593": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1595": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "ADD",
      "path": "4"
    },
    "1596": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "ADD",
      "path": "4"
    },
    "1597": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        781
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1598": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        808
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1600": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        808
      ],
      "op": "ADD",
      "path": "4"
    },
    "1601": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        808
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1602": {
      "branch": 17,
      "fn": "Helper.isCertificateExist",
      "offset": [
        760,
        821
      ],
      "op": "EQ",
      "path": "4"
    },
    "1603": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        756,
        866
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1604": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        756,
        866
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x65A"
    },
    "1607": {
      "branch": 17,
      "fn": "Helper.isCertificateExist",
      "offset": [
        756,
        866
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1608": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        848,
        851
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 11,
      "value": "0x652"
    },
    "1611": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        848,
        849
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1612": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        850,
        851
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1614": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        848,
        851
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x82E"
    },
    "1617": {
      "fn": "Helper.isCertificateExist",
      "jump": "i",
      "offset": [
        848,
        851
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1618": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        848,
        851
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1619": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        841,
        851
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1620": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        841,
        851
      ],
      "op": "POP",
      "path": "4"
    },
    "1621": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        841,
        851
      ],
      "op": "POP",
      "path": "4"
    },
    "1622": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        841,
        851
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x672"
    },
    "1625": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        841,
        851
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1626": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        756,
        866
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1627": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        737,
        740
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 12
    },
    "1628": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        737,
        740
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x664"
    },
    "1631": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        737,
        740
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1632": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        737,
        740
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x85D"
    },
    "1635": {
      "fn": "Helper.isCertificateExist",
      "jump": "i",
      "offset": [
        737,
        740
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1636": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        737,
        740
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1637": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        737,
        740
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1638": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        737,
        740
      ],
      "op": "POP",
      "path": "4"
    },
    "1639": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        737,
        740
      ],
      "op": "POP",
      "path": "4"
    },
    "1640": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        686,
        876
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x619"
    },
    "1643": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        686,
        876
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1644": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        686,
        876
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1645": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        686,
        876
      ],
      "op": "POP",
      "path": "4"
    },
    "1646": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        972,
        973
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 13,
      "value": "0x1"
    },
    "1648": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        965,
        973
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1649": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        965,
        973
      ],
      "op": "POP",
      "path": "4"
    },
    "1650": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        532,
        980
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1651": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        532,
        980
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1652": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        532,
        980
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1653": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        532,
        980
      ],
      "op": "POP",
      "path": "4"
    },
    "1654": {
      "fn": "Helper.isCertificateExist",
      "offset": [
        532,
        980
      ],
      "op": "POP",
      "path": "4"
    },
    "1655": {
      "fn": "Helper.isCertificateExist",
      "jump": "o",
      "offset": [
        532,
        980
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1656": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        908,
        1047
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1657": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        1004,
        1013
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 14,
      "value": "0x1"
    },
    "1659": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        1004,
        1013
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1660": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1662": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1663": {
      "op": "PUSH4",
      "value": "0x3AA3A015"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1670": {
      "op": "SHL"
    },
    "1671": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1672": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1679": {
      "op": "SHL"
    },
    "1680": {
      "op": "SUB"
    },
    "1681": {
      "op": "DUP4"
    },
    "1682": {
      "op": "DUP2"
    },
    "1683": {
      "op": "AND"
    },
    "1684": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1686": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1687": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "ADD",
      "path": "1"
    },
    "1688": {
      "op": "MSTORE"
    },
    "1689": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        969,
        973
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1691": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        969,
        973
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1692": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        1004,
        1013
      ],
      "op": "AND",
      "path": "1"
    },
    "1693": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        1004,
        1013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1694": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1031
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x7547402A"
    },
    "1699": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1031
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1702": {
      "op": "ADD"
    },
    "1703": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1705": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1707": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1708": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1709": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1710": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "SUB",
      "path": "1"
    },
    "1711": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1712": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1714": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1715": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1716": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "1717": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1718": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1719": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1720": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6C0"
    },
    "1723": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1724": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1726": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1727": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1728": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1729": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "POP",
      "path": "1"
    },
    "1730": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "GAS",
      "path": "1"
    },
    "1731": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "CALL",
      "path": "1"
    },
    "1732": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1733": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1734": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1735": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6D4"
    },
    "1738": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1739": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1740": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1742": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1743": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1744": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1745": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1747": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1748": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1749": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "POP",
      "path": "1"
    },
    "1750": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "POP",
      "path": "1"
    },
    "1751": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "POP",
      "path": "1"
    },
    "1752": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "POP",
      "path": "1"
    },
    "1753": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1755": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1756": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1757": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1759": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "NOT",
      "path": "1"
    },
    "1760": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1762": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1763": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "ADD",
      "path": "1"
    },
    "1764": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "AND",
      "path": "1"
    },
    "1765": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1766": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "ADD",
      "path": "1"
    },
    "1767": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1768": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1770": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1771": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "POP",
      "path": "1"
    },
    "1772": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1773": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "ADD",
      "path": "1"
    },
    "1774": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1775": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x672"
    },
    "1778": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1779": {
      "fn": "CertificateAuthorization.checkSignerIsIssuer",
      "offset": [
        993,
        1039
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1784": {
      "op": "DUP3"
    },
    "1785": {
      "op": "DUP5"
    },
    "1786": {
      "op": "SUB"
    },
    "1787": {
      "op": "SLT"
    },
    "1788": {
      "op": "ISZERO"
    },
    "1789": {
      "op": "PUSH2",
      "value": "0x705"
    },
    "1792": {
      "op": "JUMPI"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1795": {
      "op": "DUP1"
    },
    "1796": {
      "op": "REVERT"
    },
    "1797": {
      "op": "JUMPDEST"
    },
    "1798": {
      "op": "DUP2"
    },
    "1799": {
      "op": "MLOAD"
    },
    "1800": {
      "op": "DUP1"
    },
    "1801": {
      "op": "ISZERO"
    },
    "1802": {
      "op": "ISZERO"
    },
    "1803": {
      "op": "DUP2"
    },
    "1804": {
      "op": "EQ"
    },
    "1805": {
      "op": "PUSH2",
      "value": "0x60E"
    },
    "1808": {
      "op": "JUMPI"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1811": {
      "op": "DUP1"
    },
    "1812": {
      "op": "REVERT"
    },
    "1813": {
      "op": "JUMPDEST"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1818": {
      "op": "DUP3"
    },
    "1819": {
      "op": "DUP5"
    },
    "1820": {
      "op": "SUB"
    },
    "1821": {
      "op": "SLT"
    },
    "1822": {
      "op": "ISZERO"
    },
    "1823": {
      "op": "PUSH2",
      "value": "0x727"
    },
    "1826": {
      "op": "JUMPI"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1829": {
      "op": "DUP1"
    },
    "1830": {
      "op": "REVERT"
    },
    "1831": {
      "op": "JUMPDEST"
    },
    "1832": {
      "op": "POP"
    },
    "1833": {
      "op": "CALLDATALOAD"
    },
    "1834": {
      "op": "SWAP2"
    },
    "1835": {
      "op": "SWAP1"
    },
    "1836": {
      "op": "POP"
    },
    "1837": {
      "jump": "o",
      "op": "JUMP"
    },
    "1838": {
      "op": "JUMPDEST"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1841": {
      "op": "DUP1"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1844": {
      "op": "DUP4"
    },
    "1845": {
      "op": "DUP6"
    },
    "1846": {
      "op": "SUB"
    },
    "1847": {
      "op": "SLT"
    },
    "1848": {
      "op": "ISZERO"
    },
    "1849": {
      "op": "PUSH2",
      "value": "0x741"
    },
    "1852": {
      "op": "JUMPI"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1855": {
      "op": "DUP1"
    },
    "1856": {
      "op": "REVERT"
    },
    "1857": {
      "op": "JUMPDEST"
    },
    "1858": {
      "op": "POP"
    },
    "1859": {
      "op": "POP"
    },
    "1860": {
      "op": "DUP1"
    },
    "1861": {
      "op": "CALLDATALOAD"
    },
    "1862": {
      "op": "SWAP3"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1865": {
      "op": "SWAP1"
    },
    "1866": {
      "op": "SWAP2"
    },
    "1867": {
      "op": "ADD"
    },
    "1868": {
      "op": "CALLDATALOAD"
    },
    "1869": {
      "op": "SWAP2"
    },
    "1870": {
      "op": "POP"
    },
    "1871": {
      "jump": "o",
      "op": "JUMP"
    },
    "1872": {
      "op": "JUMPDEST"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1875": {
      "op": "DUP1"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1880": {
      "op": "DUP5"
    },
    "1881": {
      "op": "DUP7"
    },
    "1882": {
      "op": "SUB"
    },
    "1883": {
      "op": "SLT"
    },
    "1884": {
      "op": "ISZERO"
    },
    "1885": {
      "op": "PUSH2",
      "value": "0x765"
    },
    "1888": {
      "op": "JUMPI"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1891": {
      "op": "DUP1"
    },
    "1892": {
      "op": "REVERT"
    },
    "1893": {
      "op": "JUMPDEST"
    },
    "1894": {
      "op": "POP"
    },
    "1895": {
      "op": "POP"
    },
    "1896": {
      "op": "DUP2"
    },
    "1897": {
      "op": "CALLDATALOAD"
    },
    "1898": {
      "op": "SWAP4"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1901": {
      "op": "DUP4"
    },
    "1902": {
      "op": "ADD"
    },
    "1903": {
      "op": "CALLDATALOAD"
    },
    "1904": {
      "op": "SWAP4"
    },
    "1905": {
      "op": "POP"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1908": {
      "op": "SWAP1"
    },
    "1909": {
      "op": "SWAP3"
    },
    "1910": {
      "op": "ADD"
    },
    "1911": {
      "op": "CALLDATALOAD"
    },
    "1912": {
      "op": "SWAP2"
    },
    "1913": {
      "op": "SWAP1"
    },
    "1914": {
      "op": "POP"
    },
    "1915": {
      "jump": "o",
      "op": "JUMP"
    },
    "1916": {
      "op": "JUMPDEST"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1919": {
      "op": "DUP1"
    },
    "1920": {
      "op": "DUP3"
    },
    "1921": {
      "op": "MSTORE"
    },
    "1922": {
      "op": "DUP3"
    },
    "1923": {
      "op": "MLOAD"
    },
    "1924": {
      "op": "DUP3"
    },
    "1925": {
      "op": "DUP3"
    },
    "1926": {
      "op": "ADD"
    },
    "1927": {
      "op": "DUP2"
    },
    "1928": {
      "op": "SWAP1"
    },
    "1929": {
      "op": "MSTORE"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1932": {
      "op": "SWAP2"
    },
    "1933": {
      "op": "SWAP1"
    },
    "1934": {
      "op": "DUP5"
    },
    "1935": {
      "op": "DUP3"
    },
    "1936": {
      "op": "ADD"
    },
    "1937": {
      "op": "SWAP1"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1940": {
      "op": "DUP6"
    },
    "1941": {
      "op": "ADD"
    },
    "1942": {
      "op": "SWAP1"
    },
    "1943": {
      "op": "DUP5"
    },
    "1944": {
      "op": "JUMPDEST"
    },
    "1945": {
      "op": "DUP2"
    },
    "1946": {
      "op": "DUP2"
    },
    "1947": {
      "op": "LT"
    },
    "1948": {
      "op": "ISZERO"
    },
    "1949": {
      "op": "PUSH2",
      "value": "0x7E5"
    },
    "1952": {
      "op": "JUMPI"
    },
    "1953": {
      "op": "PUSH2",
      "value": "0x7D2"
    },
    "1956": {
      "op": "DUP4"
    },
    "1957": {
      "op": "DUP6"
    },
    "1958": {
      "op": "MLOAD"
    },
    "1959": {
      "op": "DUP1"
    },
    "1960": {
      "op": "MLOAD"
    },
    "1961": {
      "op": "DUP3"
    },
    "1962": {
      "op": "MSTORE"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1965": {
      "op": "DUP1"
    },
    "1966": {
      "op": "DUP3"
    },
    "1967": {
      "op": "ADD"
    },
    "1968": {
      "op": "MLOAD"
    },
    "1969": {
      "op": "SWAP1"
    },
    "1970": {
      "op": "DUP4"
    },
    "1971": {
      "op": "ADD"
    },
    "1972": {
      "op": "MSTORE"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1975": {
      "op": "DUP1"
    },
    "1976": {
      "op": "DUP3"
    },
    "1977": {
      "op": "ADD"
    },
    "1978": {
      "op": "MLOAD"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1985": {
      "op": "SHL"
    },
    "1986": {
      "op": "SUB"
    },
    "1987": {
      "op": "AND"
    },
    "1988": {
      "op": "SWAP1"
    },
    "1989": {
      "op": "DUP4"
    },
    "1990": {
      "op": "ADD"
    },
    "1991": {
      "op": "MSTORE"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1994": {
      "op": "SWAP1"
    },
    "1995": {
      "op": "DUP2"
    },
    "1996": {
      "op": "ADD"
    },
    "1997": {
      "op": "MLOAD"
    },
    "1998": {
      "op": "SWAP2"
    },
    "1999": {
      "op": "ADD"
    },
    "2000": {
      "op": "MSTORE"
    },
    "2001": {
      "op": "JUMP"
    },
    "2002": {
      "op": "JUMPDEST"
    },
    "2003": {
      "op": "SWAP3"
    },
    "2004": {
      "op": "DUP5"
    },
    "2005": {
      "op": "ADD"
    },
    "2006": {
      "op": "SWAP3"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2009": {
      "op": "SWAP3"
    },
    "2010": {
      "op": "SWAP1"
    },
    "2011": {
      "op": "SWAP3"
    },
    "2012": {
      "op": "ADD"
    },
    "2013": {
      "op": "SWAP2"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2016": {
      "op": "ADD"
    },
    "2017": {
      "op": "PUSH2",
      "value": "0x798"
    },
    "2020": {
      "op": "JUMP"
    },
    "2021": {
      "op": "JUMPDEST"
    },
    "2022": {
      "op": "POP"
    },
    "2023": {
      "op": "SWAP1"
    },
    "2024": {
      "op": "SWAP7"
    },
    "2025": {
      "op": "SWAP6"
    },
    "2026": {
      "op": "POP"
    },
    "2027": {
      "op": "POP"
    },
    "2028": {
      "op": "POP"
    },
    "2029": {
      "op": "POP"
    },
    "2030": {
      "op": "POP"
    },
    "2031": {
      "op": "POP"
    },
    "2032": {
      "jump": "o",
      "op": "JUMP"
    },
    "2033": {
      "op": "JUMPDEST"
    },
    "2034": {
      "op": "DUP3"
    },
    "2035": {
      "op": "ISZERO"
    },
    "2036": {
      "op": "ISZERO"
    },
    "2037": {
      "op": "DUP2"
    },
    "2038": {
      "op": "MSTORE"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2041": {
      "op": "DUP2"
    },
    "2042": {
      "op": "ADD"
    },
    "2043": {
      "op": "PUSH2",
      "value": "0x60E"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2048": {
      "op": "DUP4"
    },
    "2049": {
      "op": "ADD"
    },
    "2050": {
      "op": "DUP5"
    },
    "2051": {
      "op": "DUP1"
    },
    "2052": {
      "op": "MLOAD"
    },
    "2053": {
      "op": "DUP3"
    },
    "2054": {
      "op": "MSTORE"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2057": {
      "op": "DUP1"
    },
    "2058": {
      "op": "DUP3"
    },
    "2059": {
      "op": "ADD"
    },
    "2060": {
      "op": "MLOAD"
    },
    "2061": {
      "op": "SWAP1"
    },
    "2062": {
      "op": "DUP4"
    },
    "2063": {
      "op": "ADD"
    },
    "2064": {
      "op": "MSTORE"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2067": {
      "op": "DUP1"
    },
    "2068": {
      "op": "DUP3"
    },
    "2069": {
      "op": "ADD"
    },
    "2070": {
      "op": "MLOAD"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2077": {
      "op": "SHL"
    },
    "2078": {
      "op": "SUB"
    },
    "2079": {
      "op": "AND"
    },
    "2080": {
      "op": "SWAP1"
    },
    "2081": {
      "op": "DUP4"
    },
    "2082": {
      "op": "ADD"
    },
    "2083": {
      "op": "MSTORE"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2086": {
      "op": "SWAP1"
    },
    "2087": {
      "op": "DUP2"
    },
    "2088": {
      "op": "ADD"
    },
    "2089": {
      "op": "MLOAD"
    },
    "2090": {
      "op": "SWAP2"
    },
    "2091": {
      "op": "ADD"
    },
    "2092": {
      "op": "MSTORE"
    },
    "2093": {
      "op": "JUMP"
    },
    "2094": {
      "op": "JUMPDEST"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2097": {
      "op": "DUP3"
    },
    "2098": {
      "op": "NOT"
    },
    "2099": {
      "op": "DUP3"
    },
    "2100": {
      "op": "GT"
    },
    "2101": {
      "op": "ISZERO"
    },
    "2102": {
      "op": "PUSH2",
      "value": "0x841"
    },
    "2105": {
      "op": "JUMPI"
    },
    "2106": {
      "op": "PUSH2",
      "value": "0x841"
    },
    "2109": {
      "op": "PUSH2",
      "value": "0x878"
    },
    "2112": {
      "jump": "i",
      "op": "JUMP"
    },
    "2113": {
      "op": "JUMPDEST"
    },
    "2114": {
      "op": "POP"
    },
    "2115": {
      "op": "ADD"
    },
    "2116": {
      "op": "SWAP1"
    },
    "2117": {
      "jump": "o",
      "op": "JUMP"
    },
    "2118": {
      "op": "JUMPDEST"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2121": {
      "op": "DUP3"
    },
    "2122": {
      "op": "DUP3"
    },
    "2123": {
      "op": "LT"
    },
    "2124": {
      "op": "ISZERO"
    },
    "2125": {
      "op": "PUSH2",
      "value": "0x858"
    },
    "2128": {
      "op": "JUMPI"
    },
    "2129": {
      "op": "PUSH2",
      "value": "0x858"
    },
    "2132": {
      "op": "PUSH2",
      "value": "0x878"
    },
    "2135": {
      "jump": "i",
      "op": "JUMP"
    },
    "2136": {
      "op": "JUMPDEST"
    },
    "2137": {
      "op": "POP"
    },
    "2138": {
      "op": "SUB"
    },
    "2139": {
      "op": "SWAP1"
    },
    "2140": {
      "jump": "o",
      "op": "JUMP"
    },
    "2141": {
      "op": "JUMPDEST"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2146": {
      "op": "NOT"
    },
    "2147": {
      "op": "DUP3"
    },
    "2148": {
      "op": "EQ"
    },
    "2149": {
      "op": "ISZERO"
    },
    "2150": {
      "op": "PUSH2",
      "value": "0x871"
    },
    "2153": {
      "op": "JUMPI"
    },
    "2154": {
      "op": "PUSH2",
      "value": "0x871"
    },
    "2157": {
      "op": "PUSH2",
      "value": "0x878"
    },
    "2160": {
      "jump": "i",
      "op": "JUMP"
    },
    "2161": {
      "op": "JUMPDEST"
    },
    "2162": {
      "op": "POP"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2165": {
      "op": "ADD"
    },
    "2166": {
      "op": "SWAP1"
    },
    "2167": {
      "jump": "o",
      "op": "JUMP"
    },
    "2168": {
      "op": "JUMPDEST"
    },
    "2169": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2176": {
      "op": "SHL"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2179": {
      "op": "MSTORE"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2184": {
      "op": "MSTORE"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2189": {
      "op": "REVERT"
    },
    "2190": {
      "op": "JUMPDEST"
    },
    "2191": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2198": {
      "op": "SHL"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2201": {
      "op": "MSTORE"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2206": {
      "op": "MSTORE"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2211": {
      "op": "REVERT"
    }
  },
  "sha1": "24e89e4649515129b7038aaed44801cdb706591e",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"./CertificateAuthorization.sol\";\n\ncontract CertificateHandler is CertificateAuthorization {\n    constructor(address registrySC) CertificateAuthorization(registrySC) {}\n\n    function registerCertificate(\n        bytes32 certificate_hash,\n        bytes32 holder_id,\n        bytes32 data_address\n    ) public grantAccess returns (bool success) {\n        uint256 index = isCertificateExist(\n            certificate_hash,\n            holder_to_certificates[holder_id]\n        );\n        if (index - 1 > 0) {\n            emit IsSuccess(false, \"already\");\n            emit certificateExist(\n                true,\n                holder_to_certificates[holder_id][index - 1]\n            );\n            return false;\n        } else {\n            uint256 timestamp = block.timestamp;\n            holder_to_certificates[holder_id].push(\n                COV_CERTIFICATE(\n                    certificate_hash,\n                    data_address,\n                    msg.sender,\n                    timestamp\n                )\n            );\n            emit IsSuccess(true, \"stored\");\n            emit timestampEvent(timestamp);\n            return true;\n        }\n    }\n\n    function verifyCertificate(bytes32 certificate_hash, bytes32 holder_id)\n        public\n        view\n        returns (bool, COV_CERTIFICATE memory)\n    {\n        uint256 index = isCertificateExist(\n            certificate_hash,\n            holder_to_certificates[holder_id]\n        );\n        if (index - 1 > 0) {\n            return (true, holder_to_certificates[holder_id][index - 1]);\n        }\n        return (false, holder_to_certificates[holder_id][index - 1]);\n    }\n\n    function getCertificatesByUser(bytes32 holder_id)\n        public\n        view\n        returns (COV_CERTIFICATE[] memory certificate_data)\n    {\n        return holder_to_certificates[holder_id];\n    }\n}\n",
  "sourceMap": "107:1804:3:-:0;;;169:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;615:5:1;:27;;-1:-1:-1;;;;;;615:27:1;;;631:10;615:27;;;;;653:23;;-1:-1:-1;;;;;653:23:1;;;;;;;;;;;;;107:1804:3;;14:290:5;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;:::-;107:1804:3;;;;;;",
  "sourcePath": "contracts/Certificate/Handler.sol",
  "type": "contract"
}