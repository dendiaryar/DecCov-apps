{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "DebugVerifyIssuer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hashData",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        }
      ],
      "name": "IsSuccess",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "registerAuthorizeUser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_hashData",
          "type": "bytes32"
        }
      ],
      "name": "registerIssuer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "verifyIssuer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "6": "contracts/Registry/IssuerData.sol",
    "8": "contracts/Registry/RegistryAuthorization.sol"
  },
  "ast": {
    "absolutePath": "contracts/Registry/IssuerData.sol",
    "exportedSymbols": {
      "Issuer": [
        472
      ],
      "RegistryAuthorization": [
        562
      ]
    },
    "id": 473,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 414,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:6"
      },
      {
        "absolutePath": "contracts/Registry/RegistryAuthorization.sol",
        "file": "./RegistryAuthorization.sol",
        "id": 415,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 473,
        "sourceUnit": 563,
        "src": "66:37:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 416,
              "name": "RegistryAuthorization",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 562,
              "src": "191:21:6"
            },
            "id": 417,
            "nodeType": "InheritanceSpecifier",
            "src": "191:21:6"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 472,
        "linearizedBaseContracts": [
          472,
          562
        ],
        "name": "Issuer",
        "nameLocation": "181:6:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 425,
            "name": "IsSuccess",
            "nameLocation": "226:9:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 419,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "250:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "245:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "245:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 421,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hashData",
                  "nameLocation": "273:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "265:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "265:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 423,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "issuer",
                  "nameLocation": "299:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "291:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "291:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "235:80:6"
            },
            "src": "220:96:6"
          },
          {
            "body": {
              "id": 450,
              "nodeType": "Block",
              "src": "428:118:6",
              "statements": [
                {
                  "expression": {
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 436,
                        "name": "issuerMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 490,
                        "src": "438:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 438,
                      "indexExpression": {
                        "id": 437,
                        "name": "issuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "452:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "438:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 439,
                      "name": "_hashData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 429,
                      "src": "462:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "438:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "438:33:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "496:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "id": 444,
                        "name": "_hashData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "501:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 445,
                        "name": "issuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "511:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 442,
                      "name": "IsSuccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 425,
                      "src": "486:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bool,bytes32,address)"
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "486:32:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 447,
                  "nodeType": "EmitStatement",
                  "src": "481:37:6"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "535:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 435,
                  "id": 449,
                  "nodeType": "Return",
                  "src": "528:11:6"
                }
              ]
            },
            "functionSelector": "92067121",
            "id": 451,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 432,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 431,
                  "name": "grantAccess",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 518,
                  "src": "386:11:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "386:11:6"
              }
            ],
            "name": "registerIssuer",
            "nameLocation": "335:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 427,
                  "mutability": "mutable",
                  "name": "issuer",
                  "nameLocation": "359:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "351:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "_hashData",
                  "nameLocation": "375:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "367:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "367:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "350:35:6"
            },
            "returnParameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "418:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "413:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "413:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "412:14:6"
            },
            "scope": 472,
            "src": "326:220:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 457,
            "name": "DebugVerifyIssuer",
            "nameLocation": "586:17:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 453,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "621:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "613:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 455,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "644:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "639:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "639:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "603:53:6"
            },
            "src": "580:77:6"
          },
          {
            "body": {
              "id": 470,
              "nodeType": "Block",
              "src": "729:49:6",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 464,
                        "name": "issuerMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 490,
                        "src": "746:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 466,
                      "indexExpression": {
                        "id": 465,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 459,
                        "src": "760:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "746:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "770:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "746:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 463,
                  "id": 469,
                  "nodeType": "Return",
                  "src": "739:32:6"
                }
              ]
            },
            "functionSelector": "60c000d4",
            "id": 471,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyIssuer",
            "nameLocation": "672:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "694:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "686:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "685:18:6"
            },
            "returnParameters": {
              "id": 463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 462,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "724:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 461,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "723:6:6"
            },
            "scope": 472,
            "src": "663:115:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 473,
        "src": "172:609:6",
        "usedErrors": []
      }
    ],
    "src": "32:751:6"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561029c806100326000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806360c000d4146100515780636210d360146100915780638da5cb5b146100a457806392067121146100cf575b600080fd5b61007c61005f36600461021a565b6001600160a01b0316600090815260026020526040902054151590565b60405190151581526020015b60405180910390f35b61007c61009f36600461021a565b6100e2565b6000546100b7906001600160a01b031681565b6040516001600160a01b039091168152602001610088565b61007c6100dd36600461023c565b61016b565b600080546001600160a01b031633148061010b57503360009081526001602052604090205460ff165b61011457600080fd5b6001600160a01b03821660009081526001602081905260409091205460ff1615151461016257506001600160a01b03166000908152600160208190526040909120805460ff19168217905590565b5060005b919050565b600080546001600160a01b031633148061019457503360009081526001602052604090205460ff165b61019d57600080fd5b6001600160a01b03831660008181526002602090815260409182902085905581516001815290810185905280820192909252517f7a0f50b566ab4225b0f298a229bcf96d4ba86d1c6c43d48ad0f0f6d96f68413d9181900360600190a150600192915050565b80356001600160a01b038116811461016657600080fd5b60006020828403121561022c57600080fd5b61023582610203565b9392505050565b6000806040838503121561024f57600080fd5b61025883610203565b94602093909301359350505056fea26469706673582212204a9648499caacf47874b8ca5035b329c9a63ef418969734e20d232b5c798335d64736f6c63430008070033",
  "bytecodeSha1": "fb0d10465175e8b5d096493cf9899ab0f0f04bab",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "Issuer",
  "coverageMap": {
    "branches": {
      "6": {},
      "8": {
        "Issuer.registerIssuer": {
          "6": [
            537,
            556,
            true
          ],
          "7": [
            560,
            586,
            true
          ]
        }
      }
    },
    "statements": {
      "6": {
        "Issuer.registerIssuer": {
          "3": [
            438,
            471
          ],
          "4": [
            481,
            518
          ],
          "5": [
            528,
            539
          ]
        },
        "Issuer.verifyIssuer": {
          "0": [
            739,
            771
          ]
        }
      },
      "8": {
        "RegistryAuthorization.registerAuthorizeUser": {
          "1": [
            899,
            930
          ],
          "2": [
            984,
            996
          ]
        }
      }
    }
  },
  "dependencies": [
    "RegistryAuthorization"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806360c000d4146100515780636210d360146100915780638da5cb5b146100a457806392067121146100cf575b600080fd5b61007c61005f36600461021a565b6001600160a01b0316600090815260026020526040902054151590565b60405190151581526020015b60405180910390f35b61007c61009f36600461021a565b6100e2565b6000546100b7906001600160a01b031681565b6040516001600160a01b039091168152602001610088565b61007c6100dd36600461023c565b61016b565b600080546001600160a01b031633148061010b57503360009081526001602052604090205460ff165b61011457600080fd5b6001600160a01b03821660009081526001602081905260409091205460ff1615151461016257506001600160a01b03166000908152600160208190526040909120805460ff19168217905590565b5060005b919050565b600080546001600160a01b031633148061019457503360009081526001602052604090205460ff165b61019d57600080fd5b6001600160a01b03831660008181526002602090815260409182902085905581516001815290810185905280820192909252517f7a0f50b566ab4225b0f298a229bcf96d4ba86d1c6c43d48ad0f0f6d96f68413d9181900360600190a150600192915050565b80356001600160a01b038116811461016657600080fd5b60006020828403121561022c57600080fd5b61023582610203565b9392505050565b6000806040838503121561024f57600080fd5b61025883610203565b94602093909301359350505056fea26469706673582212204a9648499caacf47874b8ca5035b329c9a63ef418969734e20d232b5c798335d64736f6c63430008070033",
  "deployedSourceMap": "172:609:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;663:115;;;;;;:::i;:::-;-1:-1:-1;;;;;746:23:6;724:4;746:23;;;:13;:23;;;;;;:25;;;663:115;;;;1031:14:9;;1024:22;1006:41;;994:2;979:18;663:115:6;;;;;;;;748:265:8;;;;;;:::i;:::-;;:::i;173:28::-;;;;;-1:-1:-1;;;;;173:28:8;;;;;;-1:-1:-1;;;;;822:32:9;;;804:51;;792:2;777:18;173:28:8;642:219:9;326:220:6;;;;;;:::i;:::-;;:::i;748:265:8:-;824:12;551:5;;-1:-1:-1;;;;;551:5:8;537:10;:19;;:49;;-1:-1:-1;575:10:8;560:26;;;;:14;:26;;;;;;;;537:49;529:58;;;;;;-1:-1:-1;;;;;853:24:8;::::1;;::::0;;;:14:::1;:24;::::0;;;;;;;;::::1;;:30;;;848:159;;-1:-1:-1::0;;;;;;899:24:8::1;;::::0;;;926:4:::1;899:24;::::0;;;;;;;:31;;-1:-1:-1;;899:31:8::1;::::0;::::1;::::0;;926:4;748:265::o;848:159::-:1;-1:-1:-1::0;991:5:8::1;848:159;748:265:::0;;;:::o;326:220:6:-;413:12;551:5:8;;-1:-1:-1;;;;;551:5:8;537:10;:19;;:49;;-1:-1:-1;575:10:8;560:26;;;;:14;:26;;;;;;;;537:49;529:58;;;;;;-1:-1:-1;;;;;438:21:6;::::1;;::::0;;;:13:::1;:21;::::0;;;;;;;;:33;;;486:32;;496:4:::1;1254:41:9::0;;1311:18;;;1304:34;;;1354:18;;;1347:60;;;;486:32:6;::::1;::::0;;;;1242:2:9;486:32:6;;::::1;-1:-1:-1::0;535:4:6::1;326:220:::0;;;;:::o;14:173:9:-;82:20;;-1:-1:-1;;;;;131:31:9;;121:42;;111:70;;177:1;174;167:12;192:186;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:9:o;383:254::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;627:2;612:18;;;;599:32;;-1:-1:-1;;;383:254:9:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    172,
    781
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60C000D4 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x6210D360 EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x92067121 EQ PUSH2 0xCF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x21A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7C PUSH2 0x9F CALLDATASIZE PUSH1 0x4 PUSH2 0x21A JUMP JUMPDEST PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xB7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x88 JUMP JUMPDEST PUSH2 0x7C PUSH2 0xDD CALLDATASIZE PUSH1 0x4 PUSH2 0x23C JUMP JUMPDEST PUSH2 0x16B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x10B JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x162 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 OR SWAP1 SSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x194 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD PUSH1 0x1 DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH32 0x7A0F50B566AB4225B0F298A229BCF96D4BA86D1C6C43D48AD0F0F6D96F68413D SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x235 DUP3 PUSH2 0x203 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x258 DUP4 PUSH2 0x203 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP7 BASEFEE 0x49 SWAP13 0xAA 0xCF SELFBALANCE DUP8 0x4B DUP13 0xA5 SUB JUMPDEST ORIGIN SWAP13 SWAP11 PUSH4 0xEF418969 PUSH20 0x4E20D232B5C798335D64736F6C63430008070033 ",
  "pcMap": {
    "0": {
      "offset": [
        172,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x60C000D4"
    },
    "38": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "EQ",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6210D360"
    },
    "49": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "EQ",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x91"
    },
    "53": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA4"
    },
    "64": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x92067121"
    },
    "71": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCF"
    },
    "75": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "DUP1",
      "path": "6"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        172,
        781
      ],
      "op": "REVERT",
      "path": "6"
    },
    "81": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        663,
        778
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "82": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        663,
        778
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C"
    },
    "85": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        663,
        778
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5F"
    },
    "88": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        663,
        778
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "89": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        663,
        778
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "91": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        663,
        778
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21A"
    },
    "94": {
      "fn": "Issuer.verifyIssuer",
      "jump": "i",
      "offset": [
        663,
        778
      ],
      "op": "JUMP",
      "path": "6"
    },
    "95": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        663,
        778
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "96": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "98": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "100": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "102": {
      "op": "SHL"
    },
    "103": {
      "op": "SUB"
    },
    "104": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        746,
        769
      ],
      "op": "AND",
      "path": "6",
      "statement": 0
    },
    "105": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        724,
        728
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "107": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        746,
        769
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "108": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        746,
        769
      ],
      "op": "DUP2",
      "path": "6"
    },
    "109": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        746,
        769
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "110": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        746,
        759
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "112": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        746,
        769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "114": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        746,
        769
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "115": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        746,
        769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "117": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        746,
        769
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "118": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        746,
        769
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "119": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        746,
        769
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "120": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        746,
        771
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "121": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        746,
        771
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "122": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        746,
        771
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "123": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        663,
        778
      ],
      "op": "JUMP",
      "path": "6"
    },
    "124": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        663,
        778
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "125": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        663,
        778
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "127": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        663,
        778
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "128": {
      "op": "SWAP1"
    },
    "129": {
      "op": "ISZERO"
    },
    "130": {
      "op": "ISZERO"
    },
    "131": {
      "op": "DUP2"
    },
    "132": {
      "op": "MSTORE"
    },
    "133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "135": {
      "op": "ADD"
    },
    "136": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        663,
        778
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "137": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        663,
        778
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "139": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        663,
        778
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "140": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        663,
        778
      ],
      "op": "DUP1",
      "path": "6"
    },
    "141": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        663,
        778
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "142": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        663,
        778
      ],
      "op": "SUB",
      "path": "6"
    },
    "143": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        663,
        778
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "144": {
      "fn": "Issuer.verifyIssuer",
      "offset": [
        663,
        778
      ],
      "op": "RETURN",
      "path": "6"
    },
    "145": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        748,
        1013
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "146": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        748,
        1013
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7C"
    },
    "149": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        748,
        1013
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9F"
    },
    "152": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        748,
        1013
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "153": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        748,
        1013
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "155": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        748,
        1013
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x21A"
    },
    "158": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "jump": "i",
      "offset": [
        748,
        1013
      ],
      "op": "JUMP",
      "path": "8"
    },
    "159": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        748,
        1013
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "160": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        748,
        1013
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE2"
    },
    "163": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "jump": "i",
      "offset": [
        748,
        1013
      ],
      "op": "JUMP",
      "path": "8"
    },
    "164": {
      "offset": [
        173,
        201
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "165": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        173,
        201
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "167": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        173,
        201
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "168": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        173,
        201
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB7"
    },
    "171": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        173,
        201
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "178": {
      "op": "SHL"
    },
    "179": {
      "op": "SUB"
    },
    "180": {
      "offset": [
        173,
        201
      ],
      "op": "AND",
      "path": "8"
    },
    "181": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        173,
        201
      ],
      "op": "DUP2",
      "path": "8"
    },
    "182": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        173,
        201
      ],
      "op": "JUMP",
      "path": "8"
    },
    "183": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        173,
        201
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "184": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        173,
        201
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "186": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        173,
        201
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "193": {
      "op": "SHL"
    },
    "194": {
      "op": "SUB"
    },
    "195": {
      "op": "SWAP1"
    },
    "196": {
      "op": "SWAP2"
    },
    "197": {
      "op": "AND"
    },
    "198": {
      "op": "DUP2"
    },
    "199": {
      "op": "MSTORE"
    },
    "200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "202": {
      "op": "ADD"
    },
    "203": {
      "offset": [
        173,
        201
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x88"
    },
    "206": {
      "op": "JUMP"
    },
    "207": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        326,
        546
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "208": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        326,
        546
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C"
    },
    "211": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        326,
        546
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDD"
    },
    "214": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        326,
        546
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "215": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        326,
        546
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "217": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        326,
        546
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23C"
    },
    "220": {
      "fn": "Issuer.registerIssuer",
      "jump": "i",
      "offset": [
        326,
        546
      ],
      "op": "JUMP",
      "path": "6"
    },
    "221": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        326,
        546
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "222": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        326,
        546
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16B"
    },
    "225": {
      "fn": "Issuer.registerIssuer",
      "jump": "i",
      "offset": [
        326,
        546
      ],
      "op": "JUMP",
      "path": "6"
    },
    "226": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        748,
        1013
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "227": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        824,
        836
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "229": {
      "offset": [
        551,
        556
      ],
      "op": "DUP1",
      "path": "8"
    },
    "230": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        551,
        556
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "237": {
      "op": "SHL"
    },
    "238": {
      "op": "SUB"
    },
    "239": {
      "offset": [
        551,
        556
      ],
      "op": "AND",
      "path": "8"
    },
    "240": {
      "offset": [
        537,
        547
      ],
      "op": "CALLER",
      "path": "8"
    },
    "241": {
      "offset": [
        537,
        556
      ],
      "op": "EQ",
      "path": "8"
    },
    "242": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        537,
        556
      ],
      "op": "DUP1",
      "path": "8"
    },
    "243": {
      "offset": [
        537,
        586
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10B"
    },
    "246": {
      "offset": [
        537,
        586
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "247": {
      "op": "POP"
    },
    "248": {
      "offset": [
        575,
        585
      ],
      "op": "CALLER",
      "path": "8"
    },
    "249": {
      "offset": [
        560,
        586
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "251": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        560,
        586
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "252": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        560,
        586
      ],
      "op": "DUP2",
      "path": "8"
    },
    "253": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        560,
        586
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "254": {
      "offset": [
        560,
        574
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "256": {
      "offset": [
        560,
        586
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "258": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        560,
        586
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "259": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        560,
        586
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "261": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        560,
        586
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "262": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        560,
        586
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "263": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        560,
        586
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "264": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        560,
        586
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "266": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        560,
        586
      ],
      "op": "AND",
      "path": "8"
    },
    "267": {
      "offset": [
        537,
        586
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "268": {
      "offset": [
        529,
        587
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x114"
    },
    "271": {
      "offset": [
        529,
        587
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "272": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        529,
        587
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "274": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        529,
        587
      ],
      "op": "DUP1",
      "path": "8"
    },
    "275": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        529,
        587
      ],
      "op": "REVERT",
      "path": "8"
    },
    "276": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        529,
        587
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "283": {
      "op": "SHL"
    },
    "284": {
      "op": "SUB"
    },
    "285": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        877
      ],
      "op": "DUP3",
      "path": "8"
    },
    "286": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        877
      ],
      "op": "AND",
      "path": "8"
    },
    "287": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        877
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "289": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        877
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "290": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        877
      ],
      "op": "DUP2",
      "path": "8"
    },
    "291": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        877
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "292": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        867
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "294": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        877
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "296": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        877
      ],
      "op": "DUP2",
      "path": "8"
    },
    "297": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        877
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "298": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        877
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "299": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        877
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "301": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        877
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "302": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        877
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "303": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        877
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "304": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        877
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "305": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        877
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "307": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        877
      ],
      "op": "AND",
      "path": "8"
    },
    "308": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        883
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "309": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        883
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "310": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        853,
        883
      ],
      "op": "EQ",
      "path": "8"
    },
    "311": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        848,
        1007
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x162"
    },
    "314": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        848,
        1007
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "315": {
      "op": "POP"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "322": {
      "op": "SHL"
    },
    "323": {
      "op": "SUB"
    },
    "324": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        923
      ],
      "op": "AND",
      "path": "8",
      "statement": 1
    },
    "325": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        923
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "327": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        923
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "328": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        923
      ],
      "op": "DUP2",
      "path": "8"
    },
    "329": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        923
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "330": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        926,
        930
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "332": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        923
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "334": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        923
      ],
      "op": "DUP2",
      "path": "8"
    },
    "335": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        923
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "336": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        923
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "337": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        923
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "339": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        923
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "340": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        923
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "341": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        923
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "342": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        930
      ],
      "op": "DUP1",
      "path": "8"
    },
    "343": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        930
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "344": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "346": {
      "op": "NOT"
    },
    "347": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        930
      ],
      "op": "AND",
      "path": "8"
    },
    "348": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        930
      ],
      "op": "DUP3",
      "path": "8"
    },
    "349": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        930
      ],
      "op": "OR",
      "path": "8"
    },
    "350": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        930
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "351": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        899,
        930
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "352": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        926,
        930
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "353": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "jump": "o",
      "offset": [
        748,
        1013
      ],
      "op": "JUMP",
      "path": "8"
    },
    "354": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        848,
        1007
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "355": {
      "op": "POP"
    },
    "356": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        991,
        996
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 2,
      "value": "0x0"
    },
    "358": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        848,
        1007
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "359": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        748,
        1013
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "360": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        748,
        1013
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "361": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "offset": [
        748,
        1013
      ],
      "op": "POP",
      "path": "8"
    },
    "362": {
      "fn": "RegistryAuthorization.registerAuthorizeUser",
      "jump": "o",
      "offset": [
        748,
        1013
      ],
      "op": "JUMP",
      "path": "8"
    },
    "363": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        326,
        546
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "364": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        413,
        425
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "366": {
      "offset": [
        551,
        556
      ],
      "op": "DUP1",
      "path": "8"
    },
    "367": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        551,
        556
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "374": {
      "op": "SHL"
    },
    "375": {
      "op": "SUB"
    },
    "376": {
      "offset": [
        551,
        556
      ],
      "op": "AND",
      "path": "8"
    },
    "377": {
      "offset": [
        537,
        547
      ],
      "op": "CALLER",
      "path": "8"
    },
    "378": {
      "offset": [
        537,
        556
      ],
      "op": "EQ",
      "path": "8"
    },
    "379": {
      "branch": 6,
      "fn": "Issuer.registerIssuer",
      "offset": [
        537,
        556
      ],
      "op": "DUP1",
      "path": "8"
    },
    "380": {
      "offset": [
        537,
        586
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x194"
    },
    "383": {
      "branch": 6,
      "offset": [
        537,
        586
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "384": {
      "op": "POP"
    },
    "385": {
      "offset": [
        575,
        585
      ],
      "op": "CALLER",
      "path": "8"
    },
    "386": {
      "offset": [
        560,
        586
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "388": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        560,
        586
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "389": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        560,
        586
      ],
      "op": "DUP2",
      "path": "8"
    },
    "390": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        560,
        586
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "391": {
      "offset": [
        560,
        574
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "393": {
      "offset": [
        560,
        586
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "395": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        560,
        586
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "396": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        560,
        586
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "398": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        560,
        586
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "399": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        560,
        586
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "400": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        560,
        586
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "401": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        560,
        586
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "403": {
      "branch": 7,
      "fn": "Issuer.registerIssuer",
      "offset": [
        560,
        586
      ],
      "op": "AND",
      "path": "8"
    },
    "404": {
      "offset": [
        537,
        586
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "405": {
      "offset": [
        529,
        587
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x19D"
    },
    "408": {
      "branch": 7,
      "offset": [
        529,
        587
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "409": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        529,
        587
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "411": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        529,
        587
      ],
      "op": "DUP1",
      "path": "8"
    },
    "412": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        529,
        587
      ],
      "op": "REVERT",
      "path": "8"
    },
    "413": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        529,
        587
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "420": {
      "op": "SHL"
    },
    "421": {
      "op": "SUB"
    },
    "422": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        438,
        459
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 3
    },
    "423": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        438,
        459
      ],
      "op": "AND",
      "path": "6"
    },
    "424": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        438,
        459
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "426": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        438,
        459
      ],
      "op": "DUP2",
      "path": "6"
    },
    "427": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        438,
        459
      ],
      "op": "DUP2",
      "path": "6"
    },
    "428": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        438,
        459
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "429": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        438,
        451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "431": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        438,
        459
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "433": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        438,
        459
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "434": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        438,
        459
      ],
      "op": "DUP2",
      "path": "6"
    },
    "435": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        438,
        459
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "436": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        438,
        459
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "438": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        438,
        459
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "439": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        438,
        459
      ],
      "op": "DUP3",
      "path": "6"
    },
    "440": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        438,
        459
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "441": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        438,
        459
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "442": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        438,
        471
      ],
      "op": "DUP6",
      "path": "6"
    },
    "443": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        438,
        471
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "444": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        438,
        471
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "445": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        486,
        518
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 4
    },
    "446": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        486,
        518
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "447": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        496,
        500
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "449": {
      "op": "DUP2"
    },
    "450": {
      "op": "MSTORE"
    },
    "451": {
      "op": "SWAP1"
    },
    "452": {
      "op": "DUP2"
    },
    "453": {
      "op": "ADD"
    },
    "454": {
      "op": "DUP6"
    },
    "455": {
      "op": "SWAP1"
    },
    "456": {
      "op": "MSTORE"
    },
    "457": {
      "op": "DUP1"
    },
    "458": {
      "op": "DUP3"
    },
    "459": {
      "op": "ADD"
    },
    "460": {
      "op": "SWAP3"
    },
    "461": {
      "op": "SWAP1"
    },
    "462": {
      "op": "SWAP3"
    },
    "463": {
      "op": "MSTORE"
    },
    "464": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        486,
        518
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "465": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        486,
        518
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x7A0F50B566AB4225B0F298A229BCF96D4BA86D1C6C43D48AD0F0F6D96F68413D"
    },
    "498": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        486,
        518
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "499": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        486,
        518
      ],
      "op": "DUP2",
      "path": "6"
    },
    "500": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        486,
        518
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "501": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        486,
        518
      ],
      "op": "SUB",
      "path": "6"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "504": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        486,
        518
      ],
      "op": "ADD",
      "path": "6"
    },
    "505": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        486,
        518
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "506": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        486,
        518
      ],
      "op": "LOG1",
      "path": "6"
    },
    "507": {
      "op": "POP"
    },
    "508": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        535,
        539
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 5,
      "value": "0x1"
    },
    "510": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        326,
        546
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "511": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        326,
        546
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "512": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        326,
        546
      ],
      "op": "POP",
      "path": "6"
    },
    "513": {
      "fn": "Issuer.registerIssuer",
      "offset": [
        326,
        546
      ],
      "op": "POP",
      "path": "6"
    },
    "514": {
      "fn": "Issuer.registerIssuer",
      "jump": "o",
      "offset": [
        326,
        546
      ],
      "op": "JUMP",
      "path": "6"
    },
    "515": {
      "op": "JUMPDEST"
    },
    "516": {
      "op": "DUP1"
    },
    "517": {
      "op": "CALLDATALOAD"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "524": {
      "op": "SHL"
    },
    "525": {
      "op": "SUB"
    },
    "526": {
      "op": "DUP2"
    },
    "527": {
      "op": "AND"
    },
    "528": {
      "op": "DUP2"
    },
    "529": {
      "op": "EQ"
    },
    "530": {
      "op": "PUSH2",
      "value": "0x166"
    },
    "533": {
      "op": "JUMPI"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "536": {
      "op": "DUP1"
    },
    "537": {
      "op": "REVERT"
    },
    "538": {
      "op": "JUMPDEST"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "541": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "543": {
      "op": "DUP3"
    },
    "544": {
      "op": "DUP5"
    },
    "545": {
      "op": "SUB"
    },
    "546": {
      "op": "SLT"
    },
    "547": {
      "op": "ISZERO"
    },
    "548": {
      "op": "PUSH2",
      "value": "0x22C"
    },
    "551": {
      "op": "JUMPI"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "554": {
      "op": "DUP1"
    },
    "555": {
      "op": "REVERT"
    },
    "556": {
      "op": "JUMPDEST"
    },
    "557": {
      "op": "PUSH2",
      "value": "0x235"
    },
    "560": {
      "op": "DUP3"
    },
    "561": {
      "op": "PUSH2",
      "value": "0x203"
    },
    "564": {
      "jump": "i",
      "op": "JUMP"
    },
    "565": {
      "op": "JUMPDEST"
    },
    "566": {
      "op": "SWAP4"
    },
    "567": {
      "op": "SWAP3"
    },
    "568": {
      "op": "POP"
    },
    "569": {
      "op": "POP"
    },
    "570": {
      "op": "POP"
    },
    "571": {
      "jump": "o",
      "op": "JUMP"
    },
    "572": {
      "op": "JUMPDEST"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "575": {
      "op": "DUP1"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "578": {
      "op": "DUP4"
    },
    "579": {
      "op": "DUP6"
    },
    "580": {
      "op": "SUB"
    },
    "581": {
      "op": "SLT"
    },
    "582": {
      "op": "ISZERO"
    },
    "583": {
      "op": "PUSH2",
      "value": "0x24F"
    },
    "586": {
      "op": "JUMPI"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "589": {
      "op": "DUP1"
    },
    "590": {
      "op": "REVERT"
    },
    "591": {
      "op": "JUMPDEST"
    },
    "592": {
      "op": "PUSH2",
      "value": "0x258"
    },
    "595": {
      "op": "DUP4"
    },
    "596": {
      "op": "PUSH2",
      "value": "0x203"
    },
    "599": {
      "jump": "i",
      "op": "JUMP"
    },
    "600": {
      "op": "JUMPDEST"
    },
    "601": {
      "op": "SWAP5"
    },
    "602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "604": {
      "op": "SWAP4"
    },
    "605": {
      "op": "SWAP1"
    },
    "606": {
      "op": "SWAP4"
    },
    "607": {
      "op": "ADD"
    },
    "608": {
      "op": "CALLDATALOAD"
    },
    "609": {
      "op": "SWAP4"
    },
    "610": {
      "op": "POP"
    },
    "611": {
      "op": "POP"
    },
    "612": {
      "op": "POP"
    },
    "613": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "312750419ad90e825457ed95b883cd65bd1e021f",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\n\n\nimport \"./RegistryAuthorization.sol\";\n\n// this contract provides issuer data for registry smart contract\n\ncontract Issuer is RegistryAuthorization {\n\n    event IsSuccess(\n        bool value,\n        bytes32 hashData,\n        address issuer\n        );\n    \n    function registerIssuer (address issuer, bytes32 _hashData) grantAccess public returns(bool success)  {\n        issuerMapping[issuer] = _hashData;\n        emit IsSuccess(true,_hashData,issuer);\n        return true;\n    }\n\n    //testing and debugging\n    event DebugVerifyIssuer(\n        address _address,\n        bool result\n    );\n\n    function verifyIssuer (address _address) public view returns(bool){\n        return issuerMapping[_address]>0;\n    }\n\n}\n\n",
  "sourceMap": "172:609:6:-:0;;;;;;;;;;;;-1:-1:-1;376:5:8;:27;;-1:-1:-1;;;;;;376:27:8;392:10;376:27;;;172:609:6;;;;;;",
  "sourcePath": "contracts/Registry/IssuerData.sol",
  "type": "contract"
}