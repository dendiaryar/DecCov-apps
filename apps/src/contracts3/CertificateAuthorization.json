{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registry_sc",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "Registry_sc",
          "type": "address"
        }
      ],
      "name": "DebugRegistryAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "result",
          "type": "string"
        }
      ],
      "name": "IsSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "is_exist",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "cov_certificate_identifier",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "certificate_data",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct CertificateData.COV_CERTIFICATE",
          "name": "certificate_data",
          "type": "tuple"
        }
      ],
      "name": "certificateExist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "is_exist",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "cov_certificate_identifier",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "certificate_data",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct CertificateData.COV_CERTIFICATE[]",
          "name": "certificate_data",
          "type": "tuple[]"
        }
      ],
      "name": "getCertificate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "isFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "timestampEvent",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/Certificate/CertificateAuthorization.sol",
    "2": "contracts/Certificate/Data.sol",
    "4": "contracts/Certificate/Helper.sol"
  },
  "ast": {
    "absolutePath": "contracts/Certificate/CertificateAuthorization.sol",
    "exportedSymbols": {
      "CertificateAuthorization": [
        96
      ],
      "CertificateData": [
        112
      ],
      "Helper": [
        366
      ],
      "IssuerData": [
        25
      ]
    },
    "id": 97,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:1"
      },
      {
        "absolutePath": "contracts/Certificate/Helper.sol",
        "file": "./Helper.sol",
        "id": 17,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 97,
        "sourceUnit": 367,
        "src": "64:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 25,
        "linearizedBaseContracts": [
          25
        ],
        "name": "IssuerData",
        "nameLocation": "170:10:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "7547402a",
            "id": 24,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkIssuerExist",
            "nameLocation": "196:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "issuer",
                  "nameLocation": "221:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "213:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "213:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "212:16:1"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "247:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "247:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "246:6:1"
            },
            "scope": 25,
            "src": "187:66:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 97,
        "src": "160:95:1",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 26,
              "name": "Helper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 366,
              "src": "294:6:1"
            },
            "id": 27,
            "nodeType": "InheritanceSpecifier",
            "src": "294:6:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 96,
        "linearizedBaseContracts": [
          96,
          366,
          112
        ],
        "name": "CertificateAuthorization",
        "nameLocation": "266:24:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "_Registry",
            "nameLocation": "322:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 96,
            "src": "306:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 28,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "306:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 35,
            "mutability": "mutable",
            "name": "seenNonces",
            "nameLocation": "391:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 96,
            "src": "337:64:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(uint256 => bool))"
            },
            "typeName": {
              "id": 34,
              "keyType": {
                "id": 30,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "345:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "337:44:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(uint256 => bool))"
              },
              "valueType": {
                "id": 33,
                "keyType": {
                  "id": 31,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "364:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "356:24:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "valueType": {
                  "id": 32,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "375:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 37,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "484:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 96,
            "src": "460:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 36,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "460:15:1",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "578:77:1",
              "statements": [
                {
                  "expression": {
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "588:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 45,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "604:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "604:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "596:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 43,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "596:8:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "596:19:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "588:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "588:27:1"
                },
                {
                  "expression": {
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50,
                      "name": "_Registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "625:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 51,
                      "name": "registry_sc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "637:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "625:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "625:23:1"
                }
              ]
            },
            "id": 55,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "registry_sc",
                  "nameLocation": "565:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "557:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:21:1"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "578:0:1"
            },
            "scope": 96,
            "src": "545:110:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 59,
            "name": "DebugRegistryAddress",
            "nameLocation": "688:20:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Registry_sc",
                  "nameLocation": "726:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "718:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "708:35:1"
            },
            "src": "682:62:1"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "828:33:1",
              "statements": [
                {
                  "expression": {
                    "id": 64,
                    "name": "_Registry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29,
                    "src": "845:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 63,
                  "id": 65,
                  "nodeType": "Return",
                  "src": "838:16:1"
                }
              ]
            },
            "functionSelector": "f21de1e8",
            "id": 67,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRegistryAddress",
            "nameLocation": "780:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "798:2:1"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "820:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "819:9:1"
            },
            "scope": 96,
            "src": "771:90:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "934:70:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "990:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 75,
                            "name": "_Registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "962:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 74,
                          "name": "IssuerData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "951:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IssuerData_$25_$",
                            "typeString": "type(contract IssuerData)"
                          }
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "951:21:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IssuerData_$25",
                          "typeString": "contract IssuerData"
                        }
                      },
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checkIssuerExist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "951:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) external returns (bool)"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "951:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 73,
                  "id": 80,
                  "nodeType": "Return",
                  "src": "944:53:1"
                }
              ]
            },
            "id": 82,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkSignerIsIssuer",
            "nameLocation": "876:19:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "904:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "896:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "895:16:1"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "928:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "927:6:1"
            },
            "scope": 96,
            "src": "867:137:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "1032:76:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 86,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1070:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 87,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1070:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 85,
                            "name": "checkSignerIsIssuer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "1050:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) returns (bool)"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1050:31:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1085:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1050:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1042:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1042:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "1042:48:1"
                },
                {
                  "id": 93,
                  "nodeType": "PlaceholderStatement",
                  "src": "1100:1:1"
                }
              ]
            },
            "id": 95,
            "name": "grantAccess",
            "nameLocation": "1019:11:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1030:2:1"
            },
            "src": "1010:98:1",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 97,
        "src": "257:853:1",
        "usedErrors": []
      }
    ],
    "src": "32:1078:1"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161012238038061012283398101604081905261002f91610062565b60038054336001600160a01b031991821617909155600180549091166001600160a01b0392909216919091179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b6082806100a06000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063f21de1e814602d575b600080fd5b600154604080516001600160a01b039092168252519081900360200190f3fea26469706673582212208dfa19f15fe0137348d7121a038ff46cfb0fe88d8c323c879a2316a0f8dd7d3264736f6c63430008070033",
  "bytecodeSha1": "e221ce31298e5a86c36a809b6a42f91836530813",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "CertificateAuthorization",
  "coverageMap": {
    "branches": {
      "1": {},
      "2": {},
      "4": {}
    },
    "statements": {
      "1": {
        "CertificateAuthorization.getRegistryAddress": {
          "0": [
            838,
            854
          ]
        }
      },
      "2": {},
      "4": {}
    }
  },
  "dependencies": [
    "CertificateData",
    "Helper",
    "IssuerData"
  ],
  "deployedBytecode": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063f21de1e814602d575b600080fd5b600154604080516001600160a01b039092168252519081900360200190f3fea26469706673582212208dfa19f15fe0137348d7121a038ff46cfb0fe88d8c323c879a2316a0f8dd7d3264736f6c63430008070033",
  "deployedSourceMap": "257:853:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;771:90;845:9;;771:90;;;-1:-1:-1;;;;;845:9:1;;;160:51:8;;771:90:1;;;;;148:2:8;771:90:1;;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    257,
    1110
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF21DE1E8 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 STATICCALL NOT CALL 0x5F 0xE0 SGT PUSH20 0x48D7121A038FF46CFB0FE88D8C323C879A2316A0 0xF8 0xDD PUSH30 0x3264736F6C63430008070033000000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        257,
        1110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "10": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "DUP1",
      "path": "1"
    },
    "14": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "REVERT",
      "path": "1"
    },
    "15": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "POP",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "19": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "20": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "LT",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x28"
    },
    "23": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "24": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "26": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "27": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "29": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "SHR",
      "path": "1"
    },
    "30": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "DUP1",
      "path": "1"
    },
    "31": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF21DE1E8"
    },
    "36": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "EQ",
      "path": "1"
    },
    "37": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2D"
    },
    "39": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "40": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "41": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "43": {
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "first_revert": true,
      "fn": null,
      "offset": [
        257,
        1110
      ],
      "op": "REVERT",
      "path": "1"
    },
    "45": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        771,
        861
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "46": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        845,
        854
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x1"
    },
    "48": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        845,
        854
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "49": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        771,
        861
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "51": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        771,
        861
      ],
      "op": "DUP1",
      "path": "1"
    },
    "52": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        771,
        861
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "53": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "55": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "57": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "59": {
      "op": "SHL"
    },
    "60": {
      "op": "SUB"
    },
    "61": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        845,
        854
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "62": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        845,
        854
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "63": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        845,
        854
      ],
      "op": "AND",
      "path": "1"
    },
    "64": {
      "op": "DUP3"
    },
    "65": {
      "op": "MSTORE"
    },
    "66": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        771,
        861
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "67": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        771,
        861
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "68": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        771,
        861
      ],
      "op": "DUP2",
      "path": "1"
    },
    "69": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        771,
        861
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "70": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        771,
        861
      ],
      "op": "SUB",
      "path": "1"
    },
    "71": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "73": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        771,
        861
      ],
      "op": "ADD",
      "path": "1"
    },
    "74": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        771,
        861
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "75": {
      "fn": "CertificateAuthorization.getRegistryAddress",
      "offset": [
        771,
        861
      ],
      "op": "RETURN",
      "path": "1"
    }
  },
  "sha1": "6bcf35d411628fe488c4135f9c238b13a2a74b52",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\nimport \"./Helper.sol\";\n\n// this contract provides authorization for certificate smart contract\n\ninterface IssuerData {\n    function checkIssuerExist(address issuer) external returns (bool);\n}\n\ncontract CertificateAuthorization is Helper{\n    address private _Registry;\n    mapping(address => mapping(uint256 => bool)) internal seenNonces;\n\n    //owner mean the one who deployed this contract\n    address payable private owner;\n\n    //constructor will be inherit by child class\n    constructor(address registry_sc) {\n        owner = payable(msg.sender);\n        _Registry = registry_sc;\n    }\n\n    //debugging code\n    event DebugRegistryAddress(\n        address Registry_sc\n    );\n\n    //debugging code\n    function getRegistryAddress()public view returns(address){\n        return _Registry;\n    }\n\n    function checkSignerIsIssuer(address sender) private returns(bool) {\n        return IssuerData(_Registry).checkIssuerExist(sender);\n    }\n\n    modifier grantAccess(){\n        require(checkSignerIsIssuer(msg.sender) == true);\n        _;\n    }\n}",
  "sourceMap": "257:853:1:-:0;;;545:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;588:5;:27;;604:10;-1:-1:-1;;;;;;588:27:1;;;;;;;-1:-1:-1;625:23:1;;;;;-1:-1:-1;;;;;625:23:1;;;;;;;;;;257:853;;14:290:8;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:8;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:8:o;:::-;257:853:1;;;;;;",
  "sourcePath": "contracts/Certificate/CertificateAuthorization.sol",
  "type": "contract"
}